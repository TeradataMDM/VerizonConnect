DROP TABLE SYS_NC_SQLS CASCADE CONSTRAINTS;

CREATE TABLE SYS_NC_SQLS (TABLE_NAME VARCHAR2(400),SQLSTRING LONG);

INSERT INTO SYS_NC_SQLS VALUES ('IN_ACCT', 'INSERT INTO NC_ACCT ( SCENARIO_ID,ACCT_ID,ACCT_NAME,ACCT_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACCT_ID,ACCT_NAME,ACCT_TYPE_CD,''INSERT'',''VALID'' FROM IN_ACCT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_ACCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_ID = t2.ACCT_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ACCT', 'INSERT INTO NC_ACCT ( SCENARIO_ID,ACCT_ID,ACCT_NAME,ACCT_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACCT_ID,ACCT_NAME,ACCT_TYPE_CD,''DELETE'',''VALID'' FROM M_ACCT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ACCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_ID = t2.ACCT_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_ACCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_ID = t2.ACCT_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ACCT', 'INSERT INTO NC_ACCT ( SCENARIO_ID,ACCT_ID,ACCT_NAME,ACCT_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACCT_ID,t1.ACCT_NAME,t1.ACCT_TYPE_CD,''UPDATE'',''VALID'' FROM IN_ACCT t1, M_ACCT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_ID = t2.ACCT_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ACCT_ID <> t2.ACCT_ID OR ( t1.ACCT_ID IS NULL AND t2.ACCT_ID IS NOT NULL) OR (t1.ACCT_ID IS NOT NULL AND t2.ACCT_ID IS NULL)) OR (t1.ACCT_NAME <> t2.ACCT_NAME OR ( t1.ACCT_NAME IS NULL AND t2.ACCT_NAME IS NOT NULL) OR (t1.ACCT_NAME IS NOT NULL AND t2.ACCT_NAME IS NULL)) OR (t1.ACCT_TYPE_CD <> t2.ACCT_TYPE_CD OR ( t1.ACCT_TYPE_CD IS NULL AND t2.ACCT_TYPE_CD IS NOT NULL) OR (t1.ACCT_TYPE_CD IS NOT NULL AND t2.ACCT_TYPE_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ACCT', 'INSERT INTO NC_ACCT ( SCENARIO_ID,ACCT_ID,ACCT_NAME,ACCT_TYPE_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACCT_ID,t1.ACCT_NAME,t1.ACCT_TYPE_CD,''ACTIVATE'',''VALID'' FROM IN_ACCT t1, M_ACCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_ID = t2.ACCT_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ADDR', 'INSERT INTO NC_ADDR ( SCENARIO_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,CURR_ADDR_STS_CD,CURR_ADDR_STS_DT,CURR_ADDR_STS_SRC_CD,ADDR_STDZD_TXT,ADDR_INVLD_FLG,ADDR_Ignore_FLG,ADDR_ABUSED_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,CURR_ADDR_STS_CD,CURR_ADDR_STS_DT,CURR_ADDR_STS_SRC_CD,ADDR_STDZD_TXT,ADDR_INVLD_FLG,ADDR_Ignore_FLG,ADDR_ABUSED_FLG,''INSERT'',''VALID'' FROM IN_ADDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ADDR', 'INSERT INTO NC_ADDR ( SCENARIO_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,CURR_ADDR_STS_CD,CURR_ADDR_STS_DT,CURR_ADDR_STS_SRC_CD,ADDR_STDZD_TXT,ADDR_INVLD_FLG,ADDR_Ignore_FLG,ADDR_ABUSED_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,CURR_ADDR_STS_CD,CURR_ADDR_STS_DT,CURR_ADDR_STS_SRC_CD,ADDR_STDZD_TXT,ADDR_INVLD_FLG,ADDR_Ignore_FLG,ADDR_ABUSED_FLG,''DELETE'',''VALID'' FROM M_ADDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ADDR', 'INSERT INTO NC_ADDR ( SCENARIO_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,CURR_ADDR_STS_CD,CURR_ADDR_STS_DT,CURR_ADDR_STS_SRC_CD,ADDR_STDZD_TXT,ADDR_INVLD_FLG,ADDR_Ignore_FLG,ADDR_ABUSED_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ADDR_ID,t1.ADDR_TYPE_CD,t1.ADDR_SUBTYPE_CD,t1.CURR_ADDR_STS_CD,t1.CURR_ADDR_STS_DT,t1.CURR_ADDR_STS_SRC_CD,t1.ADDR_STDZD_TXT,t1.ADDR_INVLD_FLG,t1.ADDR_Ignore_FLG,t1.ADDR_ABUSED_FLG,''UPDATE'',''VALID'' FROM IN_ADDR t1, M_ADDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ADDR_ID <> t2.ADDR_ID OR ( t1.ADDR_ID IS NULL AND t2.ADDR_ID IS NOT NULL) OR (t1.ADDR_ID IS NOT NULL AND t2.ADDR_ID IS NULL)) OR (t1.ADDR_TYPE_CD <> t2.ADDR_TYPE_CD OR ( t1.ADDR_TYPE_CD IS NULL AND t2.ADDR_TYPE_CD IS NOT NULL) OR (t1.ADDR_TYPE_CD IS NOT NULL AND t2.ADDR_TYPE_CD IS NULL)) OR (t1.ADDR_SUBTYPE_CD <> t2.ADDR_SUBTYPE_CD OR ( t1.ADDR_SUBTYPE_CD IS NULL AND t2.ADDR_SUBTYPE_CD IS NOT NULL) OR (t1.ADDR_SUBTYPE_CD IS NOT NULL AND t2.ADDR_SUBTYPE_CD IS NULL)) OR (t1.CURR_ADDR_STS_CD <> t2.CURR_ADDR_STS_CD OR ( t1.CURR_ADDR_STS_CD IS NULL AND t2.CURR_ADDR_STS_CD IS NOT NULL) OR (t1.CURR_ADDR_STS_CD IS NOT NULL AND t2.CURR_ADDR_STS_CD IS NULL)) OR (t1.CURR_ADDR_STS_DT <> t2.CURR_ADDR_STS_DT OR ( t1.CURR_ADDR_STS_DT IS NULL AND t2.CURR_ADDR_STS_DT IS NOT NULL) OR (t1.CURR_ADDR_STS_DT IS NOT NULL AND t2.CURR_ADDR_STS_DT IS NULL)) OR (t1.CURR_ADDR_STS_SRC_CD <> t2.CURR_ADDR_STS_SRC_CD OR ( t1.CURR_ADDR_STS_SRC_CD IS NULL AND t2.CURR_ADDR_STS_SRC_CD IS NOT NULL) OR (t1.CURR_ADDR_STS_SRC_CD IS NOT NULL AND t2.CURR_ADDR_STS_SRC_CD IS NULL)) OR (t1.ADDR_STDZD_TXT <> t2.ADDR_STDZD_TXT OR ( t1.ADDR_STDZD_TXT IS NULL AND t2.ADDR_STDZD_TXT IS NOT NULL) OR (t1.ADDR_STDZD_TXT IS NOT NULL AND t2.ADDR_STDZD_TXT IS NULL)) OR (t1.ADDR_INVLD_FLG <> t2.ADDR_INVLD_FLG OR ( t1.ADDR_INVLD_FLG IS NULL AND t2.ADDR_INVLD_FLG IS NOT NULL) OR (t1.ADDR_INVLD_FLG IS NOT NULL AND t2.ADDR_INVLD_FLG IS NULL)) OR (t1.ADDR_Ignore_FLG <> t2.ADDR_Ignore_FLG OR ( t1.ADDR_Ignore_FLG IS NULL AND t2.ADDR_Ignore_FLG IS NOT NULL) OR (t1.ADDR_Ignore_FLG IS NOT NULL AND t2.ADDR_Ignore_FLG IS NULL)) OR (t1.ADDR_Abused_FLG <> t2.ADDR_Abused_FLG OR ( t1.ADDR_Abused_FLG IS NULL AND t2.ADDR_Abused_FLG IS NOT NULL) OR (t1.ADDR_Abused_FLG IS NOT NULL AND t2.ADDR_Abused_FLG IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ADDR', 'INSERT INTO NC_ADDR ( SCENARIO_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,CURR_ADDR_STS_CD,CURR_ADDR_STS_DT,CURR_ADDR_STS_SRC_CD,ADDR_STDZD_TXT,ADDR_INVLD_FLG,ADDR_Ignore_FLG,ADDR_ABUSED_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ADDR_ID,t1.ADDR_TYPE_CD,t1.ADDR_SUBTYPE_CD,t1.CURR_ADDR_STS_CD,t1.CURR_ADDR_STS_DT,t1.CURR_ADDR_STS_SRC_CD,t1.ADDR_STDZD_TXT,t1.ADDR_INVLD_FLG,t1.ADDR_Ignore_FLG,t1.ADDR_ABUSED_FLG,''ACTIVATE'',''VALID'' FROM IN_ADDR t1, M_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_SET', 'INSERT INTO NC_GRP_ATTR_SET ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,''INSERT'',''VALID'' FROM GP_IN_GRP_ATTR_SET t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GP_MST_GRP_ATTR_SET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_SET', 'INSERT INTO NC_GRP_ATTR_SET ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,''DELETE'',''VALID'' FROM GP_MST_GRP_ATTR_SET t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_IN_GRP_ATTR_SET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_ERR_GRP_ATTR_SET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_SET', 'INSERT INTO NC_GRP_ATTR_SET ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.ATTRIBUTE_SET_NAME,t1.ATTRIBUTE_SET_DESCRIPTION,t1.GROUP_CLASS_ID,t1.UPDT_PRIORITY,''UPDATE'',''VALID'' FROM GP_IN_GRP_ATTR_SET t1, GP_MST_GRP_ATTR_SET t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Attribute_Set_Id <> t2.Attribute_Set_Id OR ( t1.Attribute_Set_Id IS NULL AND t2.Attribute_Set_Id IS NOT NULL) OR (t1.Attribute_Set_Id IS NOT NULL AND t2.Attribute_Set_Id IS NULL)) OR (t1.Attribute_Set_Name <> t2.Attribute_Set_Name OR ( t1.Attribute_Set_Name IS NULL AND t2.Attribute_Set_Name IS NOT NULL) OR (t1.Attribute_Set_Name IS NOT NULL AND t2.Attribute_Set_Name IS NULL)) OR (t1.Attribute_Set_Description <> t2.Attribute_Set_Description OR ( t1.Attribute_Set_Description IS NULL AND t2.Attribute_Set_Description IS NOT NULL) OR (t1.Attribute_Set_Description IS NOT NULL AND t2.Attribute_Set_Description IS NULL)) OR (t1.Group_Class_Id <> t2.Group_Class_Id OR ( t1.Group_Class_Id IS NULL AND t2.Group_Class_Id IS NOT NULL) OR (t1.Group_Class_Id IS NOT NULL AND t2.Group_Class_Id IS NULL)) OR (t1.Updt_Priority <> t2.Updt_Priority OR ( t1.Updt_Priority IS NULL AND t2.Updt_Priority IS NOT NULL) OR (t1.Updt_Priority IS NOT NULL AND t2.Updt_Priority IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_SET', 'INSERT INTO NC_GRP_ATTR_SET ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_SET_NAME,ATTRIBUTE_SET_DESCRIPTION,GROUP_CLASS_ID,UPDT_PRIORITY,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.ATTRIBUTE_SET_NAME,t1.ATTRIBUTE_SET_DESCRIPTION,t1.GROUP_CLASS_ID,t1.UPDT_PRIORITY,''ACTIVATE'',''VALID'' FROM GP_IN_GRP_ATTR_SET t1, GP_MST_GRP_ATTR_SET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_SET_DETAIL', 'INSERT INTO NC_GRP_ATTR_SET_DETAIL ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,''INSERT'',''VALID'' FROM GP_IN_GRP_ATTR_SET_DETAIL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GP_MST_GRP_ATTR_SET_DETAIL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_SET_DETAIL', 'INSERT INTO NC_GRP_ATTR_SET_DETAIL ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,''DELETE'',''VALID'' FROM GP_MST_GRP_ATTR_SET_DETAIL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_IN_GRP_ATTR_SET_DETAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_ERR_GRP_ATTR_SET_DETAIL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_SET_DETAIL', 'INSERT INTO NC_GRP_ATTR_SET_DETAIL ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.ATTRIBUTE_DESCRIPTION,t1.UPDT_PHY_COL_NAME,t1.UPDT_LOG_COL_NAME,''UPDATE'',''VALID'' FROM GP_IN_GRP_ATTR_SET_DETAIL t1, GP_MST_GRP_ATTR_SET_DETAIL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Attribute_Set_Id <> t2.Attribute_Set_Id OR ( t1.Attribute_Set_Id IS NULL AND t2.Attribute_Set_Id IS NOT NULL) OR (t1.Attribute_Set_Id IS NOT NULL AND t2.Attribute_Set_Id IS NULL)) OR (t1.Attribute_Description <> t2.Attribute_Description OR ( t1.Attribute_Description IS NULL AND t2.Attribute_Description IS NOT NULL) OR (t1.Attribute_Description IS NOT NULL AND t2.Attribute_Description IS NULL)) OR (t1.Updt_Phy_Col_Name <> t2.Updt_Phy_Col_Name OR ( t1.Updt_Phy_Col_Name IS NULL AND t2.Updt_Phy_Col_Name IS NOT NULL) OR (t1.Updt_Phy_Col_Name IS NOT NULL AND t2.Updt_Phy_Col_Name IS NULL)) OR (t1.Updt_Log_Col_Name <> t2.Updt_Log_Col_Name OR ( t1.Updt_Log_Col_Name IS NULL AND t2.Updt_Log_Col_Name IS NOT NULL) OR (t1.Updt_Log_Col_Name IS NOT NULL AND t2.Updt_Log_Col_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_SET_DETAIL', 'INSERT INTO NC_GRP_ATTR_SET_DETAIL ( SCENARIO_ID,ATTRIBUTE_SET_ID,ATTRIBUTE_DESCRIPTION,UPDT_PHY_COL_NAME,UPDT_LOG_COL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.ATTRIBUTE_DESCRIPTION,t1.UPDT_PHY_COL_NAME,t1.UPDT_LOG_COL_NAME,''ACTIVATE'',''VALID'' FROM GP_IN_GRP_ATTR_SET_DETAIL t1, GP_MST_GRP_ATTR_SET_DETAIL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_PREFRC', 'INSERT INTO NC_CNTCT_PREFRC ( SCENARIO_ID,CNTCT_PREFRC_ID,CUST_ID,ADDR_ID,LOB_NUM,CNTCT_PREFRC_STRT_DT,CNTCT_PREFRC_END_DT,CNTCT_PREFRC_NAME,CHNL_TYPE_CD,CNTCT_PREFRC_CD,CUST_ADDR_USG_type_CD,CUST_ADDR_STRT_DT,SMS_ALLWD_IND,MKTG_PRG_ID,UNVRSL_AUTHZTN_LANG_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_PREFRC_ID,CUST_ID,ADDR_ID,LOB_NUM,CNTCT_PREFRC_STRT_DT,CNTCT_PREFRC_END_DT,CNTCT_PREFRC_NAME,CHNL_TYPE_CD,CNTCT_PREFRC_CD,CUST_ADDR_USG_type_CD,CUST_ADDR_STRT_DT,SMS_ALLWD_IND,MKTG_PRG_ID,UNVRSL_AUTHZTN_LANG_CD,''INSERT'',''VALID'' FROM IN_CNTCT_PREFRC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_CNTCT_PREFRC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_PREFRC_ID = t2.CNTCT_PREFRC_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_PREFRC', 'INSERT INTO NC_CNTCT_PREFRC ( SCENARIO_ID,CNTCT_PREFRC_ID,CUST_ID,ADDR_ID,LOB_NUM,CNTCT_PREFRC_STRT_DT,CNTCT_PREFRC_END_DT,CNTCT_PREFRC_NAME,CHNL_TYPE_CD,CNTCT_PREFRC_CD,CUST_ADDR_USG_type_CD,CUST_ADDR_STRT_DT,SMS_ALLWD_IND,MKTG_PRG_ID,UNVRSL_AUTHZTN_LANG_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CNTCT_PREFRC_ID,CUST_ID,ADDR_ID,LOB_NUM,CNTCT_PREFRC_STRT_DT,CNTCT_PREFRC_END_DT,CNTCT_PREFRC_NAME,CHNL_TYPE_CD,CNTCT_PREFRC_CD,CUST_ADDR_USG_type_CD,CUST_ADDR_STRT_DT,SMS_ALLWD_IND,MKTG_PRG_ID,UNVRSL_AUTHZTN_LANG_CD,''DELETE'',''VALID'' FROM M_CNTCT_PREFRC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CNTCT_PREFRC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_PREFRC_ID = t2.CNTCT_PREFRC_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_CNTCT_PREFRC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_PREFRC_ID = t2.CNTCT_PREFRC_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_PREFRC', 'INSERT INTO NC_CNTCT_PREFRC ( SCENARIO_ID,CNTCT_PREFRC_ID,CUST_ID,ADDR_ID,LOB_NUM,CNTCT_PREFRC_STRT_DT,CNTCT_PREFRC_END_DT,CNTCT_PREFRC_NAME,CHNL_TYPE_CD,CNTCT_PREFRC_CD,CUST_ADDR_USG_type_CD,CUST_ADDR_STRT_DT,SMS_ALLWD_IND,MKTG_PRG_ID,UNVRSL_AUTHZTN_LANG_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_PREFRC_ID,t1.CUST_ID,t1.ADDR_ID,t1.LOB_NUM,t1.CNTCT_PREFRC_STRT_DT,t1.CNTCT_PREFRC_END_DT,t1.CNTCT_PREFRC_NAME,t1.CHNL_TYPE_CD,t1.CNTCT_PREFRC_CD,t1.CUST_ADDR_USG_type_CD,t1.CUST_ADDR_STRT_DT,t1.SMS_ALLWD_IND,t1.MKTG_PRG_ID,t1.UNVRSL_AUTHZTN_LANG_CD,''UPDATE'',''VALID'' FROM IN_CNTCT_PREFRC t1, M_CNTCT_PREFRC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_PREFRC_ID = t2.CNTCT_PREFRC_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CNTCT_PREFRC_ID <> t2.CNTCT_PREFRC_ID OR ( t1.CNTCT_PREFRC_ID IS NULL AND t2.CNTCT_PREFRC_ID IS NOT NULL) OR (t1.CNTCT_PREFRC_ID IS NOT NULL AND t2.CNTCT_PREFRC_ID IS NULL)) OR (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.ADDR_ID <> t2.ADDR_ID OR ( t1.ADDR_ID IS NULL AND t2.ADDR_ID IS NOT NULL) OR (t1.ADDR_ID IS NOT NULL AND t2.ADDR_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.CNTCT_PREFRC_STRT_DT <> t2.CNTCT_PREFRC_STRT_DT OR ( t1.CNTCT_PREFRC_STRT_DT IS NULL AND t2.CNTCT_PREFRC_STRT_DT IS NOT NULL) OR (t1.CNTCT_PREFRC_STRT_DT IS NOT NULL AND t2.CNTCT_PREFRC_STRT_DT IS NULL)) OR (t1.CNTCT_PREFRC_END_DT <> t2.CNTCT_PREFRC_END_DT OR ( t1.CNTCT_PREFRC_END_DT IS NULL AND t2.CNTCT_PREFRC_END_DT IS NOT NULL) OR (t1.CNTCT_PREFRC_END_DT IS NOT NULL AND t2.CNTCT_PREFRC_END_DT IS NULL)) OR (t1.CNTCT_PREFRC_NAME <> t2.CNTCT_PREFRC_NAME OR ( t1.CNTCT_PREFRC_NAME IS NULL AND t2.CNTCT_PREFRC_NAME IS NOT NULL) OR (t1.CNTCT_PREFRC_NAME IS NOT NULL AND t2.CNTCT_PREFRC_NAME IS NULL)) OR (t1.CHNL_TYPE_CD <> t2.CHNL_TYPE_CD OR ( t1.CHNL_TYPE_CD IS NULL AND t2.CHNL_TYPE_CD IS NOT NULL) OR (t1.CHNL_TYPE_CD IS NOT NULL AND t2.CHNL_TYPE_CD IS NULL)) OR (t1.CNTCT_PREFRC_CD <> t2.CNTCT_PREFRC_CD OR ( t1.CNTCT_PREFRC_CD IS NULL AND t2.CNTCT_PREFRC_CD IS NOT NULL) OR (t1.CNTCT_PREFRC_CD IS NOT NULL AND t2.CNTCT_PREFRC_CD IS NULL)) OR (t1.CUST_ADDR_USG_type_CD <> t2.CUST_ADDR_USG_type_CD OR ( t1.CUST_ADDR_USG_type_CD IS NULL AND t2.CUST_ADDR_USG_type_CD IS NOT NULL) OR (t1.CUST_ADDR_USG_type_CD IS NOT NULL AND t2.CUST_ADDR_USG_type_CD IS NULL)) OR (t1.CUST_ADDR_STRT_DT <> t2.CUST_ADDR_STRT_DT OR ( t1.CUST_ADDR_STRT_DT IS NULL AND t2.CUST_ADDR_STRT_DT IS NOT NULL) OR (t1.CUST_ADDR_STRT_DT IS NOT NULL AND t2.CUST_ADDR_STRT_DT IS NULL)) OR (t1.SMS_ALLWD_IND <> t2.SMS_ALLWD_IND OR ( t1.SMS_ALLWD_IND IS NULL AND t2.SMS_ALLWD_IND IS NOT NULL) OR (t1.SMS_ALLWD_IND IS NOT NULL AND t2.SMS_ALLWD_IND IS NULL)) OR (t1.MKTG_PRG_ID <> t2.MKTG_PRG_ID OR ( t1.MKTG_PRG_ID IS NULL AND t2.MKTG_PRG_ID IS NOT NULL) OR (t1.MKTG_PRG_ID IS NOT NULL AND t2.MKTG_PRG_ID IS NULL)) OR (t1.UNVRSL_AUTHZTN_LANG_CD <> t2.UNVRSL_AUTHZTN_LANG_CD OR ( t1.UNVRSL_AUTHZTN_LANG_CD IS NULL AND t2.UNVRSL_AUTHZTN_LANG_CD IS NOT NULL) OR (t1.UNVRSL_AUTHZTN_LANG_CD IS NOT NULL AND t2.UNVRSL_AUTHZTN_LANG_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CNTCT_PREFRC', 'INSERT INTO NC_CNTCT_PREFRC ( SCENARIO_ID,CNTCT_PREFRC_ID,CUST_ID,ADDR_ID,LOB_NUM,CNTCT_PREFRC_STRT_DT,CNTCT_PREFRC_END_DT,CNTCT_PREFRC_NAME,CHNL_TYPE_CD,CNTCT_PREFRC_CD,CUST_ADDR_USG_type_CD,CUST_ADDR_STRT_DT,SMS_ALLWD_IND,MKTG_PRG_ID,UNVRSL_AUTHZTN_LANG_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CNTCT_PREFRC_ID,t1.CUST_ID,t1.ADDR_ID,t1.LOB_NUM,t1.CNTCT_PREFRC_STRT_DT,t1.CNTCT_PREFRC_END_DT,t1.CNTCT_PREFRC_NAME,t1.CHNL_TYPE_CD,t1.CNTCT_PREFRC_CD,t1.CUST_ADDR_USG_type_CD,t1.CUST_ADDR_STRT_DT,t1.SMS_ALLWD_IND,t1.MKTG_PRG_ID,t1.UNVRSL_AUTHZTN_LANG_CD,''ACTIVATE'',''VALID'' FROM IN_CNTCT_PREFRC t1, M_CNTCT_PREFRC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_PREFRC_ID = t2.CNTCT_PREFRC_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CTRY', 'INSERT INTO NC_CTRY ( SCENARIO_ID,CTRY_ID,ISO_2_ALPH_CTRY_CD,ISO_3_ALPH_CTRY_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CTRY_ID,ISO_2_ALPH_CTRY_CD,ISO_3_ALPH_CTRY_CD,''INSERT'',''VALID'' FROM IN_CTRY t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_CTRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CTRY_ID = t2.CTRY_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CTRY', 'INSERT INTO NC_CTRY ( SCENARIO_ID,CTRY_ID,ISO_2_ALPH_CTRY_CD,ISO_3_ALPH_CTRY_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CTRY_ID,ISO_2_ALPH_CTRY_CD,ISO_3_ALPH_CTRY_CD,''DELETE'',''VALID'' FROM M_CTRY t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CTRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CTRY_ID = t2.CTRY_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_CTRY t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CTRY_ID = t2.CTRY_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CTRY', 'INSERT INTO NC_CTRY ( SCENARIO_ID,CTRY_ID,ISO_2_ALPH_CTRY_CD,ISO_3_ALPH_CTRY_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CTRY_ID,t1.ISO_2_ALPH_CTRY_CD,t1.ISO_3_ALPH_CTRY_CD,''UPDATE'',''VALID'' FROM IN_CTRY t1, M_CTRY t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CTRY_ID = t2.CTRY_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CTRY_ID <> t2.CTRY_ID OR ( t1.CTRY_ID IS NULL AND t2.CTRY_ID IS NOT NULL) OR (t1.CTRY_ID IS NOT NULL AND t2.CTRY_ID IS NULL)) OR (t1.ISO_2_ALPH_CTRY_CD <> t2.ISO_2_ALPH_CTRY_CD OR ( t1.ISO_2_ALPH_CTRY_CD IS NULL AND t2.ISO_2_ALPH_CTRY_CD IS NOT NULL) OR (t1.ISO_2_ALPH_CTRY_CD IS NOT NULL AND t2.ISO_2_ALPH_CTRY_CD IS NULL)) OR (t1.ISO_3_ALPH_CTRY_CD <> t2.ISO_3_ALPH_CTRY_CD OR ( t1.ISO_3_ALPH_CTRY_CD IS NULL AND t2.ISO_3_ALPH_CTRY_CD IS NOT NULL) OR (t1.ISO_3_ALPH_CTRY_CD IS NOT NULL AND t2.ISO_3_ALPH_CTRY_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CTRY', 'INSERT INTO NC_CTRY ( SCENARIO_ID,CTRY_ID,ISO_2_ALPH_CTRY_CD,ISO_3_ALPH_CTRY_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CTRY_ID,t1.ISO_2_ALPH_CTRY_CD,t1.ISO_3_ALPH_CTRY_CD,''ACTIVATE'',''VALID'' FROM IN_CTRY t1, M_CTRY t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CTRY_ID = t2.CTRY_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST', 'INSERT INTO NC_CUST ( SCENARIO_ID,CUST_ID,CUST_DESC,CUST_DSPLY_NAME,CUST_STRT_DTTM,CUST_END_DTTM,CUST_TYPE_CD,INIT_DATA_SRC_TYPE_CD,GOLDEN_CUST_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,CUST_DESC,CUST_DSPLY_NAME,CUST_STRT_DTTM,CUST_END_DTTM,CUST_TYPE_CD,INIT_DATA_SRC_TYPE_CD,GOLDEN_CUST_ID,''INSERT'',''VALID'' FROM IN_CUST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_CUST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST', 'INSERT INTO NC_CUST ( SCENARIO_ID,CUST_ID,CUST_DESC,CUST_DSPLY_NAME,CUST_STRT_DTTM,CUST_END_DTTM,CUST_TYPE_CD,INIT_DATA_SRC_TYPE_CD,GOLDEN_CUST_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,CUST_DESC,CUST_DSPLY_NAME,CUST_STRT_DTTM,CUST_END_DTTM,CUST_TYPE_CD,INIT_DATA_SRC_TYPE_CD,GOLDEN_CUST_ID,''DELETE'',''VALID'' FROM M_CUST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CUST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_CUST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST', 'INSERT INTO NC_CUST ( SCENARIO_ID,CUST_ID,CUST_DESC,CUST_DSPLY_NAME,CUST_STRT_DTTM,CUST_END_DTTM,CUST_TYPE_CD,INIT_DATA_SRC_TYPE_CD,GOLDEN_CUST_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.CUST_DESC,t1.CUST_DSPLY_NAME,t1.CUST_STRT_DTTM,t1.CUST_END_DTTM,t1.CUST_TYPE_CD,t1.INIT_DATA_SRC_TYPE_CD,t1.GOLDEN_CUST_ID,''UPDATE'',''VALID'' FROM IN_CUST t1, M_CUST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.CUST_DESC <> t2.CUST_DESC OR ( t1.CUST_DESC IS NULL AND t2.CUST_DESC IS NOT NULL) OR (t1.CUST_DESC IS NOT NULL AND t2.CUST_DESC IS NULL)) OR (t1.CUST_DSPLY_NAME <> t2.CUST_DSPLY_NAME OR ( t1.CUST_DSPLY_NAME IS NULL AND t2.CUST_DSPLY_NAME IS NOT NULL) OR (t1.CUST_DSPLY_NAME IS NOT NULL AND t2.CUST_DSPLY_NAME IS NULL)) OR (t1.CUST_STRT_DTTM <> t2.CUST_STRT_DTTM OR ( t1.CUST_STRT_DTTM IS NULL AND t2.CUST_STRT_DTTM IS NOT NULL) OR (t1.CUST_STRT_DTTM IS NOT NULL AND t2.CUST_STRT_DTTM IS NULL)) OR (t1.CUST_END_DTTM <> t2.CUST_END_DTTM OR ( t1.CUST_END_DTTM IS NULL AND t2.CUST_END_DTTM IS NOT NULL) OR (t1.CUST_END_DTTM IS NOT NULL AND t2.CUST_END_DTTM IS NULL)) OR (t1.CUST_TYPE_CD <> t2.CUST_TYPE_CD OR ( t1.CUST_TYPE_CD IS NULL AND t2.CUST_TYPE_CD IS NOT NULL) OR (t1.CUST_TYPE_CD IS NOT NULL AND t2.CUST_TYPE_CD IS NULL)) OR (t1.INIT_DATA_SRC_TYPE_CD <> t2.INIT_DATA_SRC_TYPE_CD OR ( t1.INIT_DATA_SRC_TYPE_CD IS NULL AND t2.INIT_DATA_SRC_TYPE_CD IS NOT NULL) OR (t1.INIT_DATA_SRC_TYPE_CD IS NOT NULL AND t2.INIT_DATA_SRC_TYPE_CD IS NULL)) OR (t1.GOLDEN_CUST_ID <> t2.GOLDEN_CUST_ID OR ( t1.GOLDEN_CUST_ID IS NULL AND t2.GOLDEN_CUST_ID IS NOT NULL) OR (t1.GOLDEN_CUST_ID IS NOT NULL AND t2.GOLDEN_CUST_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST', 'INSERT INTO NC_CUST ( SCENARIO_ID,CUST_ID,CUST_DESC,CUST_DSPLY_NAME,CUST_STRT_DTTM,CUST_END_DTTM,CUST_TYPE_CD,INIT_DATA_SRC_TYPE_CD,GOLDEN_CUST_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.CUST_DESC,t1.CUST_DSPLY_NAME,t1.CUST_STRT_DTTM,t1.CUST_END_DTTM,t1.CUST_TYPE_CD,t1.INIT_DATA_SRC_TYPE_CD,t1.GOLDEN_CUST_ID,''ACTIVATE'',''VALID'' FROM IN_CUST t1, M_CUST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT', 'INSERT INTO NC_CUST_ACCT ( SCENARIO_ID,ACCT_ID,CUST_ID,LOB_NUM,CUST_ACCT_STRT_DT,CUST_ACCT_ROLE_CD,CUST_ACCT_USG_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACCT_ID,CUST_ID,LOB_NUM,CUST_ACCT_STRT_DT,CUST_ACCT_ROLE_CD,CUST_ACCT_USG_CD,''INSERT'',''VALID'' FROM IN_CUST_ACCT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_CUST_ACCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT', 'INSERT INTO NC_CUST_ACCT ( SCENARIO_ID,ACCT_ID,CUST_ID,LOB_NUM,CUST_ACCT_STRT_DT,CUST_ACCT_ROLE_CD,CUST_ACCT_USG_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACCT_ID,CUST_ID,LOB_NUM,CUST_ACCT_STRT_DT,CUST_ACCT_ROLE_CD,CUST_ACCT_USG_CD,''DELETE'',''VALID'' FROM M_CUST_ACCT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CUST_ACCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_CUST_ACCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT', 'INSERT INTO NC_CUST_ACCT ( SCENARIO_ID,ACCT_ID,CUST_ID,LOB_NUM,CUST_ACCT_STRT_DT,CUST_ACCT_ROLE_CD,CUST_ACCT_USG_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACCT_ID,t1.CUST_ID,t1.LOB_NUM,t1.CUST_ACCT_STRT_DT,t1.CUST_ACCT_ROLE_CD,t1.CUST_ACCT_USG_CD,''UPDATE'',''VALID'' FROM IN_CUST_ACCT t1, M_CUST_ACCT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ACCT_ID <> t2.ACCT_ID OR ( t1.ACCT_ID IS NULL AND t2.ACCT_ID IS NOT NULL) OR (t1.ACCT_ID IS NOT NULL AND t2.ACCT_ID IS NULL)) OR (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.CUST_ACCT_STRT_DT <> t2.CUST_ACCT_STRT_DT OR ( t1.CUST_ACCT_STRT_DT IS NULL AND t2.CUST_ACCT_STRT_DT IS NOT NULL) OR (t1.CUST_ACCT_STRT_DT IS NOT NULL AND t2.CUST_ACCT_STRT_DT IS NULL)) OR (t1.CUST_ACCT_ROLE_CD <> t2.CUST_ACCT_ROLE_CD OR ( t1.CUST_ACCT_ROLE_CD IS NULL AND t2.CUST_ACCT_ROLE_CD IS NOT NULL) OR (t1.CUST_ACCT_ROLE_CD IS NOT NULL AND t2.CUST_ACCT_ROLE_CD IS NULL)) OR (t1.CUST_ACCT_USG_CD <> t2.CUST_ACCT_USG_CD OR ( t1.CUST_ACCT_USG_CD IS NULL AND t2.CUST_ACCT_USG_CD IS NOT NULL) OR (t1.CUST_ACCT_USG_CD IS NOT NULL AND t2.CUST_ACCT_USG_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT', 'INSERT INTO NC_CUST_ACCT ( SCENARIO_ID,ACCT_ID,CUST_ID,LOB_NUM,CUST_ACCT_STRT_DT,CUST_ACCT_ROLE_CD,CUST_ACCT_USG_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACCT_ID,t1.CUST_ID,t1.LOB_NUM,t1.CUST_ACCT_STRT_DT,t1.CUST_ACCT_ROLE_CD,t1.CUST_ACCT_USG_CD,''ACTIVATE'',''VALID'' FROM IN_CUST_ACCT t1, M_CUST_ACCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT_ADDR', 'INSERT INTO NC_CUST_ACCT_ADDR ( SCENARIO_ID,ACCT_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ACCT_ADDR_USG_CD,CUST_ACCT_ADDR_STRT_DT,CUST_ACCT_ADDR_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACCT_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ACCT_ADDR_USG_CD,CUST_ACCT_ADDR_STRT_DT,CUST_ACCT_ADDR_END_DT,''INSERT'',''VALID'' FROM IN_CUST_ACCT_ADDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_CUST_ACCT_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND t1.CUST_ACCT_ADDR_USG_CD = t2.CUST_ACCT_ADDR_USG_CD AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT_ADDR', 'INSERT INTO NC_CUST_ACCT_ADDR ( SCENARIO_ID,ACCT_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ACCT_ADDR_USG_CD,CUST_ACCT_ADDR_STRT_DT,CUST_ACCT_ADDR_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACCT_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ACCT_ADDR_USG_CD,CUST_ACCT_ADDR_STRT_DT,CUST_ACCT_ADDR_END_DT,''DELETE'',''VALID'' FROM M_CUST_ACCT_ADDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CUST_ACCT_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND t1.CUST_ACCT_ADDR_USG_CD = t2.CUST_ACCT_ADDR_USG_CD AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_CUST_ACCT_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND t1.CUST_ACCT_ADDR_USG_CD = t2.CUST_ACCT_ADDR_USG_CD AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT_ADDR', 'INSERT INTO NC_CUST_ACCT_ADDR ( SCENARIO_ID,ACCT_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ACCT_ADDR_USG_CD,CUST_ACCT_ADDR_STRT_DT,CUST_ACCT_ADDR_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACCT_ID,t1.CUST_ID,t1.ADDR_ID,t1.LOB_NUM,t1.CUST_ACCT_ADDR_USG_CD,t1.CUST_ACCT_ADDR_STRT_DT,t1.CUST_ACCT_ADDR_END_DT,''UPDATE'',''VALID'' FROM IN_CUST_ACCT_ADDR t1, M_CUST_ACCT_ADDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND t1.CUST_ACCT_ADDR_USG_CD = t2.CUST_ACCT_ADDR_USG_CD AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ACCT_ID <> t2.ACCT_ID OR ( t1.ACCT_ID IS NULL AND t2.ACCT_ID IS NOT NULL) OR (t1.ACCT_ID IS NOT NULL AND t2.ACCT_ID IS NULL)) OR (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.ADDR_ID <> t2.ADDR_ID OR ( t1.ADDR_ID IS NULL AND t2.ADDR_ID IS NOT NULL) OR (t1.ADDR_ID IS NOT NULL AND t2.ADDR_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.CUST_ACCT_ADDR_USG_CD <> t2.CUST_ACCT_ADDR_USG_CD OR ( t1.CUST_ACCT_ADDR_USG_CD IS NULL AND t2.CUST_ACCT_ADDR_USG_CD IS NOT NULL) OR (t1.CUST_ACCT_ADDR_USG_CD IS NOT NULL AND t2.CUST_ACCT_ADDR_USG_CD IS NULL)) OR (t1.CUST_ACCT_ADDR_STRT_DT <> t2.CUST_ACCT_ADDR_STRT_DT OR ( t1.CUST_ACCT_ADDR_STRT_DT IS NULL AND t2.CUST_ACCT_ADDR_STRT_DT IS NOT NULL) OR (t1.CUST_ACCT_ADDR_STRT_DT IS NOT NULL AND t2.CUST_ACCT_ADDR_STRT_DT IS NULL)) OR (t1.CUST_ACCT_ADDR_END_DT <> t2.CUST_ACCT_ADDR_END_DT OR ( t1.CUST_ACCT_ADDR_END_DT IS NULL AND t2.CUST_ACCT_ADDR_END_DT IS NOT NULL) OR (t1.CUST_ACCT_ADDR_END_DT IS NOT NULL AND t2.CUST_ACCT_ADDR_END_DT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT_ADDR', 'INSERT INTO NC_CUST_ACCT_ADDR ( SCENARIO_ID,ACCT_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ACCT_ADDR_USG_CD,CUST_ACCT_ADDR_STRT_DT,CUST_ACCT_ADDR_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACCT_ID,t1.CUST_ID,t1.ADDR_ID,t1.LOB_NUM,t1.CUST_ACCT_ADDR_USG_CD,t1.CUST_ACCT_ADDR_STRT_DT,t1.CUST_ACCT_ADDR_END_DT,''ACTIVATE'',''VALID'' FROM IN_CUST_ACCT_ADDR t1, M_CUST_ACCT_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND t1.CUST_ACCT_ADDR_USG_CD = t2.CUST_ACCT_ADDR_USG_CD AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT_VEH_DEVICE', 'INSERT INTO NC_CUST_ACCT_VEH_DEVICE ( SCENARIO_ID,CUST_ID,ACCT_ID,VEH_ID,DEVICE_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,INSTLTN_DT,RGSTRN_DT,VEH_EFF_STRT_DT,SCRAP_DT,ENTLMT_STRT_DT,ENTLMT_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,ACCT_ID,VEH_ID,DEVICE_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,INSTLTN_DT,RGSTRN_DT,VEH_EFF_STRT_DT,SCRAP_DT,ENTLMT_STRT_DT,ENTLMT_END_DT,''INSERT'',''VALID'' FROM IN_CUST_ACCT_VEH_DEVICE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_CUST_ACCT_VEH_DEVICE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_VEH_EFF_STRT_DT = t2.ACCT_VEH_EFF_STRT_DT AND t1.VEH_ID = t2.VEH_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND t1.DEVICE_ID = t2.DEVICE_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT_VEH_DEVICE', 'INSERT INTO NC_CUST_ACCT_VEH_DEVICE ( SCENARIO_ID,CUST_ID,ACCT_ID,VEH_ID,DEVICE_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,INSTLTN_DT,RGSTRN_DT,VEH_EFF_STRT_DT,SCRAP_DT,ENTLMT_STRT_DT,ENTLMT_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,ACCT_ID,VEH_ID,DEVICE_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,INSTLTN_DT,RGSTRN_DT,VEH_EFF_STRT_DT,SCRAP_DT,ENTLMT_STRT_DT,ENTLMT_END_DT,''DELETE'',''VALID'' FROM M_CUST_ACCT_VEH_DEVICE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CUST_ACCT_VEH_DEVICE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_VEH_EFF_STRT_DT = t2.ACCT_VEH_EFF_STRT_DT AND t1.VEH_ID = t2.VEH_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND t1.DEVICE_ID = t2.DEVICE_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_CUST_ACCT_VEH_DEVICE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_VEH_EFF_STRT_DT = t2.ACCT_VEH_EFF_STRT_DT AND t1.VEH_ID = t2.VEH_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND t1.DEVICE_ID = t2.DEVICE_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT_VEH_DEVICE', 'INSERT INTO NC_CUST_ACCT_VEH_DEVICE ( SCENARIO_ID,CUST_ID,ACCT_ID,VEH_ID,DEVICE_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,INSTLTN_DT,RGSTRN_DT,VEH_EFF_STRT_DT,SCRAP_DT,ENTLMT_STRT_DT,ENTLMT_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.ACCT_ID,t1.VEH_ID,t1.DEVICE_ID,t1.LOB_NUM,t1.ACCT_VEH_EFF_STRT_DT,t1.INSTLTN_DT,t1.RGSTRN_DT,t1.VEH_EFF_STRT_DT,t1.SCRAP_DT,t1.ENTLMT_STRT_DT,t1.ENTLMT_END_DT,''UPDATE'',''VALID'' FROM IN_CUST_ACCT_VEH_DEVICE t1, M_CUST_ACCT_VEH_DEVICE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_VEH_EFF_STRT_DT = t2.ACCT_VEH_EFF_STRT_DT AND t1.VEH_ID = t2.VEH_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND t1.DEVICE_ID = t2.DEVICE_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.ACCT_ID <> t2.ACCT_ID OR ( t1.ACCT_ID IS NULL AND t2.ACCT_ID IS NOT NULL) OR (t1.ACCT_ID IS NOT NULL AND t2.ACCT_ID IS NULL)) OR (t1.VEH_ID <> t2.VEH_ID OR ( t1.VEH_ID IS NULL AND t2.VEH_ID IS NOT NULL) OR (t1.VEH_ID IS NOT NULL AND t2.VEH_ID IS NULL)) OR (t1.DEVICE_ID <> t2.DEVICE_ID OR ( t1.DEVICE_ID IS NULL AND t2.DEVICE_ID IS NOT NULL) OR (t1.DEVICE_ID IS NOT NULL AND t2.DEVICE_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.ACCT_VEH_EFF_STRT_DT <> t2.ACCT_VEH_EFF_STRT_DT OR ( t1.ACCT_VEH_EFF_STRT_DT IS NULL AND t2.ACCT_VEH_EFF_STRT_DT IS NOT NULL) OR (t1.ACCT_VEH_EFF_STRT_DT IS NOT NULL AND t2.ACCT_VEH_EFF_STRT_DT IS NULL)) OR (t1.INSTLTN_DT <> t2.INSTLTN_DT OR ( t1.INSTLTN_DT IS NULL AND t2.INSTLTN_DT IS NOT NULL) OR (t1.INSTLTN_DT IS NOT NULL AND t2.INSTLTN_DT IS NULL)) OR (t1.RGSTRN_DT <> t2.RGSTRN_DT OR ( t1.RGSTRN_DT IS NULL AND t2.RGSTRN_DT IS NOT NULL) OR (t1.RGSTRN_DT IS NOT NULL AND t2.RGSTRN_DT IS NULL)) OR (t1.VEH_EFF_STRT_DT <> t2.VEH_EFF_STRT_DT OR ( t1.VEH_EFF_STRT_DT IS NULL AND t2.VEH_EFF_STRT_DT IS NOT NULL) OR (t1.VEH_EFF_STRT_DT IS NOT NULL AND t2.VEH_EFF_STRT_DT IS NULL)) OR (t1.SCRAP_DT <> t2.SCRAP_DT OR ( t1.SCRAP_DT IS NULL AND t2.SCRAP_DT IS NOT NULL) OR (t1.SCRAP_DT IS NOT NULL AND t2.SCRAP_DT IS NULL)) OR (t1.ENTLMT_STRT_DT <> t2.ENTLMT_STRT_DT OR ( t1.ENTLMT_STRT_DT IS NULL AND t2.ENTLMT_STRT_DT IS NOT NULL) OR (t1.ENTLMT_STRT_DT IS NOT NULL AND t2.ENTLMT_STRT_DT IS NULL)) OR (t1.ENTLMT_END_DT <> t2.ENTLMT_END_DT OR ( t1.ENTLMT_END_DT IS NULL AND t2.ENTLMT_END_DT IS NOT NULL) OR (t1.ENTLMT_END_DT IS NOT NULL AND t2.ENTLMT_END_DT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ACCT_VEH_DEVICE', 'INSERT INTO NC_CUST_ACCT_VEH_DEVICE ( SCENARIO_ID,CUST_ID,ACCT_ID,VEH_ID,DEVICE_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,INSTLTN_DT,RGSTRN_DT,VEH_EFF_STRT_DT,SCRAP_DT,ENTLMT_STRT_DT,ENTLMT_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.ACCT_ID,t1.VEH_ID,t1.DEVICE_ID,t1.LOB_NUM,t1.ACCT_VEH_EFF_STRT_DT,t1.INSTLTN_DT,t1.RGSTRN_DT,t1.VEH_EFF_STRT_DT,t1.SCRAP_DT,t1.ENTLMT_STRT_DT,t1.ENTLMT_END_DT,''ACTIVATE'',''VALID'' FROM IN_CUST_ACCT_VEH_DEVICE t1, M_CUST_ACCT_VEH_DEVICE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_VEH_EFF_STRT_DT = t2.ACCT_VEH_EFF_STRT_DT AND t1.VEH_ID = t2.VEH_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND t1.DEVICE_ID = t2.DEVICE_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ADDR', 'INSERT INTO NC_CUST_ADDR ( SCENARIO_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ADDR_STRT_DT,CUST_ADDR_END_DT,CUST_ADDR_USG_type_CD,DFLT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ADDR_STRT_DT,CUST_ADDR_END_DT,CUST_ADDR_USG_type_CD,DFLT_IND,''INSERT'',''VALID'' FROM IN_CUST_ADDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_CUST_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND t1.CUST_ADDR_STRT_DT = t2.CUST_ADDR_STRT_DT AND t1.CUST_ADDR_USG_type_CD = t2.CUST_ADDR_USG_type_CD AND t1.CUST_ID = t2.CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ADDR', 'INSERT INTO NC_CUST_ADDR ( SCENARIO_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ADDR_STRT_DT,CUST_ADDR_END_DT,CUST_ADDR_USG_type_CD,DFLT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ADDR_STRT_DT,CUST_ADDR_END_DT,CUST_ADDR_USG_type_CD,DFLT_IND,''DELETE'',''VALID'' FROM M_CUST_ADDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CUST_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND t1.CUST_ADDR_STRT_DT = t2.CUST_ADDR_STRT_DT AND t1.CUST_ADDR_USG_type_CD = t2.CUST_ADDR_USG_type_CD AND t1.CUST_ID = t2.CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_CUST_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND t1.CUST_ADDR_STRT_DT = t2.CUST_ADDR_STRT_DT AND t1.CUST_ADDR_USG_type_CD = t2.CUST_ADDR_USG_type_CD AND t1.CUST_ID = t2.CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ADDR', 'INSERT INTO NC_CUST_ADDR ( SCENARIO_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ADDR_STRT_DT,CUST_ADDR_END_DT,CUST_ADDR_USG_type_CD,DFLT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.ADDR_ID,t1.LOB_NUM,t1.CUST_ADDR_STRT_DT,t1.CUST_ADDR_END_DT,t1.CUST_ADDR_USG_type_CD,t1.DFLT_IND,''UPDATE'',''VALID'' FROM IN_CUST_ADDR t1, M_CUST_ADDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND t1.CUST_ADDR_STRT_DT = t2.CUST_ADDR_STRT_DT AND t1.CUST_ADDR_USG_type_CD = t2.CUST_ADDR_USG_type_CD AND t1.CUST_ID = t2.CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.ADDR_ID <> t2.ADDR_ID OR ( t1.ADDR_ID IS NULL AND t2.ADDR_ID IS NOT NULL) OR (t1.ADDR_ID IS NOT NULL AND t2.ADDR_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.CUST_ADDR_STRT_DT <> t2.CUST_ADDR_STRT_DT OR ( t1.CUST_ADDR_STRT_DT IS NULL AND t2.CUST_ADDR_STRT_DT IS NOT NULL) OR (t1.CUST_ADDR_STRT_DT IS NOT NULL AND t2.CUST_ADDR_STRT_DT IS NULL)) OR (t1.CUST_ADDR_END_DT <> t2.CUST_ADDR_END_DT OR ( t1.CUST_ADDR_END_DT IS NULL AND t2.CUST_ADDR_END_DT IS NOT NULL) OR (t1.CUST_ADDR_END_DT IS NOT NULL AND t2.CUST_ADDR_END_DT IS NULL)) OR (t1.CUST_ADDR_USG_type_CD <> t2.CUST_ADDR_USG_type_CD OR ( t1.CUST_ADDR_USG_type_CD IS NULL AND t2.CUST_ADDR_USG_type_CD IS NOT NULL) OR (t1.CUST_ADDR_USG_type_CD IS NOT NULL AND t2.CUST_ADDR_USG_type_CD IS NULL)) OR (t1.DFLT_IND <> t2.DFLT_IND OR ( t1.DFLT_IND IS NULL AND t2.DFLT_IND IS NOT NULL) OR (t1.DFLT_IND IS NOT NULL AND t2.DFLT_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_ADDR', 'INSERT INTO NC_CUST_ADDR ( SCENARIO_ID,CUST_ID,ADDR_ID,LOB_NUM,CUST_ADDR_STRT_DT,CUST_ADDR_END_DT,CUST_ADDR_USG_type_CD,DFLT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.ADDR_ID,t1.LOB_NUM,t1.CUST_ADDR_STRT_DT,t1.CUST_ADDR_END_DT,t1.CUST_ADDR_USG_type_CD,t1.DFLT_IND,''ACTIVATE'',''VALID'' FROM IN_CUST_ADDR t1, M_CUST_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_ID = t2.ADDR_ID AND t1.CUST_ADDR_STRT_DT = t2.CUST_ADDR_STRT_DT AND t1.CUST_ADDR_USG_type_CD = t2.CUST_ADDR_USG_type_CD AND t1.CUST_ID = t2.CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_DEVICE', 'INSERT INTO NC_CUST_DEVICE ( SCENARIO_ID,CUST_ID,ACCT_ID,DEVICE_ID,LOB_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_EFF_STRT_DT,DEVICE_END_DT,DEVICE_PRCH_DT,DEVICE_CUST_ACTVTN_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,ACCT_ID,DEVICE_ID,LOB_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_EFF_STRT_DT,DEVICE_END_DT,DEVICE_PRCH_DT,DEVICE_CUST_ACTVTN_DT,''INSERT'',''VALID'' FROM IN_CUST_DEVICE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_CUST_DEVICE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_EFF_STRT_DT = t2.DEVICE_EFF_STRT_DT AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_DEVICE', 'INSERT INTO NC_CUST_DEVICE ( SCENARIO_ID,CUST_ID,ACCT_ID,DEVICE_ID,LOB_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_EFF_STRT_DT,DEVICE_END_DT,DEVICE_PRCH_DT,DEVICE_CUST_ACTVTN_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,ACCT_ID,DEVICE_ID,LOB_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_EFF_STRT_DT,DEVICE_END_DT,DEVICE_PRCH_DT,DEVICE_CUST_ACTVTN_DT,''DELETE'',''VALID'' FROM M_CUST_DEVICE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CUST_DEVICE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_EFF_STRT_DT = t2.DEVICE_EFF_STRT_DT AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_CUST_DEVICE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_EFF_STRT_DT = t2.DEVICE_EFF_STRT_DT AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_DEVICE', 'INSERT INTO NC_CUST_DEVICE ( SCENARIO_ID,CUST_ID,ACCT_ID,DEVICE_ID,LOB_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_EFF_STRT_DT,DEVICE_END_DT,DEVICE_PRCH_DT,DEVICE_CUST_ACTVTN_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.ACCT_ID,t1.DEVICE_ID,t1.LOB_NUM,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.DEVICE_EFF_STRT_DT,t1.DEVICE_END_DT,t1.DEVICE_PRCH_DT,t1.DEVICE_CUST_ACTVTN_DT,''UPDATE'',''VALID'' FROM IN_CUST_DEVICE t1, M_CUST_DEVICE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_EFF_STRT_DT = t2.DEVICE_EFF_STRT_DT AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.ACCT_ID <> t2.ACCT_ID OR ( t1.ACCT_ID IS NULL AND t2.ACCT_ID IS NOT NULL) OR (t1.ACCT_ID IS NOT NULL AND t2.ACCT_ID IS NULL)) OR (t1.DEVICE_ID <> t2.DEVICE_ID OR ( t1.DEVICE_ID IS NULL AND t2.DEVICE_ID IS NOT NULL) OR (t1.DEVICE_ID IS NOT NULL AND t2.DEVICE_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.CURR_PREV_IND <> t2.CURR_PREV_IND OR ( t1.CURR_PREV_IND IS NULL AND t2.CURR_PREV_IND IS NOT NULL) OR (t1.CURR_PREV_IND IS NOT NULL AND t2.CURR_PREV_IND IS NULL)) OR (t1.CNTL_EFF_DT <> t2.CNTL_EFF_DT OR ( t1.CNTL_EFF_DT IS NULL AND t2.CNTL_EFF_DT IS NOT NULL) OR (t1.CNTL_EFF_DT IS NOT NULL AND t2.CNTL_EFF_DT IS NULL)) OR (t1.CNTL_EXP_DT <> t2.CNTL_EXP_DT OR ( t1.CNTL_EXP_DT IS NULL AND t2.CNTL_EXP_DT IS NOT NULL) OR (t1.CNTL_EXP_DT IS NOT NULL AND t2.CNTL_EXP_DT IS NULL)) OR (t1.DEVICE_EFF_STRT_DT <> t2.DEVICE_EFF_STRT_DT OR ( t1.DEVICE_EFF_STRT_DT IS NULL AND t2.DEVICE_EFF_STRT_DT IS NOT NULL) OR (t1.DEVICE_EFF_STRT_DT IS NOT NULL AND t2.DEVICE_EFF_STRT_DT IS NULL)) OR (t1.DEVICE_END_DT <> t2.DEVICE_END_DT OR ( t1.DEVICE_END_DT IS NULL AND t2.DEVICE_END_DT IS NOT NULL) OR (t1.DEVICE_END_DT IS NOT NULL AND t2.DEVICE_END_DT IS NULL)) OR (t1.DEVICE_PRCH_DT <> t2.DEVICE_PRCH_DT OR ( t1.DEVICE_PRCH_DT IS NULL AND t2.DEVICE_PRCH_DT IS NOT NULL) OR (t1.DEVICE_PRCH_DT IS NOT NULL AND t2.DEVICE_PRCH_DT IS NULL)) OR (t1.DEVICE_CUST_ACTVTN_DT <> t2.DEVICE_CUST_ACTVTN_DT OR ( t1.DEVICE_CUST_ACTVTN_DT IS NULL AND t2.DEVICE_CUST_ACTVTN_DT IS NOT NULL) OR (t1.DEVICE_CUST_ACTVTN_DT IS NOT NULL AND t2.DEVICE_CUST_ACTVTN_DT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_DEVICE', 'INSERT INTO NC_CUST_DEVICE ( SCENARIO_ID,CUST_ID,ACCT_ID,DEVICE_ID,LOB_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_EFF_STRT_DT,DEVICE_END_DT,DEVICE_PRCH_DT,DEVICE_CUST_ACTVTN_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.ACCT_ID,t1.DEVICE_ID,t1.LOB_NUM,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.DEVICE_EFF_STRT_DT,t1.DEVICE_END_DT,t1.DEVICE_PRCH_DT,t1.DEVICE_CUST_ACTVTN_DT,''ACTIVATE'',''VALID'' FROM IN_CUST_DEVICE t1, M_CUST_DEVICE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_EFF_STRT_DT = t2.DEVICE_EFF_STRT_DT AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_PRG', 'INSERT INTO NC_CUST_PRG ( SCENARIO_ID,CUST_ID,PRTNR_PRG_CD,LOB_NUM,CUST_MKTG_ROLE_CD,CUST_MKTG_ROLE_STRT_DTTM,FRST_NAME,MDL_NAME,LAST_NAME,NICK_NAME,CUST_PRG_OPT_OUT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,PRTNR_PRG_CD,LOB_NUM,CUST_MKTG_ROLE_CD,CUST_MKTG_ROLE_STRT_DTTM,FRST_NAME,MDL_NAME,LAST_NAME,NICK_NAME,CUST_PRG_OPT_OUT_IND,''INSERT'',''VALID'' FROM IN_CUST_PRG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_CUST_PRG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND t1.PRTNR_PRG_CD = t2.PRTNR_PRG_CD AND t1.LOB_NUM = t2.LOB_NUM AND t1.CUST_MKTG_ROLE_CD = t2.CUST_MKTG_ROLE_CD AND t1.CUST_MKTG_ROLE_STRT_DTTM = t2.CUST_MKTG_ROLE_STRT_DTTM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_PRG', 'INSERT INTO NC_CUST_PRG ( SCENARIO_ID,CUST_ID,PRTNR_PRG_CD,LOB_NUM,CUST_MKTG_ROLE_CD,CUST_MKTG_ROLE_STRT_DTTM,FRST_NAME,MDL_NAME,LAST_NAME,NICK_NAME,CUST_PRG_OPT_OUT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,PRTNR_PRG_CD,LOB_NUM,CUST_MKTG_ROLE_CD,CUST_MKTG_ROLE_STRT_DTTM,FRST_NAME,MDL_NAME,LAST_NAME,NICK_NAME,CUST_PRG_OPT_OUT_IND,''DELETE'',''VALID'' FROM M_CUST_PRG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CUST_PRG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND t1.PRTNR_PRG_CD = t2.PRTNR_PRG_CD AND t1.LOB_NUM = t2.LOB_NUM AND t1.CUST_MKTG_ROLE_CD = t2.CUST_MKTG_ROLE_CD AND t1.CUST_MKTG_ROLE_STRT_DTTM = t2.CUST_MKTG_ROLE_STRT_DTTM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_CUST_PRG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND t1.PRTNR_PRG_CD = t2.PRTNR_PRG_CD AND t1.LOB_NUM = t2.LOB_NUM AND t1.CUST_MKTG_ROLE_CD = t2.CUST_MKTG_ROLE_CD AND t1.CUST_MKTG_ROLE_STRT_DTTM = t2.CUST_MKTG_ROLE_STRT_DTTM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_PRG', 'INSERT INTO NC_CUST_PRG ( SCENARIO_ID,CUST_ID,PRTNR_PRG_CD,LOB_NUM,CUST_MKTG_ROLE_CD,CUST_MKTG_ROLE_STRT_DTTM,FRST_NAME,MDL_NAME,LAST_NAME,NICK_NAME,CUST_PRG_OPT_OUT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.PRTNR_PRG_CD,t1.LOB_NUM,t1.CUST_MKTG_ROLE_CD,t1.CUST_MKTG_ROLE_STRT_DTTM,t1.FRST_NAME,t1.MDL_NAME,t1.LAST_NAME,t1.NICK_NAME,t1.CUST_PRG_OPT_OUT_IND,''UPDATE'',''VALID'' FROM IN_CUST_PRG t1, M_CUST_PRG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND t1.PRTNR_PRG_CD = t2.PRTNR_PRG_CD AND t1.LOB_NUM = t2.LOB_NUM AND t1.CUST_MKTG_ROLE_CD = t2.CUST_MKTG_ROLE_CD AND t1.CUST_MKTG_ROLE_STRT_DTTM = t2.CUST_MKTG_ROLE_STRT_DTTM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.PRTNR_PRG_CD <> t2.PRTNR_PRG_CD OR ( t1.PRTNR_PRG_CD IS NULL AND t2.PRTNR_PRG_CD IS NOT NULL) OR (t1.PRTNR_PRG_CD IS NOT NULL AND t2.PRTNR_PRG_CD IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.CUST_MKTG_ROLE_CD <> t2.CUST_MKTG_ROLE_CD OR ( t1.CUST_MKTG_ROLE_CD IS NULL AND t2.CUST_MKTG_ROLE_CD IS NOT NULL) OR (t1.CUST_MKTG_ROLE_CD IS NOT NULL AND t2.CUST_MKTG_ROLE_CD IS NULL)) OR (t1.CUST_MKTG_ROLE_STRT_DTTM <> t2.CUST_MKTG_ROLE_STRT_DTTM OR ( t1.CUST_MKTG_ROLE_STRT_DTTM IS NULL AND t2.CUST_MKTG_ROLE_STRT_DTTM IS NOT NULL) OR (t1.CUST_MKTG_ROLE_STRT_DTTM IS NOT NULL AND t2.CUST_MKTG_ROLE_STRT_DTTM IS NULL)) OR (t1.FRST_NAME <> t2.FRST_NAME OR ( t1.FRST_NAME IS NULL AND t2.FRST_NAME IS NOT NULL) OR (t1.FRST_NAME IS NOT NULL AND t2.FRST_NAME IS NULL)) OR (t1.MDL_NAME <> t2.MDL_NAME OR ( t1.MDL_NAME IS NULL AND t2.MDL_NAME IS NOT NULL) OR (t1.MDL_NAME IS NOT NULL AND t2.MDL_NAME IS NULL)) OR (t1.LAST_NAME <> t2.LAST_NAME OR ( t1.LAST_NAME IS NULL AND t2.LAST_NAME IS NOT NULL) OR (t1.LAST_NAME IS NOT NULL AND t2.LAST_NAME IS NULL)) OR (t1.NICK_NAME <> t2.NICK_NAME OR ( t1.NICK_NAME IS NULL AND t2.NICK_NAME IS NOT NULL) OR (t1.NICK_NAME IS NOT NULL AND t2.NICK_NAME IS NULL)) OR (t1.CUST_PRG_OPT_OUT_IND <> t2.CUST_PRG_OPT_OUT_IND OR ( t1.CUST_PRG_OPT_OUT_IND IS NULL AND t2.CUST_PRG_OPT_OUT_IND IS NOT NULL) OR (t1.CUST_PRG_OPT_OUT_IND IS NOT NULL AND t2.CUST_PRG_OPT_OUT_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_PRG', 'INSERT INTO NC_CUST_PRG ( SCENARIO_ID,CUST_ID,PRTNR_PRG_CD,LOB_NUM,CUST_MKTG_ROLE_CD,CUST_MKTG_ROLE_STRT_DTTM,FRST_NAME,MDL_NAME,LAST_NAME,NICK_NAME,CUST_PRG_OPT_OUT_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.PRTNR_PRG_CD,t1.LOB_NUM,t1.CUST_MKTG_ROLE_CD,t1.CUST_MKTG_ROLE_STRT_DTTM,t1.FRST_NAME,t1.MDL_NAME,t1.LAST_NAME,t1.NICK_NAME,t1.CUST_PRG_OPT_OUT_IND,''ACTIVATE'',''VALID'' FROM IN_CUST_PRG t1, M_CUST_PRG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND t1.PRTNR_PRG_CD = t2.PRTNR_PRG_CD AND t1.LOB_NUM = t2.LOB_NUM AND t1.CUST_MKTG_ROLE_CD = t2.CUST_MKTG_ROLE_CD AND t1.CUST_MKTG_ROLE_STRT_DTTM = t2.CUST_MKTG_ROLE_STRT_DTTM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_PRSNA', 'INSERT INTO NC_CUST_PRSNA ( SCENARIO_ID,PRSNA_ID,CUST_ID,LOB_NUM,CUST_PRSNA_ROLE_CD,CUST_PRSNA_STRT_DT,CUST_PRSNA_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,CUST_ID,LOB_NUM,CUST_PRSNA_ROLE_CD,CUST_PRSNA_STRT_DT,CUST_PRSNA_END_DT,''INSERT'',''VALID'' FROM IN_CUST_PRSNA t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_CUST_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.CUST_ID = t2.CUST_ID AND t1.LOB_NUM = t2.LOB_NUM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_PRSNA', 'INSERT INTO NC_CUST_PRSNA ( SCENARIO_ID,PRSNA_ID,CUST_ID,LOB_NUM,CUST_PRSNA_ROLE_CD,CUST_PRSNA_STRT_DT,CUST_PRSNA_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,CUST_ID,LOB_NUM,CUST_PRSNA_ROLE_CD,CUST_PRSNA_STRT_DT,CUST_PRSNA_END_DT,''DELETE'',''VALID'' FROM M_CUST_PRSNA t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CUST_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.CUST_ID = t2.CUST_ID AND t1.LOB_NUM = t2.LOB_NUM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_CUST_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.CUST_ID = t2.CUST_ID AND t1.LOB_NUM = t2.LOB_NUM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_PRSNA', 'INSERT INTO NC_CUST_PRSNA ( SCENARIO_ID,PRSNA_ID,CUST_ID,LOB_NUM,CUST_PRSNA_ROLE_CD,CUST_PRSNA_STRT_DT,CUST_PRSNA_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.CUST_ID,t1.LOB_NUM,t1.CUST_PRSNA_ROLE_CD,t1.CUST_PRSNA_STRT_DT,t1.CUST_PRSNA_END_DT,''UPDATE'',''VALID'' FROM IN_CUST_PRSNA t1, M_CUST_PRSNA t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.CUST_ID = t2.CUST_ID AND t1.LOB_NUM = t2.LOB_NUM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.CUST_PRSNA_ROLE_CD <> t2.CUST_PRSNA_ROLE_CD OR ( t1.CUST_PRSNA_ROLE_CD IS NULL AND t2.CUST_PRSNA_ROLE_CD IS NOT NULL) OR (t1.CUST_PRSNA_ROLE_CD IS NOT NULL AND t2.CUST_PRSNA_ROLE_CD IS NULL)) OR (t1.CUST_PRSNA_STRT_DT <> t2.CUST_PRSNA_STRT_DT OR ( t1.CUST_PRSNA_STRT_DT IS NULL AND t2.CUST_PRSNA_STRT_DT IS NOT NULL) OR (t1.CUST_PRSNA_STRT_DT IS NOT NULL AND t2.CUST_PRSNA_STRT_DT IS NULL)) OR (t1.CUST_PRSNA_END_DT <> t2.CUST_PRSNA_END_DT OR ( t1.CUST_PRSNA_END_DT IS NULL AND t2.CUST_PRSNA_END_DT IS NOT NULL) OR (t1.CUST_PRSNA_END_DT IS NOT NULL AND t2.CUST_PRSNA_END_DT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUST_PRSNA', 'INSERT INTO NC_CUST_PRSNA ( SCENARIO_ID,PRSNA_ID,CUST_ID,LOB_NUM,CUST_PRSNA_ROLE_CD,CUST_PRSNA_STRT_DT,CUST_PRSNA_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.CUST_ID,t1.LOB_NUM,t1.CUST_PRSNA_ROLE_CD,t1.CUST_PRSNA_STRT_DT,t1.CUST_PRSNA_END_DT,''ACTIVATE'',''VALID'' FROM IN_CUST_PRSNA t1, M_CUST_PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.CUST_ID = t2.CUST_ID AND t1.LOB_NUM = t2.LOB_NUM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET', 'INSERT INTO NC_CODE_SET ( SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,REORDER_SEQ_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,REORDER_SEQ_ID,''INSERT'',''VALID'' FROM IN_CODE_SET t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_CODE_SET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET', 'INSERT INTO NC_CODE_SET ( SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,REORDER_SEQ_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,REORDER_SEQ_ID,''DELETE'',''VALID'' FROM MST_CODE_SET t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CODE_SET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CODE_SET t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET', 'INSERT INTO NC_CODE_SET ( SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,REORDER_SEQ_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Description,t1.Map_Table_Name,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.IS_EDITABLE,t1.IS_PROMOTED,t1.NAME,t1.PARENT_CODE_SET_ID,t1.Is_Custom_Map_Table,t1.Values_Table_Name,t1.Reference_Desc_Table_Name,t1.SERVICE_NAME,t1.DATABASE_NAME,t1.REORDER_SEQ_ID,''UPDATE'',''VALID'' FROM IN_CODE_SET t1, MST_CODE_SET t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Map_Table_Name <> t2.Map_Table_Name OR ( t1.Map_Table_Name IS NULL AND t2.Map_Table_Name IS NOT NULL) OR (t1.Map_Table_Name IS NOT NULL AND t2.Map_Table_Name IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.IS_EDITABLE <> t2.IS_EDITABLE OR ( t1.IS_EDITABLE IS NULL AND t2.IS_EDITABLE IS NOT NULL) OR (t1.IS_EDITABLE IS NOT NULL AND t2.IS_EDITABLE IS NULL)) OR (t1.IS_PROMOTED <> t2.IS_PROMOTED OR ( t1.IS_PROMOTED IS NULL AND t2.IS_PROMOTED IS NOT NULL) OR (t1.IS_PROMOTED IS NOT NULL AND t2.IS_PROMOTED IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Is_Custom_Map_Table <> t2.Is_Custom_Map_Table OR ( t1.Is_Custom_Map_Table IS NULL AND t2.Is_Custom_Map_Table IS NOT NULL) OR (t1.Is_Custom_Map_Table IS NOT NULL AND t2.Is_Custom_Map_Table IS NULL)) OR (t1.Values_Table_Name <> t2.Values_Table_Name OR ( t1.Values_Table_Name IS NULL AND t2.Values_Table_Name IS NOT NULL) OR (t1.Values_Table_Name IS NOT NULL AND t2.Values_Table_Name IS NULL)) OR (t1.Reference_Desc_Table_Name <> t2.Reference_Desc_Table_Name OR ( t1.Reference_Desc_Table_Name IS NULL AND t2.Reference_Desc_Table_Name IS NOT NULL) OR (t1.Reference_Desc_Table_Name IS NOT NULL AND t2.Reference_Desc_Table_Name IS NULL)) OR (t1.Service_Name <> t2.Service_Name OR ( t1.Service_Name IS NULL AND t2.Service_Name IS NOT NULL) OR (t1.Service_Name IS NOT NULL AND t2.Service_Name IS NULL)) OR (t1.Database_Name <> t2.Database_Name OR ( t1.Database_Name IS NULL AND t2.Database_Name IS NOT NULL) OR (t1.Database_Name IS NOT NULL AND t2.Database_Name IS NULL)) OR (t1.REORDER_SEQ_ID <> t2.REORDER_SEQ_ID OR ( t1.REORDER_SEQ_ID IS NULL AND t2.REORDER_SEQ_ID IS NOT NULL) OR (t1.REORDER_SEQ_ID IS NOT NULL AND t2.REORDER_SEQ_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET', 'INSERT INTO NC_CODE_SET ( SCENARIO_ID,Code_Set_Id,Description,Map_Table_Name,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,IS_EDITABLE,IS_PROMOTED,NAME,PARENT_CODE_SET_ID,Is_Custom_Map_Table,Values_Table_Name,Reference_Desc_Table_Name,SERVICE_NAME,DATABASE_NAME,REORDER_SEQ_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Description,t1.Map_Table_Name,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.IS_EDITABLE,t1.IS_PROMOTED,t1.NAME,t1.PARENT_CODE_SET_ID,t1.Is_Custom_Map_Table,t1.Values_Table_Name,t1.Reference_Desc_Table_Name,t1.SERVICE_NAME,t1.DATABASE_NAME,t1.REORDER_SEQ_ID,''ACTIVATE'',''VALID'' FROM IN_CODE_SET t1, MST_CODE_SET t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_STATS', 'INSERT INTO NC_CODE_SET_STATS ( SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,''INSERT'',''VALID'' FROM IN_CODE_SET_STATS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_CODE_SET_STATS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_STATS', 'INSERT INTO NC_CODE_SET_STATS ( SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,''DELETE'',''VALID'' FROM MST_CODE_SET_STATS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CODE_SET_STATS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CODE_SET_STATS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_STATS', 'INSERT INTO NC_CODE_SET_STATS ( SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Value_Id_Count,t1.Mapped_Source_Count,t1.Unmapped_Source_Count,''UPDATE'',''VALID'' FROM IN_CODE_SET_STATS t1, MST_CODE_SET_STATS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Value_Id_Count <> t2.Value_Id_Count OR ( t1.Value_Id_Count IS NULL AND t2.Value_Id_Count IS NOT NULL) OR (t1.Value_Id_Count IS NOT NULL AND t2.Value_Id_Count IS NULL)) OR (t1.Mapped_Source_Count <> t2.Mapped_Source_Count OR ( t1.Mapped_Source_Count IS NULL AND t2.Mapped_Source_Count IS NOT NULL) OR (t1.Mapped_Source_Count IS NOT NULL AND t2.Mapped_Source_Count IS NULL)) OR (t1.Unmapped_Source_Count <> t2.Unmapped_Source_Count OR ( t1.Unmapped_Source_Count IS NULL AND t2.Unmapped_Source_Count IS NOT NULL) OR (t1.Unmapped_Source_Count IS NOT NULL AND t2.Unmapped_Source_Count IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_STATS', 'INSERT INTO NC_CODE_SET_STATS ( SCENARIO_ID,Code_Set_Id,Value_Id_Count,Mapped_Source_Count,Unmapped_Source_Count,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Value_Id_Count,t1.Mapped_Source_Count,t1.Unmapped_Source_Count,''ACTIVATE'',''VALID'' FROM IN_CODE_SET_STATS t1, MST_CODE_SET_STATS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_TABLE_ASSOCIATION', 'INSERT INTO NC_CODE_SET_TABLE_ASSOCIATION ( SCENARIO_ID,Table_Id,Code_Set_Id,Assoc_Table_Name,Ctl_Id,Table_Source,Table_Type,Source_Description,Association_Description,Service_Name,Database_Name,Display_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Table_Id,Code_Set_Id,Assoc_Table_Name,Ctl_Id,Table_Source,Table_Type,Source_Description,Association_Description,Service_Name,Database_Name,Display_Sequence,''INSERT'',''VALID'' FROM IN_CODE_SET_TABLE_ASSOCIATION t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_CODE_SET_TABLE_ASSOCIATION t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Table_Id = t2.Table_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_TABLE_ASSOCIATION', 'INSERT INTO NC_CODE_SET_TABLE_ASSOCIATION ( SCENARIO_ID,Table_Id,Code_Set_Id,Assoc_Table_Name,Ctl_Id,Table_Source,Table_Type,Source_Description,Association_Description,Service_Name,Database_Name,Display_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Table_Id,Code_Set_Id,Assoc_Table_Name,Ctl_Id,Table_Source,Table_Type,Source_Description,Association_Description,Service_Name,Database_Name,Display_Sequence,''DELETE'',''VALID'' FROM MST_CODE_SET_TABLE_ASSOCIATION t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CODE_SET_TABLE_ASSOCIATION t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Table_Id = t2.Table_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CODE_SET_TABLE_ASSOCIATION t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Table_Id = t2.Table_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_TABLE_ASSOCIATION', 'INSERT INTO NC_CODE_SET_TABLE_ASSOCIATION ( SCENARIO_ID,Table_Id,Code_Set_Id,Assoc_Table_Name,Ctl_Id,Table_Source,Table_Type,Source_Description,Association_Description,Service_Name,Database_Name,Display_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Table_Id,t1.Code_Set_Id,t1.Assoc_Table_Name,t1.Ctl_Id,t1.Table_Source,t1.Table_Type,t1.Source_Description,t1.Association_Description,t1.Service_Name,t1.Database_Name,t1.Display_Sequence,''UPDATE'',''VALID'' FROM IN_CODE_SET_TABLE_ASSOCIATION t1, MST_CODE_SET_TABLE_ASSOCIATION t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Table_Id = t2.Table_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Table_Id <> t2.Table_Id OR ( t1.Table_Id IS NULL AND t2.Table_Id IS NOT NULL) OR (t1.Table_Id IS NOT NULL AND t2.Table_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Assoc_Table_Name <> t2.Assoc_Table_Name OR ( t1.Assoc_Table_Name IS NULL AND t2.Assoc_Table_Name IS NOT NULL) OR (t1.Assoc_Table_Name IS NOT NULL AND t2.Assoc_Table_Name IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Table_Source <> t2.Table_Source OR ( t1.Table_Source IS NULL AND t2.Table_Source IS NOT NULL) OR (t1.Table_Source IS NOT NULL AND t2.Table_Source IS NULL)) OR (t1.Table_Type <> t2.Table_Type OR ( t1.Table_Type IS NULL AND t2.Table_Type IS NOT NULL) OR (t1.Table_Type IS NOT NULL AND t2.Table_Type IS NULL)) OR (t1.Source_Description <> t2.Source_Description OR ( t1.Source_Description IS NULL AND t2.Source_Description IS NOT NULL) OR (t1.Source_Description IS NOT NULL AND t2.Source_Description IS NULL)) OR (t1.Association_Description <> t2.Association_Description OR ( t1.Association_Description IS NULL AND t2.Association_Description IS NOT NULL) OR (t1.Association_Description IS NOT NULL AND t2.Association_Description IS NULL)) OR (t1.Service_Name <> t2.Service_Name OR ( t1.Service_Name IS NULL AND t2.Service_Name IS NOT NULL) OR (t1.Service_Name IS NOT NULL AND t2.Service_Name IS NULL)) OR (t1.Database_Name <> t2.Database_Name OR ( t1.Database_Name IS NULL AND t2.Database_Name IS NOT NULL) OR (t1.Database_Name IS NOT NULL AND t2.Database_Name IS NULL)) OR (t1.Display_Sequence <> t2.Display_Sequence OR ( t1.Display_Sequence IS NULL AND t2.Display_Sequence IS NOT NULL) OR (t1.Display_Sequence IS NOT NULL AND t2.Display_Sequence IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CODE_SET_TABLE_ASSOCIATION', 'INSERT INTO NC_CODE_SET_TABLE_ASSOCIATION ( SCENARIO_ID,Table_Id,Code_Set_Id,Assoc_Table_Name,Ctl_Id,Table_Source,Table_Type,Source_Description,Association_Description,Service_Name,Database_Name,Display_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Table_Id,t1.Code_Set_Id,t1.Assoc_Table_Name,t1.Ctl_Id,t1.Table_Source,t1.Table_Type,t1.Source_Description,t1.Association_Description,t1.Service_Name,t1.Database_Name,t1.Display_Sequence,''ACTIVATE'',''VALID'' FROM IN_CODE_SET_TABLE_ASSOCIATION t1, MST_CODE_SET_TABLE_ASSOCIATION t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Table_Id = t2.Table_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_XREF_REL', 'INSERT INTO NC_XREF_REL ( SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,''INSERT'',''VALID'' FROM HM_IN_XREF_REL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM HM_MST_XREF_REL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND t1.XRefId = t2.XRefId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_XREF_REL', 'INSERT INTO NC_XREF_REL ( SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,''DELETE'',''VALID'' FROM HM_MST_XREF_REL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_IN_XREF_REL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND t1.XRefId = t2.XRefId ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_ERR_XREF_REL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND t1.XRefId = t2.XRefId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_XREF_REL', 'INSERT INTO NC_XREF_REL ( SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.XREF_ID,t1.ROM_ID,t1.PARENT_MATCH_COL_LIST,t1.CHILD_MATCH_COL_LIST,''UPDATE'',''VALID'' FROM HM_IN_XREF_REL t1, HM_MST_XREF_REL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND t1.XRefId = t2.XRefId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.XRefId <> t2.XRefId OR ( t1.XRefId IS NULL AND t2.XRefId IS NOT NULL) OR (t1.XRefId IS NOT NULL AND t2.XRefId IS NULL)) OR (t1.RomId <> t2.RomId OR ( t1.RomId IS NULL AND t2.RomId IS NOT NULL) OR (t1.RomId IS NOT NULL AND t2.RomId IS NULL)) OR (t1.ParentMatchColumnList <> t2.ParentMatchColumnList OR ( t1.ParentMatchColumnList IS NULL AND t2.ParentMatchColumnList IS NOT NULL) OR (t1.ParentMatchColumnList IS NOT NULL AND t2.ParentMatchColumnList IS NULL)) OR (t1.ChildMatchColumnList <> t2.ChildMatchColumnList OR ( t1.ChildMatchColumnList IS NULL AND t2.ChildMatchColumnList IS NOT NULL) OR (t1.ChildMatchColumnList IS NOT NULL AND t2.ChildMatchColumnList IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_XREF_REL', 'INSERT INTO NC_XREF_REL ( SCENARIO_ID,XREF_ID,ROM_ID,PARENT_MATCH_COL_LIST,CHILD_MATCH_COL_LIST,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.XREF_ID,t1.ROM_ID,t1.PARENT_MATCH_COL_LIST,t1.CHILD_MATCH_COL_LIST,''ACTIVATE'',''VALID'' FROM HM_IN_XREF_REL t1, HM_MST_XREF_REL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND t1.XRefId = t2.XRefId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_CROSS_REFERENCE', 'INSERT INTO NC_CROSS_REFERENCE ( SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,''INSERT'',''VALID'' FROM HM_IN_CROSS_REFERENCE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM HM_MST_CROSS_REFERENCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.XRefId = t2.XRefId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_CROSS_REFERENCE', 'INSERT INTO NC_CROSS_REFERENCE ( SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,''DELETE'',''VALID'' FROM HM_MST_CROSS_REFERENCE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_IN_CROSS_REFERENCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.XRefId = t2.XRefId ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_ERR_CROSS_REFERENCE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.XRefId = t2.XRefId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_CROSS_REFERENCE', 'INSERT INTO NC_CROSS_REFERENCE ( SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.XREF_ID,t1.XREF_NAME,t1.GOLDEN_RO_ID,t1.XREF_DESCRIPTION,''UPDATE'',''VALID'' FROM HM_IN_CROSS_REFERENCE t1, HM_MST_CROSS_REFERENCE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.XRefId = t2.XRefId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.XRefId <> t2.XRefId OR ( t1.XRefId IS NULL AND t2.XRefId IS NOT NULL) OR (t1.XRefId IS NOT NULL AND t2.XRefId IS NULL)) OR (t1.XRefName <> t2.XRefName OR ( t1.XRefName IS NULL AND t2.XRefName IS NOT NULL) OR (t1.XRefName IS NOT NULL AND t2.XRefName IS NULL)) OR (t1.GoldenRelObjId <> t2.GoldenRelObjId OR ( t1.GoldenRelObjId IS NULL AND t2.GoldenRelObjId IS NOT NULL) OR (t1.GoldenRelObjId IS NOT NULL AND t2.GoldenRelObjId IS NULL)) OR (t1.XRefDecription <> t2.XRefDecription OR ( t1.XRefDecription IS NULL AND t2.XRefDecription IS NOT NULL) OR (t1.XRefDecription IS NOT NULL AND t2.XRefDecription IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_CROSS_REFERENCE', 'INSERT INTO NC_CROSS_REFERENCE ( SCENARIO_ID,XREF_ID,XREF_NAME,GOLDEN_RO_ID,XREF_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.XREF_ID,t1.XREF_NAME,t1.GOLDEN_RO_ID,t1.XREF_DESCRIPTION,''ACTIVATE'',''VALID'' FROM HM_IN_CROSS_REFERENCE t1, HM_MST_CROSS_REFERENCE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.XRefId = t2.XRefId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUSTOM_CODE_SET_CLM', 'INSERT INTO NC_CUSTOM_CODE_SET_CLM ( SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Logical_Display_Column_Name,Physical_Display_Column_Name,Column_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Logical_Display_Column_Name,Physical_Display_Column_Name,Column_Sequence,''INSERT'',''VALID'' FROM IN_CUSTOM_CODE_SET_CLM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_CUSTOM_CODE_SET_CLM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Column_Type = t2.Column_Type AND t1.Logical_Column_Name = t2.Logical_Column_Name )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUSTOM_CODE_SET_CLM', 'INSERT INTO NC_CUSTOM_CODE_SET_CLM ( SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Logical_Display_Column_Name,Physical_Display_Column_Name,Column_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Logical_Display_Column_Name,Physical_Display_Column_Name,Column_Sequence,''DELETE'',''VALID'' FROM MST_CUSTOM_CODE_SET_CLM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_CUSTOM_CODE_SET_CLM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Column_Type = t2.Column_Type AND t1.Logical_Column_Name = t2.Logical_Column_Name ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_CUSTOM_CODE_SET_CLM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Column_Type = t2.Column_Type AND t1.Logical_Column_Name = t2.Logical_Column_Name));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUSTOM_CODE_SET_CLM', 'INSERT INTO NC_CUSTOM_CODE_SET_CLM ( SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Logical_Display_Column_Name,Physical_Display_Column_Name,Column_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Column_Type,t1.Logical_Column_Name,t1.Physical_Column_Name,t1.Logical_Display_Column_Name,t1.Physical_Display_Column_Name,t1.Column_Sequence,''UPDATE'',''VALID'' FROM IN_CUSTOM_CODE_SET_CLM t1, MST_CUSTOM_CODE_SET_CLM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Column_Type = t2.Column_Type AND t1.Logical_Column_Name = t2.Logical_Column_Name AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Column_Type <> t2.Column_Type OR ( t1.Column_Type IS NULL AND t2.Column_Type IS NOT NULL) OR (t1.Column_Type IS NOT NULL AND t2.Column_Type IS NULL)) OR (t1.Logical_Column_Name <> t2.Logical_Column_Name OR ( t1.Logical_Column_Name IS NULL AND t2.Logical_Column_Name IS NOT NULL) OR (t1.Logical_Column_Name IS NOT NULL AND t2.Logical_Column_Name IS NULL)) OR (t1.Physical_Column_Name <> t2.Physical_Column_Name OR ( t1.Physical_Column_Name IS NULL AND t2.Physical_Column_Name IS NOT NULL) OR (t1.Physical_Column_Name IS NOT NULL AND t2.Physical_Column_Name IS NULL)) OR (t1.Logical_Display_Column_Name <> t2.Logical_Display_Column_Name OR ( t1.Logical_Display_Column_Name IS NULL AND t2.Logical_Display_Column_Name IS NOT NULL) OR (t1.Logical_Display_Column_Name IS NOT NULL AND t2.Logical_Display_Column_Name IS NULL)) OR (t1.Physical_Display_Column_Name <> t2.Physical_Display_Column_Name OR ( t1.Physical_Display_Column_Name IS NULL AND t2.Physical_Display_Column_Name IS NOT NULL) OR (t1.Physical_Display_Column_Name IS NOT NULL AND t2.Physical_Display_Column_Name IS NULL)) OR (t1.Column_Sequence <> t2.Column_Sequence OR ( t1.Column_Sequence IS NULL AND t2.Column_Sequence IS NOT NULL) OR (t1.Column_Sequence IS NOT NULL AND t2.Column_Sequence IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_CUSTOM_CODE_SET_CLM', 'INSERT INTO NC_CUSTOM_CODE_SET_CLM ( SCENARIO_ID,Code_Set_Id,Column_Type,Logical_Column_Name,Physical_Column_Name,Logical_Display_Column_Name,Physical_Display_Column_Name,Column_Sequence,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Column_Type,t1.Logical_Column_Name,t1.Physical_Column_Name,t1.Logical_Display_Column_Name,t1.Physical_Display_Column_Name,t1.Column_Sequence,''ACTIVATE'',''VALID'' FROM IN_CUSTOM_CODE_SET_CLM t1, MST_CUSTOM_CODE_SET_CLM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Column_Type = t2.Column_Type AND t1.Logical_Column_Name = t2.Logical_Column_Name AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE', 'INSERT INTO NC_DEVICE ( SCENARIO_ID,DEVICE_ID,EQUIP_SER_NUM,DEVICE_type_CD,IMEI,MFGR_SER_NUM,MOB_EQUIP_ID,Visor_NUM,TELEMATICS_CNTRL_UNIT_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,ICCID,MSISDN,SFTWR_VERS,SFTWR_UPD_DT,DEACT_DT,DEVICE_PRVSN_DT,DEVICE_DSTRBR_NAME,INIT_ACTVTN_DT,MFGR_ID,MFGNG_DT,DEVICE_STS_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_ID,EQUIP_SER_NUM,DEVICE_type_CD,IMEI,MFGR_SER_NUM,MOB_EQUIP_ID,Visor_NUM,TELEMATICS_CNTRL_UNIT_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,ICCID,MSISDN,SFTWR_VERS,SFTWR_UPD_DT,DEACT_DT,DEVICE_PRVSN_DT,DEVICE_DSTRBR_NAME,INIT_ACTVTN_DT,MFGR_ID,MFGNG_DT,DEVICE_STS_CD,LOB_NUM,''INSERT'',''VALID'' FROM IN_DEVICE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_DEVICE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE', 'INSERT INTO NC_DEVICE ( SCENARIO_ID,DEVICE_ID,EQUIP_SER_NUM,DEVICE_type_CD,IMEI,MFGR_SER_NUM,MOB_EQUIP_ID,Visor_NUM,TELEMATICS_CNTRL_UNIT_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,ICCID,MSISDN,SFTWR_VERS,SFTWR_UPD_DT,DEACT_DT,DEVICE_PRVSN_DT,DEVICE_DSTRBR_NAME,INIT_ACTVTN_DT,MFGR_ID,MFGNG_DT,DEVICE_STS_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_ID,EQUIP_SER_NUM,DEVICE_type_CD,IMEI,MFGR_SER_NUM,MOB_EQUIP_ID,Visor_NUM,TELEMATICS_CNTRL_UNIT_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,ICCID,MSISDN,SFTWR_VERS,SFTWR_UPD_DT,DEACT_DT,DEVICE_PRVSN_DT,DEVICE_DSTRBR_NAME,INIT_ACTVTN_DT,MFGR_ID,MFGNG_DT,DEVICE_STS_CD,LOB_NUM,''DELETE'',''VALID'' FROM M_DEVICE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DEVICE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_DEVICE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE', 'INSERT INTO NC_DEVICE ( SCENARIO_ID,DEVICE_ID,EQUIP_SER_NUM,DEVICE_type_CD,IMEI,MFGR_SER_NUM,MOB_EQUIP_ID,Visor_NUM,TELEMATICS_CNTRL_UNIT_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,ICCID,MSISDN,SFTWR_VERS,SFTWR_UPD_DT,DEACT_DT,DEVICE_PRVSN_DT,DEVICE_DSTRBR_NAME,INIT_ACTVTN_DT,MFGR_ID,MFGNG_DT,DEVICE_STS_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_ID,t1.EQUIP_SER_NUM,t1.DEVICE_type_CD,t1.IMEI,t1.MFGR_SER_NUM,t1.MOB_EQUIP_ID,t1.Visor_NUM,t1.TELEMATICS_CNTRL_UNIT_NUM,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.ICCID,t1.MSISDN,t1.SFTWR_VERS,t1.SFTWR_UPD_DT,t1.DEACT_DT,t1.DEVICE_PRVSN_DT,t1.DEVICE_DSTRBR_NAME,t1.INIT_ACTVTN_DT,t1.MFGR_ID,t1.MFGNG_DT,t1.DEVICE_STS_CD,t1.LOB_NUM,''UPDATE'',''VALID'' FROM IN_DEVICE t1, M_DEVICE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DEVICE_ID <> t2.DEVICE_ID OR ( t1.DEVICE_ID IS NULL AND t2.DEVICE_ID IS NOT NULL) OR (t1.DEVICE_ID IS NOT NULL AND t2.DEVICE_ID IS NULL)) OR (t1.EQUIP_SER_NUM <> t2.EQUIP_SER_NUM OR ( t1.EQUIP_SER_NUM IS NULL AND t2.EQUIP_SER_NUM IS NOT NULL) OR (t1.EQUIP_SER_NUM IS NOT NULL AND t2.EQUIP_SER_NUM IS NULL)) OR (t1.DEVICE_type_CD <> t2.DEVICE_type_CD OR ( t1.DEVICE_type_CD IS NULL AND t2.DEVICE_type_CD IS NOT NULL) OR (t1.DEVICE_type_CD IS NOT NULL AND t2.DEVICE_type_CD IS NULL)) OR (t1.IMEI <> t2.IMEI OR ( t1.IMEI IS NULL AND t2.IMEI IS NOT NULL) OR (t1.IMEI IS NOT NULL AND t2.IMEI IS NULL)) OR (t1.MFGR_SER_NUM <> t2.MFGR_SER_NUM OR ( t1.MFGR_SER_NUM IS NULL AND t2.MFGR_SER_NUM IS NOT NULL) OR (t1.MFGR_SER_NUM IS NOT NULL AND t2.MFGR_SER_NUM IS NULL)) OR (t1.MOB_EQUIP_ID <> t2.MOB_EQUIP_ID OR ( t1.MOB_EQUIP_ID IS NULL AND t2.MOB_EQUIP_ID IS NOT NULL) OR (t1.MOB_EQUIP_ID IS NOT NULL AND t2.MOB_EQUIP_ID IS NULL)) OR (t1.Visor_NUM <> t2.Visor_NUM OR ( t1.Visor_NUM IS NULL AND t2.Visor_NUM IS NOT NULL) OR (t1.Visor_NUM IS NOT NULL AND t2.Visor_NUM IS NULL)) OR (t1.TELEMATICS_CNTRL_UNIT_NUM <> t2.TELEMATICS_CNTRL_UNIT_NUM OR ( t1.TELEMATICS_CNTRL_UNIT_NUM IS NULL AND t2.TELEMATICS_CNTRL_UNIT_NUM IS NOT NULL) OR (t1.TELEMATICS_CNTRL_UNIT_NUM IS NOT NULL AND t2.TELEMATICS_CNTRL_UNIT_NUM IS NULL)) OR (t1.CURR_PREV_IND <> t2.CURR_PREV_IND OR ( t1.CURR_PREV_IND IS NULL AND t2.CURR_PREV_IND IS NOT NULL) OR (t1.CURR_PREV_IND IS NOT NULL AND t2.CURR_PREV_IND IS NULL)) OR (t1.CNTL_EFF_DT <> t2.CNTL_EFF_DT OR ( t1.CNTL_EFF_DT IS NULL AND t2.CNTL_EFF_DT IS NOT NULL) OR (t1.CNTL_EFF_DT IS NOT NULL AND t2.CNTL_EFF_DT IS NULL)) OR (t1.CNTL_EXP_DT <> t2.CNTL_EXP_DT OR ( t1.CNTL_EXP_DT IS NULL AND t2.CNTL_EXP_DT IS NOT NULL) OR (t1.CNTL_EXP_DT IS NOT NULL AND t2.CNTL_EXP_DT IS NULL)) OR (t1.ICCID <> t2.ICCID OR ( t1.ICCID IS NULL AND t2.ICCID IS NOT NULL) OR (t1.ICCID IS NOT NULL AND t2.ICCID IS NULL)) OR (t1.MSISDN <> t2.MSISDN OR ( t1.MSISDN IS NULL AND t2.MSISDN IS NOT NULL) OR (t1.MSISDN IS NOT NULL AND t2.MSISDN IS NULL)) OR (t1.SFTWR_VERS <> t2.SFTWR_VERS OR ( t1.SFTWR_VERS IS NULL AND t2.SFTWR_VERS IS NOT NULL) OR (t1.SFTWR_VERS IS NOT NULL AND t2.SFTWR_VERS IS NULL)) OR (t1.SFTWR_UPD_DT <> t2.SFTWR_UPD_DT OR ( t1.SFTWR_UPD_DT IS NULL AND t2.SFTWR_UPD_DT IS NOT NULL) OR (t1.SFTWR_UPD_DT IS NOT NULL AND t2.SFTWR_UPD_DT IS NULL)) OR (t1.DEACT_DT <> t2.DEACT_DT OR ( t1.DEACT_DT IS NULL AND t2.DEACT_DT IS NOT NULL) OR (t1.DEACT_DT IS NOT NULL AND t2.DEACT_DT IS NULL)) OR (t1.DEVICE_PRVSN_DT <> t2.DEVICE_PRVSN_DT OR ( t1.DEVICE_PRVSN_DT IS NULL AND t2.DEVICE_PRVSN_DT IS NOT NULL) OR (t1.DEVICE_PRVSN_DT IS NOT NULL AND t2.DEVICE_PRVSN_DT IS NULL)) OR (t1.DEVICE_DSTRBR_NAME <> t2.DEVICE_DSTRBR_NAME OR ( t1.DEVICE_DSTRBR_NAME IS NULL AND t2.DEVICE_DSTRBR_NAME IS NOT NULL) OR (t1.DEVICE_DSTRBR_NAME IS NOT NULL AND t2.DEVICE_DSTRBR_NAME IS NULL)) OR (t1.INIT_ACTVTN_DT <> t2.INIT_ACTVTN_DT OR ( t1.INIT_ACTVTN_DT IS NULL AND t2.INIT_ACTVTN_DT IS NOT NULL) OR (t1.INIT_ACTVTN_DT IS NOT NULL AND t2.INIT_ACTVTN_DT IS NULL)) OR (t1.MFGR_ID <> t2.MFGR_ID OR ( t1.MFGR_ID IS NULL AND t2.MFGR_ID IS NOT NULL) OR (t1.MFGR_ID IS NOT NULL AND t2.MFGR_ID IS NULL)) OR (t1.MFGNG_DT <> t2.MFGNG_DT OR ( t1.MFGNG_DT IS NULL AND t2.MFGNG_DT IS NOT NULL) OR (t1.MFGNG_DT IS NOT NULL AND t2.MFGNG_DT IS NULL)) OR (t1.DEVICE_STS_CD <> t2.DEVICE_STS_CD OR ( t1.DEVICE_STS_CD IS NULL AND t2.DEVICE_STS_CD IS NOT NULL) OR (t1.DEVICE_STS_CD IS NOT NULL AND t2.DEVICE_STS_CD IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE', 'INSERT INTO NC_DEVICE ( SCENARIO_ID,DEVICE_ID,EQUIP_SER_NUM,DEVICE_type_CD,IMEI,MFGR_SER_NUM,MOB_EQUIP_ID,Visor_NUM,TELEMATICS_CNTRL_UNIT_NUM,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,ICCID,MSISDN,SFTWR_VERS,SFTWR_UPD_DT,DEACT_DT,DEVICE_PRVSN_DT,DEVICE_DSTRBR_NAME,INIT_ACTVTN_DT,MFGR_ID,MFGNG_DT,DEVICE_STS_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_ID,t1.EQUIP_SER_NUM,t1.DEVICE_type_CD,t1.IMEI,t1.MFGR_SER_NUM,t1.MOB_EQUIP_ID,t1.Visor_NUM,t1.TELEMATICS_CNTRL_UNIT_NUM,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.ICCID,t1.MSISDN,t1.SFTWR_VERS,t1.SFTWR_UPD_DT,t1.DEACT_DT,t1.DEVICE_PRVSN_DT,t1.DEVICE_DSTRBR_NAME,t1.INIT_ACTVTN_DT,t1.MFGR_ID,t1.MFGNG_DT,t1.DEVICE_STS_CD,t1.LOB_NUM,''ACTIVATE'',''VALID'' FROM IN_DEVICE t1, M_DEVICE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_FEAT', 'INSERT INTO NC_DEVICE_FEAT ( SCENARIO_ID,DEVICE_ID,FEAT_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_ID,FEAT_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,''INSERT'',''VALID'' FROM IN_DEVICE_FEAT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_DEVICE_FEAT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FEAT_CD = t2.FEAT_CD AND t1.DEVICE_ID = t2.DEVICE_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_FEAT', 'INSERT INTO NC_DEVICE_FEAT ( SCENARIO_ID,DEVICE_ID,FEAT_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_ID,FEAT_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,''DELETE'',''VALID'' FROM M_DEVICE_FEAT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DEVICE_FEAT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FEAT_CD = t2.FEAT_CD AND t1.DEVICE_ID = t2.DEVICE_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_DEVICE_FEAT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FEAT_CD = t2.FEAT_CD AND t1.DEVICE_ID = t2.DEVICE_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_FEAT', 'INSERT INTO NC_DEVICE_FEAT ( SCENARIO_ID,DEVICE_ID,FEAT_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_ID,t1.FEAT_CD,t1.FEAT_SETUP_STRT_DT,t1.FEAT_SETUP_END_DT,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,''UPDATE'',''VALID'' FROM IN_DEVICE_FEAT t1, M_DEVICE_FEAT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FEAT_CD = t2.FEAT_CD AND t1.DEVICE_ID = t2.DEVICE_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DEVICE_ID <> t2.DEVICE_ID OR ( t1.DEVICE_ID IS NULL AND t2.DEVICE_ID IS NOT NULL) OR (t1.DEVICE_ID IS NOT NULL AND t2.DEVICE_ID IS NULL)) OR (t1.FEAT_CD <> t2.FEAT_CD OR ( t1.FEAT_CD IS NULL AND t2.FEAT_CD IS NOT NULL) OR (t1.FEAT_CD IS NOT NULL AND t2.FEAT_CD IS NULL)) OR (t1.FEAT_SETUP_STRT_DT <> t2.FEAT_SETUP_STRT_DT OR ( t1.FEAT_SETUP_STRT_DT IS NULL AND t2.FEAT_SETUP_STRT_DT IS NOT NULL) OR (t1.FEAT_SETUP_STRT_DT IS NOT NULL AND t2.FEAT_SETUP_STRT_DT IS NULL)) OR (t1.FEAT_SETUP_END_DT <> t2.FEAT_SETUP_END_DT OR ( t1.FEAT_SETUP_END_DT IS NULL AND t2.FEAT_SETUP_END_DT IS NOT NULL) OR (t1.FEAT_SETUP_END_DT IS NOT NULL AND t2.FEAT_SETUP_END_DT IS NULL)) OR (t1.CURR_PREV_IND <> t2.CURR_PREV_IND OR ( t1.CURR_PREV_IND IS NULL AND t2.CURR_PREV_IND IS NOT NULL) OR (t1.CURR_PREV_IND IS NOT NULL AND t2.CURR_PREV_IND IS NULL)) OR (t1.CNTL_EFF_DT <> t2.CNTL_EFF_DT OR ( t1.CNTL_EFF_DT IS NULL AND t2.CNTL_EFF_DT IS NOT NULL) OR (t1.CNTL_EFF_DT IS NOT NULL AND t2.CNTL_EFF_DT IS NULL)) OR (t1.CNTL_EXP_DT <> t2.CNTL_EXP_DT OR ( t1.CNTL_EXP_DT IS NULL AND t2.CNTL_EXP_DT IS NOT NULL) OR (t1.CNTL_EXP_DT IS NOT NULL AND t2.CNTL_EXP_DT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_FEAT', 'INSERT INTO NC_DEVICE_FEAT ( SCENARIO_ID,DEVICE_ID,FEAT_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_ID,t1.FEAT_CD,t1.FEAT_SETUP_STRT_DT,t1.FEAT_SETUP_END_DT,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,''ACTIVATE'',''VALID'' FROM IN_DEVICE_FEAT t1, M_DEVICE_FEAT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FEAT_CD = t2.FEAT_CD AND t1.DEVICE_ID = t2.DEVICE_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_IDNTFTN', 'INSERT INTO NC_DEVICE_IDNTFTN ( SCENARIO_ID,DEVICE_ID,DEVICE_IDNTFTN_type,DEVICE_IDNTFTN_VAL,DEVICE_IDNTFTN_STRT_DT,DEVICE_IDNTFTN_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_ID,DEVICE_IDNTFTN_type,DEVICE_IDNTFTN_VAL,DEVICE_IDNTFTN_STRT_DT,DEVICE_IDNTFTN_END_DT,''INSERT'',''VALID'' FROM IN_DEVICE_IDNTFTN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_DEVICE_IDNTFTN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.DEVICE_IDNTFTN_VAL = t2.DEVICE_IDNTFTN_VAL AND t1.DEVICE_IDNTFTN_STRT_DT = t2.DEVICE_IDNTFTN_STRT_DT )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_IDNTFTN', 'INSERT INTO NC_DEVICE_IDNTFTN ( SCENARIO_ID,DEVICE_ID,DEVICE_IDNTFTN_type,DEVICE_IDNTFTN_VAL,DEVICE_IDNTFTN_STRT_DT,DEVICE_IDNTFTN_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_ID,DEVICE_IDNTFTN_type,DEVICE_IDNTFTN_VAL,DEVICE_IDNTFTN_STRT_DT,DEVICE_IDNTFTN_END_DT,''DELETE'',''VALID'' FROM M_DEVICE_IDNTFTN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DEVICE_IDNTFTN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.DEVICE_IDNTFTN_VAL = t2.DEVICE_IDNTFTN_VAL AND t1.DEVICE_IDNTFTN_STRT_DT = t2.DEVICE_IDNTFTN_STRT_DT ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_DEVICE_IDNTFTN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.DEVICE_IDNTFTN_VAL = t2.DEVICE_IDNTFTN_VAL AND t1.DEVICE_IDNTFTN_STRT_DT = t2.DEVICE_IDNTFTN_STRT_DT));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_IDNTFTN', 'INSERT INTO NC_DEVICE_IDNTFTN ( SCENARIO_ID,DEVICE_ID,DEVICE_IDNTFTN_type,DEVICE_IDNTFTN_VAL,DEVICE_IDNTFTN_STRT_DT,DEVICE_IDNTFTN_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_ID,t1.DEVICE_IDNTFTN_type,t1.DEVICE_IDNTFTN_VAL,t1.DEVICE_IDNTFTN_STRT_DT,t1.DEVICE_IDNTFTN_END_DT,''UPDATE'',''VALID'' FROM IN_DEVICE_IDNTFTN t1, M_DEVICE_IDNTFTN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.DEVICE_IDNTFTN_VAL = t2.DEVICE_IDNTFTN_VAL AND t1.DEVICE_IDNTFTN_STRT_DT = t2.DEVICE_IDNTFTN_STRT_DT AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DEVICE_ID <> t2.DEVICE_ID OR ( t1.DEVICE_ID IS NULL AND t2.DEVICE_ID IS NOT NULL) OR (t1.DEVICE_ID IS NOT NULL AND t2.DEVICE_ID IS NULL)) OR (t1.DEVICE_IDNTFTN_type <> t2.DEVICE_IDNTFTN_type OR ( t1.DEVICE_IDNTFTN_type IS NULL AND t2.DEVICE_IDNTFTN_type IS NOT NULL) OR (t1.DEVICE_IDNTFTN_type IS NOT NULL AND t2.DEVICE_IDNTFTN_type IS NULL)) OR (t1.DEVICE_IDNTFTN_VAL <> t2.DEVICE_IDNTFTN_VAL OR ( t1.DEVICE_IDNTFTN_VAL IS NULL AND t2.DEVICE_IDNTFTN_VAL IS NOT NULL) OR (t1.DEVICE_IDNTFTN_VAL IS NOT NULL AND t2.DEVICE_IDNTFTN_VAL IS NULL)) OR (t1.DEVICE_IDNTFTN_STRT_DT <> t2.DEVICE_IDNTFTN_STRT_DT OR ( t1.DEVICE_IDNTFTN_STRT_DT IS NULL AND t2.DEVICE_IDNTFTN_STRT_DT IS NOT NULL) OR (t1.DEVICE_IDNTFTN_STRT_DT IS NOT NULL AND t2.DEVICE_IDNTFTN_STRT_DT IS NULL)) OR (t1.DEVICE_IDNTFTN_END_DT <> t2.DEVICE_IDNTFTN_END_DT OR ( t1.DEVICE_IDNTFTN_END_DT IS NULL AND t2.DEVICE_IDNTFTN_END_DT IS NOT NULL) OR (t1.DEVICE_IDNTFTN_END_DT IS NOT NULL AND t2.DEVICE_IDNTFTN_END_DT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_IDNTFTN', 'INSERT INTO NC_DEVICE_IDNTFTN ( SCENARIO_ID,DEVICE_ID,DEVICE_IDNTFTN_type,DEVICE_IDNTFTN_VAL,DEVICE_IDNTFTN_STRT_DT,DEVICE_IDNTFTN_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_ID,t1.DEVICE_IDNTFTN_type,t1.DEVICE_IDNTFTN_VAL,t1.DEVICE_IDNTFTN_STRT_DT,t1.DEVICE_IDNTFTN_END_DT,''ACTIVATE'',''VALID'' FROM IN_DEVICE_IDNTFTN t1, M_DEVICE_IDNTFTN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.DEVICE_IDNTFTN_VAL = t2.DEVICE_IDNTFTN_VAL AND t1.DEVICE_IDNTFTN_STRT_DT = t2.DEVICE_IDNTFTN_STRT_DT AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_LINE', 'INSERT INTO NC_DEVICE_LINE ( SCENARIO_ID,MSISDN,CARIER_CD,MTN,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_line_STS_CD,DEVICE_line_EFF_STRT_DT,DEVICE_line_EFF_END_DT,MOB_DIR_NUM,IMSI,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MSISDN,CARIER_CD,MTN,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_line_STS_CD,DEVICE_line_EFF_STRT_DT,DEVICE_line_EFF_END_DT,MOB_DIR_NUM,IMSI,''INSERT'',''VALID'' FROM IN_DEVICE_LINE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_DEVICE_LINE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MSISDN = t2.MSISDN )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_LINE', 'INSERT INTO NC_DEVICE_LINE ( SCENARIO_ID,MSISDN,CARIER_CD,MTN,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_line_STS_CD,DEVICE_line_EFF_STRT_DT,DEVICE_line_EFF_END_DT,MOB_DIR_NUM,IMSI,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MSISDN,CARIER_CD,MTN,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_line_STS_CD,DEVICE_line_EFF_STRT_DT,DEVICE_line_EFF_END_DT,MOB_DIR_NUM,IMSI,''DELETE'',''VALID'' FROM M_DEVICE_LINE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DEVICE_LINE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MSISDN = t2.MSISDN ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_DEVICE_LINE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MSISDN = t2.MSISDN));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_LINE', 'INSERT INTO NC_DEVICE_LINE ( SCENARIO_ID,MSISDN,CARIER_CD,MTN,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_line_STS_CD,DEVICE_line_EFF_STRT_DT,DEVICE_line_EFF_END_DT,MOB_DIR_NUM,IMSI,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MSISDN,t1.CARIER_CD,t1.MTN,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.DEVICE_line_STS_CD,t1.DEVICE_line_EFF_STRT_DT,t1.DEVICE_line_EFF_END_DT,t1.MOB_DIR_NUM,t1.IMSI,''UPDATE'',''VALID'' FROM IN_DEVICE_LINE t1, M_DEVICE_LINE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MSISDN = t2.MSISDN AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MSISDN <> t2.MSISDN OR ( t1.MSISDN IS NULL AND t2.MSISDN IS NOT NULL) OR (t1.MSISDN IS NOT NULL AND t2.MSISDN IS NULL)) OR (t1.CARIER_CD <> t2.CARIER_CD OR ( t1.CARIER_CD IS NULL AND t2.CARIER_CD IS NOT NULL) OR (t1.CARIER_CD IS NOT NULL AND t2.CARIER_CD IS NULL)) OR (t1.MTN <> t2.MTN OR ( t1.MTN IS NULL AND t2.MTN IS NOT NULL) OR (t1.MTN IS NOT NULL AND t2.MTN IS NULL)) OR (t1.CURR_PREV_IND <> t2.CURR_PREV_IND OR ( t1.CURR_PREV_IND IS NULL AND t2.CURR_PREV_IND IS NOT NULL) OR (t1.CURR_PREV_IND IS NOT NULL AND t2.CURR_PREV_IND IS NULL)) OR (t1.CNTL_EFF_DT <> t2.CNTL_EFF_DT OR ( t1.CNTL_EFF_DT IS NULL AND t2.CNTL_EFF_DT IS NOT NULL) OR (t1.CNTL_EFF_DT IS NOT NULL AND t2.CNTL_EFF_DT IS NULL)) OR (t1.CNTL_EXP_DT <> t2.CNTL_EXP_DT OR ( t1.CNTL_EXP_DT IS NULL AND t2.CNTL_EXP_DT IS NOT NULL) OR (t1.CNTL_EXP_DT IS NOT NULL AND t2.CNTL_EXP_DT IS NULL)) OR (t1.DEVICE_line_STS_CD <> t2.DEVICE_line_STS_CD OR ( t1.DEVICE_line_STS_CD IS NULL AND t2.DEVICE_line_STS_CD IS NOT NULL) OR (t1.DEVICE_line_STS_CD IS NOT NULL AND t2.DEVICE_line_STS_CD IS NULL)) OR (t1.DEVICE_line_EFF_STRT_DT <> t2.DEVICE_line_EFF_STRT_DT OR ( t1.DEVICE_line_EFF_STRT_DT IS NULL AND t2.DEVICE_line_EFF_STRT_DT IS NOT NULL) OR (t1.DEVICE_line_EFF_STRT_DT IS NOT NULL AND t2.DEVICE_line_EFF_STRT_DT IS NULL)) OR (t1.DEVICE_line_EFF_END_DT <> t2.DEVICE_line_EFF_END_DT OR ( t1.DEVICE_line_EFF_END_DT IS NULL AND t2.DEVICE_line_EFF_END_DT IS NOT NULL) OR (t1.DEVICE_line_EFF_END_DT IS NOT NULL AND t2.DEVICE_line_EFF_END_DT IS NULL)) OR (t1.MOB_DIR_NUM <> t2.MOB_DIR_NUM OR ( t1.MOB_DIR_NUM IS NULL AND t2.MOB_DIR_NUM IS NOT NULL) OR (t1.MOB_DIR_NUM IS NOT NULL AND t2.MOB_DIR_NUM IS NULL)) OR (t1.IMSI <> t2.IMSI OR ( t1.IMSI IS NULL AND t2.IMSI IS NOT NULL) OR (t1.IMSI IS NOT NULL AND t2.IMSI IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_LINE', 'INSERT INTO NC_DEVICE_LINE ( SCENARIO_ID,MSISDN,CARIER_CD,MTN,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_line_STS_CD,DEVICE_line_EFF_STRT_DT,DEVICE_line_EFF_END_DT,MOB_DIR_NUM,IMSI,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MSISDN,t1.CARIER_CD,t1.MTN,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.DEVICE_line_STS_CD,t1.DEVICE_line_EFF_STRT_DT,t1.DEVICE_line_EFF_END_DT,t1.MOB_DIR_NUM,t1.IMSI,''ACTIVATE'',''VALID'' FROM IN_DEVICE_LINE t1, M_DEVICE_LINE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MSISDN = t2.MSISDN AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_MFGR', 'INSERT INTO NC_DEVICE_MFGR ( SCENARIO_ID,MFGR_ID,Manufucturer_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MFGR_ID,Manufucturer_NAME,''INSERT'',''VALID'' FROM IN_DEVICE_MFGR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_DEVICE_MFGR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MFGR_ID = t2.MFGR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_MFGR', 'INSERT INTO NC_DEVICE_MFGR ( SCENARIO_ID,MFGR_ID,Manufucturer_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MFGR_ID,Manufucturer_NAME,''DELETE'',''VALID'' FROM M_DEVICE_MFGR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DEVICE_MFGR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MFGR_ID = t2.MFGR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_DEVICE_MFGR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MFGR_ID = t2.MFGR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_MFGR', 'INSERT INTO NC_DEVICE_MFGR ( SCENARIO_ID,MFGR_ID,Manufucturer_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MFGR_ID,t1.Manufucturer_NAME,''UPDATE'',''VALID'' FROM IN_DEVICE_MFGR t1, M_DEVICE_MFGR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MFGR_ID = t2.MFGR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MFGR_ID <> t2.MFGR_ID OR ( t1.MFGR_ID IS NULL AND t2.MFGR_ID IS NOT NULL) OR (t1.MFGR_ID IS NOT NULL AND t2.MFGR_ID IS NULL)) OR (t1.Manufucturer_NAME <> t2.Manufucturer_NAME OR ( t1.Manufucturer_NAME IS NULL AND t2.Manufucturer_NAME IS NOT NULL) OR (t1.Manufucturer_NAME IS NOT NULL AND t2.Manufucturer_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_MFGR', 'INSERT INTO NC_DEVICE_MFGR ( SCENARIO_ID,MFGR_ID,Manufucturer_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MFGR_ID,t1.Manufucturer_NAME,''ACTIVATE'',''VALID'' FROM IN_DEVICE_MFGR t1, M_DEVICE_MFGR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.MFGR_ID = t2.MFGR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_TYPE', 'INSERT INTO NC_DEVICE_TYPE ( SCENARIO_ID,DEVICE_type_CD,DEVICE_type_NAME,DEVICE_DESC,BRND,CURR_PREV_IND,DEVICE_SRC_ID,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_type_GNRTN,MODL_NUM,MODL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_type_CD,DEVICE_type_NAME,DEVICE_DESC,BRND,CURR_PREV_IND,DEVICE_SRC_ID,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_type_GNRTN,MODL_NUM,MODL_NAME,''INSERT'',''VALID'' FROM IN_DEVICE_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_DEVICE_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_type_CD = t2.DEVICE_type_CD )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_TYPE', 'INSERT INTO NC_DEVICE_TYPE ( SCENARIO_ID,DEVICE_type_CD,DEVICE_type_NAME,DEVICE_DESC,BRND,CURR_PREV_IND,DEVICE_SRC_ID,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_type_GNRTN,MODL_NUM,MODL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_type_CD,DEVICE_type_NAME,DEVICE_DESC,BRND,CURR_PREV_IND,DEVICE_SRC_ID,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_type_GNRTN,MODL_NUM,MODL_NAME,''DELETE'',''VALID'' FROM M_DEVICE_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DEVICE_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_type_CD = t2.DEVICE_type_CD ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_DEVICE_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_type_CD = t2.DEVICE_type_CD));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_TYPE', 'INSERT INTO NC_DEVICE_TYPE ( SCENARIO_ID,DEVICE_type_CD,DEVICE_type_NAME,DEVICE_DESC,BRND,CURR_PREV_IND,DEVICE_SRC_ID,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_type_GNRTN,MODL_NUM,MODL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_type_CD,t1.DEVICE_type_NAME,t1.DEVICE_DESC,t1.BRND,t1.CURR_PREV_IND,t1.DEVICE_SRC_ID,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.DEVICE_type_GNRTN,t1.MODL_NUM,t1.MODL_NAME,''UPDATE'',''VALID'' FROM IN_DEVICE_TYPE t1, M_DEVICE_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_type_CD = t2.DEVICE_type_CD AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DEVICE_type_CD <> t2.DEVICE_type_CD OR ( t1.DEVICE_type_CD IS NULL AND t2.DEVICE_type_CD IS NOT NULL) OR (t1.DEVICE_type_CD IS NOT NULL AND t2.DEVICE_type_CD IS NULL)) OR (t1.DEVICE_type_NAME <> t2.DEVICE_type_NAME OR ( t1.DEVICE_type_NAME IS NULL AND t2.DEVICE_type_NAME IS NOT NULL) OR (t1.DEVICE_type_NAME IS NOT NULL AND t2.DEVICE_type_NAME IS NULL)) OR (t1.DEVICE_DESC <> t2.DEVICE_DESC OR ( t1.DEVICE_DESC IS NULL AND t2.DEVICE_DESC IS NOT NULL) OR (t1.DEVICE_DESC IS NOT NULL AND t2.DEVICE_DESC IS NULL)) OR (t1.BRND <> t2.BRND OR ( t1.BRND IS NULL AND t2.BRND IS NOT NULL) OR (t1.BRND IS NOT NULL AND t2.BRND IS NULL)) OR (t1.CURR_PREV_IND <> t2.CURR_PREV_IND OR ( t1.CURR_PREV_IND IS NULL AND t2.CURR_PREV_IND IS NOT NULL) OR (t1.CURR_PREV_IND IS NOT NULL AND t2.CURR_PREV_IND IS NULL)) OR (t1.DEVICE_SRC_ID <> t2.DEVICE_SRC_ID OR ( t1.DEVICE_SRC_ID IS NULL AND t2.DEVICE_SRC_ID IS NOT NULL) OR (t1.DEVICE_SRC_ID IS NOT NULL AND t2.DEVICE_SRC_ID IS NULL)) OR (t1.CNTL_EFF_DT <> t2.CNTL_EFF_DT OR ( t1.CNTL_EFF_DT IS NULL AND t2.CNTL_EFF_DT IS NOT NULL) OR (t1.CNTL_EFF_DT IS NOT NULL AND t2.CNTL_EFF_DT IS NULL)) OR (t1.CNTL_EXP_DT <> t2.CNTL_EXP_DT OR ( t1.CNTL_EXP_DT IS NULL AND t2.CNTL_EXP_DT IS NOT NULL) OR (t1.CNTL_EXP_DT IS NOT NULL AND t2.CNTL_EXP_DT IS NULL)) OR (t1.DEVICE_type_GNRTN <> t2.DEVICE_type_GNRTN OR ( t1.DEVICE_type_GNRTN IS NULL AND t2.DEVICE_type_GNRTN IS NOT NULL) OR (t1.DEVICE_type_GNRTN IS NOT NULL AND t2.DEVICE_type_GNRTN IS NULL)) OR (t1.MODL_NUM <> t2.MODL_NUM OR ( t1.MODL_NUM IS NULL AND t2.MODL_NUM IS NOT NULL) OR (t1.MODL_NUM IS NOT NULL AND t2.MODL_NUM IS NULL)) OR (t1.MODL_NAME <> t2.MODL_NAME OR ( t1.MODL_NAME IS NULL AND t2.MODL_NAME IS NOT NULL) OR (t1.MODL_NAME IS NOT NULL AND t2.MODL_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DEVICE_TYPE', 'INSERT INTO NC_DEVICE_TYPE ( SCENARIO_ID,DEVICE_type_CD,DEVICE_type_NAME,DEVICE_DESC,BRND,CURR_PREV_IND,DEVICE_SRC_ID,CNTL_EFF_DT,CNTL_EXP_DT,DEVICE_type_GNRTN,MODL_NUM,MODL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_type_CD,t1.DEVICE_type_NAME,t1.DEVICE_DESC,t1.BRND,t1.CURR_PREV_IND,t1.DEVICE_SRC_ID,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.DEVICE_type_GNRTN,t1.MODL_NUM,t1.MODL_NAME,''ACTIVATE'',''VALID'' FROM IN_DEVICE_TYPE t1, M_DEVICE_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_type_CD = t2.DEVICE_type_CD AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DOMAIN', 'INSERT INTO NC_DOMAIN ( SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_DOMAIN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_DOMAIN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Domain_Id = t2.Domain_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DOMAIN', 'INSERT INTO NC_DOMAIN ( SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_DOMAIN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_DOMAIN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Domain_Id = t2.Domain_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_DOMAIN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Domain_Id = t2.Domain_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DOMAIN', 'INSERT INTO NC_DOMAIN ( SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Domain_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_DOMAIN t1, MST_DOMAIN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Domain_Id = t2.Domain_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_DOMAIN', 'INSERT INTO NC_DOMAIN ( SCENARIO_ID,Code_Set_Id,Domain_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Code_Set_Id,t1.Domain_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_DOMAIN t1, MST_DOMAIN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Domain_Id = t2.Domain_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR', 'INSERT INTO NC_ELEC_ADDR ( SCENARIO_ID,ELEC_ADDR_ID,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ELEC_ADDR_ID,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,''INSERT'',''VALID'' FROM IN_ELEC_ADDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_ELEC_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_ID = t2.ELEC_ADDR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR', 'INSERT INTO NC_ELEC_ADDR ( SCENARIO_ID,ELEC_ADDR_ID,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ELEC_ADDR_ID,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,''DELETE'',''VALID'' FROM M_ELEC_ADDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ELEC_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_ID = t2.ELEC_ADDR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_ELEC_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_ID = t2.ELEC_ADDR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR', 'INSERT INTO NC_ELEC_ADDR ( SCENARIO_ID,ELEC_ADDR_ID,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ELEC_ADDR_ID,t1.ELEC_ADDR_SBTYPE_CD,t1.DMN_ROOT_CD,t1.ELEC_ADDR_TXT,t1.ELEC_ADDR_DMN_NAME,''UPDATE'',''VALID'' FROM IN_ELEC_ADDR t1, M_ELEC_ADDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_ID = t2.ELEC_ADDR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ELEC_ADDR_ID <> t2.ELEC_ADDR_ID OR ( t1.ELEC_ADDR_ID IS NULL AND t2.ELEC_ADDR_ID IS NOT NULL) OR (t1.ELEC_ADDR_ID IS NOT NULL AND t2.ELEC_ADDR_ID IS NULL)) OR (t1.ELEC_ADDR_SBTYPE_CD <> t2.ELEC_ADDR_SBTYPE_CD OR ( t1.ELEC_ADDR_SBTYPE_CD IS NULL AND t2.ELEC_ADDR_SBTYPE_CD IS NOT NULL) OR (t1.ELEC_ADDR_SBTYPE_CD IS NOT NULL AND t2.ELEC_ADDR_SBTYPE_CD IS NULL)) OR (t1.DMN_ROOT_CD <> t2.DMN_ROOT_CD OR ( t1.DMN_ROOT_CD IS NULL AND t2.DMN_ROOT_CD IS NOT NULL) OR (t1.DMN_ROOT_CD IS NOT NULL AND t2.DMN_ROOT_CD IS NULL)) OR (t1.ELEC_ADDR_TXT <> t2.ELEC_ADDR_TXT OR ( t1.ELEC_ADDR_TXT IS NULL AND t2.ELEC_ADDR_TXT IS NOT NULL) OR (t1.ELEC_ADDR_TXT IS NOT NULL AND t2.ELEC_ADDR_TXT IS NULL)) OR (t1.ELEC_ADDR_DMN_NAME <> t2.ELEC_ADDR_DMN_NAME OR ( t1.ELEC_ADDR_DMN_NAME IS NULL AND t2.ELEC_ADDR_DMN_NAME IS NOT NULL) OR (t1.ELEC_ADDR_DMN_NAME IS NOT NULL AND t2.ELEC_ADDR_DMN_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR', 'INSERT INTO NC_ELEC_ADDR ( SCENARIO_ID,ELEC_ADDR_ID,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ELEC_ADDR_ID,t1.ELEC_ADDR_SBTYPE_CD,t1.DMN_ROOT_CD,t1.ELEC_ADDR_TXT,t1.ELEC_ADDR_DMN_NAME,''ACTIVATE'',''VALID'' FROM IN_ELEC_ADDR t1, M_ELEC_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_ID = t2.ELEC_ADDR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR_RQST', 'INSERT INTO NC_ELEC_ADDR_RQST ( SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,''INSERT'',''VALID'' FROM IN_ELEC_ADDR_RQST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ELEC_ADDR_RQST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_RQST_ID = t2.ELEC_ADDR_RQST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR_RQST', 'INSERT INTO NC_ELEC_ADDR_RQST ( SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,''DELETE'',''VALID'' FROM ELEC_ADDR_RQST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ELEC_ADDR_RQST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_RQST_ID = t2.ELEC_ADDR_RQST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_ELEC_ADDR_RQST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_RQST_ID = t2.ELEC_ADDR_RQST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR_RQST', 'INSERT INTO NC_ELEC_ADDR_RQST ( SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ELEC_ADDR_RQST_ID,t1.PRSNA_ID,t1.LOB_NUM,t1.ELEC_ADDR_SBTYPE_CD,t1.DMN_ROOT_CD,t1.ELEC_ADDR_TXT,t1.ELEC_ADDR_DMN_NAME,''UPDATE'',''VALID'' FROM IN_ELEC_ADDR_RQST t1, ELEC_ADDR_RQST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_RQST_ID = t2.ELEC_ADDR_RQST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ELEC_ADDR_RQST_ID <> t2.ELEC_ADDR_RQST_ID OR ( t1.ELEC_ADDR_RQST_ID IS NULL AND t2.ELEC_ADDR_RQST_ID IS NOT NULL) OR (t1.ELEC_ADDR_RQST_ID IS NOT NULL AND t2.ELEC_ADDR_RQST_ID IS NULL)) OR (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.ELEC_ADDR_SBTYPE_CD <> t2.ELEC_ADDR_SBTYPE_CD OR ( t1.ELEC_ADDR_SBTYPE_CD IS NULL AND t2.ELEC_ADDR_SBTYPE_CD IS NOT NULL) OR (t1.ELEC_ADDR_SBTYPE_CD IS NOT NULL AND t2.ELEC_ADDR_SBTYPE_CD IS NULL)) OR (t1.DMN_ROOT_CD <> t2.DMN_ROOT_CD OR ( t1.DMN_ROOT_CD IS NULL AND t2.DMN_ROOT_CD IS NOT NULL) OR (t1.DMN_ROOT_CD IS NOT NULL AND t2.DMN_ROOT_CD IS NULL)) OR (t1.ELEC_ADDR_TXT <> t2.ELEC_ADDR_TXT OR ( t1.ELEC_ADDR_TXT IS NULL AND t2.ELEC_ADDR_TXT IS NOT NULL) OR (t1.ELEC_ADDR_TXT IS NOT NULL AND t2.ELEC_ADDR_TXT IS NULL)) OR (t1.ELEC_ADDR_DMN_NAME <> t2.ELEC_ADDR_DMN_NAME OR ( t1.ELEC_ADDR_DMN_NAME IS NULL AND t2.ELEC_ADDR_DMN_NAME IS NOT NULL) OR (t1.ELEC_ADDR_DMN_NAME IS NOT NULL AND t2.ELEC_ADDR_DMN_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR_RQST', 'INSERT INTO NC_ELEC_ADDR_RQST ( SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ELEC_ADDR_RQST_ID,t1.PRSNA_ID,t1.LOB_NUM,t1.ELEC_ADDR_SBTYPE_CD,t1.DMN_ROOT_CD,t1.ELEC_ADDR_TXT,t1.ELEC_ADDR_DMN_NAME,''ACTIVATE'',''VALID'' FROM IN_ELEC_ADDR_RQST t1, ELEC_ADDR_RQST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_RQST_ID = t2.ELEC_ADDR_RQST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR_RSULT', 'INSERT INTO NC_ELEC_ADDR_RSULT ( SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ADDR_RSULT_CD,DMN_ROOT_CD,ELEC_ADDR_SBTYPE_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ADDR_RSULT_CD,DMN_ROOT_CD,ELEC_ADDR_SBTYPE_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,''INSERT'',''VALID'' FROM IN_ELEC_ADDR_RSULT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM ELEC_ADDR_RSULT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_RQST_ID = t2.ELEC_ADDR_RQST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR_RSULT', 'INSERT INTO NC_ELEC_ADDR_RSULT ( SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ADDR_RSULT_CD,DMN_ROOT_CD,ELEC_ADDR_SBTYPE_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ADDR_RSULT_CD,DMN_ROOT_CD,ELEC_ADDR_SBTYPE_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,''DELETE'',''VALID'' FROM ELEC_ADDR_RSULT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ELEC_ADDR_RSULT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_RQST_ID = t2.ELEC_ADDR_RQST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_ELEC_ADDR_RSULT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_RQST_ID = t2.ELEC_ADDR_RQST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR_RSULT', 'INSERT INTO NC_ELEC_ADDR_RSULT ( SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ADDR_RSULT_CD,DMN_ROOT_CD,ELEC_ADDR_SBTYPE_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ELEC_ADDR_RQST_ID,t1.PRSNA_ID,t1.LOB_NUM,t1.ADDR_RSULT_CD,t1.DMN_ROOT_CD,t1.ELEC_ADDR_SBTYPE_CD,t1.ELEC_ADDR_TXT,t1.ELEC_ADDR_DMN_NAME,''UPDATE'',''VALID'' FROM IN_ELEC_ADDR_RSULT t1, ELEC_ADDR_RSULT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_RQST_ID = t2.ELEC_ADDR_RQST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ELEC_ADDR_RQST_ID <> t2.ELEC_ADDR_RQST_ID OR ( t1.ELEC_ADDR_RQST_ID IS NULL AND t2.ELEC_ADDR_RQST_ID IS NOT NULL) OR (t1.ELEC_ADDR_RQST_ID IS NOT NULL AND t2.ELEC_ADDR_RQST_ID IS NULL)) OR (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.ADDR_RSULT_CD <> t2.ADDR_RSULT_CD OR ( t1.ADDR_RSULT_CD IS NULL AND t2.ADDR_RSULT_CD IS NOT NULL) OR (t1.ADDR_RSULT_CD IS NOT NULL AND t2.ADDR_RSULT_CD IS NULL)) OR (t1.DMN_ROOT_CD <> t2.DMN_ROOT_CD OR ( t1.DMN_ROOT_CD IS NULL AND t2.DMN_ROOT_CD IS NOT NULL) OR (t1.DMN_ROOT_CD IS NOT NULL AND t2.DMN_ROOT_CD IS NULL)) OR (t1.ELEC_ADDR_SBTYPE_CD <> t2.ELEC_ADDR_SBTYPE_CD OR ( t1.ELEC_ADDR_SBTYPE_CD IS NULL AND t2.ELEC_ADDR_SBTYPE_CD IS NOT NULL) OR (t1.ELEC_ADDR_SBTYPE_CD IS NOT NULL AND t2.ELEC_ADDR_SBTYPE_CD IS NULL)) OR (t1.ELEC_ADDR_TXT <> t2.ELEC_ADDR_TXT OR ( t1.ELEC_ADDR_TXT IS NULL AND t2.ELEC_ADDR_TXT IS NOT NULL) OR (t1.ELEC_ADDR_TXT IS NOT NULL AND t2.ELEC_ADDR_TXT IS NULL)) OR (t1.ELEC_ADDR_DMN_NAME <> t2.ELEC_ADDR_DMN_NAME OR ( t1.ELEC_ADDR_DMN_NAME IS NULL AND t2.ELEC_ADDR_DMN_NAME IS NOT NULL) OR (t1.ELEC_ADDR_DMN_NAME IS NOT NULL AND t2.ELEC_ADDR_DMN_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ELEC_ADDR_RSULT', 'INSERT INTO NC_ELEC_ADDR_RSULT ( SCENARIO_ID,ELEC_ADDR_RQST_ID,PRSNA_ID,LOB_NUM,ADDR_RSULT_CD,DMN_ROOT_CD,ELEC_ADDR_SBTYPE_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ELEC_ADDR_RQST_ID,t1.PRSNA_ID,t1.LOB_NUM,t1.ADDR_RSULT_CD,t1.DMN_ROOT_CD,t1.ELEC_ADDR_SBTYPE_CD,t1.ELEC_ADDR_TXT,t1.ELEC_ADDR_DMN_NAME,''ACTIVATE'',''VALID'' FROM IN_ELEC_ADDR_RSULT t1, ELEC_ADDR_RSULT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_RQST_ID = t2.ELEC_ADDR_RQST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GOLDEN_CUST', 'INSERT INTO NC_GOLDEN_CUST ( SCENARIO_ID,GOLDEN_CUST_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GOLDEN_CUST_ID,''INSERT'',''VALID'' FROM IN_GOLDEN_CUST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_GOLDEN_CUST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Golden_CUST_ID = t2.Golden_CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GOLDEN_CUST', 'INSERT INTO NC_GOLDEN_CUST ( SCENARIO_ID,GOLDEN_CUST_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GOLDEN_CUST_ID,''DELETE'',''VALID'' FROM M_GOLDEN_CUST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GOLDEN_CUST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Golden_CUST_ID = t2.Golden_CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_GOLDEN_CUST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Golden_CUST_ID = t2.Golden_CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GOLDEN_CUST', 'INSERT INTO NC_GOLDEN_CUST ( SCENARIO_ID,GOLDEN_CUST_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GOLDEN_CUST_ID,''UPDATE'',''VALID'' FROM IN_GOLDEN_CUST t1, M_GOLDEN_CUST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Golden_CUST_ID = t2.Golden_CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Golden_CUST_ID <> t2.Golden_CUST_ID OR ( t1.Golden_CUST_ID IS NULL AND t2.Golden_CUST_ID IS NOT NULL) OR (t1.Golden_CUST_ID IS NOT NULL AND t2.Golden_CUST_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GOLDEN_CUST', 'INSERT INTO NC_GOLDEN_CUST ( SCENARIO_ID,GOLDEN_CUST_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GOLDEN_CUST_ID,''ACTIVATE'',''VALID'' FROM IN_GOLDEN_CUST t1, M_GOLDEN_CUST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Golden_CUST_ID = t2.Golden_CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GROUP', 'INSERT INTO NC_GROUP ( SCENARIO_ID,GROUP_ID,GROUP_NM,PARENT_GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_ID,GROUP_NM,PARENT_GROUP_ID,''INSERT'',''VALID'' FROM IN_GROUP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_GROUP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GROUP_ID = t2.GROUP_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GROUP', 'INSERT INTO NC_GROUP ( SCENARIO_ID,GROUP_ID,GROUP_NM,PARENT_GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_ID,GROUP_NM,PARENT_GROUP_ID,''DELETE'',''VALID'' FROM M_GROUP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GROUP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GROUP_ID = t2.GROUP_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_GROUP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GROUP_ID = t2.GROUP_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GROUP', 'INSERT INTO NC_GROUP ( SCENARIO_ID,GROUP_ID,GROUP_NM,PARENT_GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_ID,t1.GROUP_NM,t1.PARENT_GROUP_ID,''UPDATE'',''VALID'' FROM IN_GROUP t1, M_GROUP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GROUP_ID = t2.GROUP_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GROUP_ID <> t2.GROUP_ID OR ( t1.GROUP_ID IS NULL AND t2.GROUP_ID IS NOT NULL) OR (t1.GROUP_ID IS NOT NULL AND t2.GROUP_ID IS NULL)) OR (t1.GROUP_NM <> t2.GROUP_NM OR ( t1.GROUP_NM IS NULL AND t2.GROUP_NM IS NOT NULL) OR (t1.GROUP_NM IS NOT NULL AND t2.GROUP_NM IS NULL)) OR (t1.PARENT_GROUP_ID <> t2.PARENT_GROUP_ID OR ( t1.PARENT_GROUP_ID IS NULL AND t2.PARENT_GROUP_ID IS NOT NULL) OR (t1.PARENT_GROUP_ID IS NOT NULL AND t2.PARENT_GROUP_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GROUP', 'INSERT INTO NC_GROUP ( SCENARIO_ID,GROUP_ID,GROUP_NM,PARENT_GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_ID,t1.GROUP_NM,t1.PARENT_GROUP_ID,''ACTIVATE'',''VALID'' FROM IN_GROUP t1, M_GROUP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GROUP_ID = t2.GROUP_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GROUP_JOB_RUN', 'INSERT INTO NC_GROUP_JOB_RUN ( SCENARIO_ID,JOB_GROUP_RUN_ID,SRC_INTAKE_CD,DATA_SOURCE,DATA_SOURCE_TYPE,STATUS_ID,START_DTTM,END_DTTM,SRC_JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NM,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NM,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,NOTIFICATION_STATUS,ROW_ERROR_FILE,ERROR_PERCENT,DUP_COUNT,WARNING_COUNT,GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,JOB_GROUP_RUN_ID,SRC_INTAKE_CD,DATA_SOURCE,DATA_SOURCE_TYPE,STATUS_ID,START_DTTM,END_DTTM,SRC_JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NM,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NM,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,NOTIFICATION_STATUS,ROW_ERROR_FILE,ERROR_PERCENT,DUP_COUNT,WARNING_COUNT,GROUP_ID,''INSERT'',''VALID'' FROM IN_GROUP_JOB_RUN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_GROUP_JOB_RUN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_GROUP_RUN_ID = t2.JOB_GROUP_RUN_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GROUP_JOB_RUN', 'INSERT INTO NC_GROUP_JOB_RUN ( SCENARIO_ID,JOB_GROUP_RUN_ID,SRC_INTAKE_CD,DATA_SOURCE,DATA_SOURCE_TYPE,STATUS_ID,START_DTTM,END_DTTM,SRC_JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NM,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NM,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,NOTIFICATION_STATUS,ROW_ERROR_FILE,ERROR_PERCENT,DUP_COUNT,WARNING_COUNT,GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,JOB_GROUP_RUN_ID,SRC_INTAKE_CD,DATA_SOURCE,DATA_SOURCE_TYPE,STATUS_ID,START_DTTM,END_DTTM,SRC_JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NM,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NM,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,NOTIFICATION_STATUS,ROW_ERROR_FILE,ERROR_PERCENT,DUP_COUNT,WARNING_COUNT,GROUP_ID,''DELETE'',''VALID'' FROM M_GROUP_JOB_RUN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_GROUP_JOB_RUN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_GROUP_RUN_ID = t2.JOB_GROUP_RUN_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_GROUP_JOB_RUN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_GROUP_RUN_ID = t2.JOB_GROUP_RUN_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GROUP_JOB_RUN', 'INSERT INTO NC_GROUP_JOB_RUN ( SCENARIO_ID,JOB_GROUP_RUN_ID,SRC_INTAKE_CD,DATA_SOURCE,DATA_SOURCE_TYPE,STATUS_ID,START_DTTM,END_DTTM,SRC_JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NM,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NM,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,NOTIFICATION_STATUS,ROW_ERROR_FILE,ERROR_PERCENT,DUP_COUNT,WARNING_COUNT,GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.JOB_GROUP_RUN_ID,t1.SRC_INTAKE_CD,t1.DATA_SOURCE,t1.DATA_SOURCE_TYPE,t1.STATUS_ID,t1.START_DTTM,t1.END_DTTM,t1.SRC_JOB_RUN_ID,t1.EXECUTE_TEXT,t1.LOG_FILE_NM,t1.JOB_ERROR_MESSAGE_TEXT,t1.ERROR_TABLE_NM,t1.ERROR_RESOLVED_FLAG,t1.SOURCE_COUNT,t1.TARGET_COUNT,t1.ERROR_COUNT,t1.NOTIFICATION_STATUS,t1.ROW_ERROR_FILE,t1.ERROR_PERCENT,t1.DUP_COUNT,t1.WARNING_COUNT,t1.GROUP_ID,''UPDATE'',''VALID'' FROM IN_GROUP_JOB_RUN t1, M_GROUP_JOB_RUN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_GROUP_RUN_ID = t2.JOB_GROUP_RUN_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.JOB_GROUP_RUN_ID <> t2.JOB_GROUP_RUN_ID OR ( t1.JOB_GROUP_RUN_ID IS NULL AND t2.JOB_GROUP_RUN_ID IS NOT NULL) OR (t1.JOB_GROUP_RUN_ID IS NOT NULL AND t2.JOB_GROUP_RUN_ID IS NULL)) OR (t1.SRC_INTAKE_CD <> t2.SRC_INTAKE_CD OR ( t1.SRC_INTAKE_CD IS NULL AND t2.SRC_INTAKE_CD IS NOT NULL) OR (t1.SRC_INTAKE_CD IS NOT NULL AND t2.SRC_INTAKE_CD IS NULL)) OR (t1.DATA_SOURCE <> t2.DATA_SOURCE OR ( t1.DATA_SOURCE IS NULL AND t2.DATA_SOURCE IS NOT NULL) OR (t1.DATA_SOURCE IS NOT NULL AND t2.DATA_SOURCE IS NULL)) OR (t1.DATA_SOURCE_TYPE <> t2.DATA_SOURCE_TYPE OR ( t1.DATA_SOURCE_TYPE IS NULL AND t2.DATA_SOURCE_TYPE IS NOT NULL) OR (t1.DATA_SOURCE_TYPE IS NOT NULL AND t2.DATA_SOURCE_TYPE IS NULL)) OR (t1.STATUS_ID <> t2.STATUS_ID OR ( t1.STATUS_ID IS NULL AND t2.STATUS_ID IS NOT NULL) OR (t1.STATUS_ID IS NOT NULL AND t2.STATUS_ID IS NULL)) OR (t1.START_DTTM <> t2.START_DTTM OR ( t1.START_DTTM IS NULL AND t2.START_DTTM IS NOT NULL) OR (t1.START_DTTM IS NOT NULL AND t2.START_DTTM IS NULL)) OR (t1.END_DTTM <> t2.END_DTTM OR ( t1.END_DTTM IS NULL AND t2.END_DTTM IS NOT NULL) OR (t1.END_DTTM IS NOT NULL AND t2.END_DTTM IS NULL)) OR (t1.SRC_JOB_RUN_ID <> t2.SRC_JOB_RUN_ID OR ( t1.SRC_JOB_RUN_ID IS NULL AND t2.SRC_JOB_RUN_ID IS NOT NULL) OR (t1.SRC_JOB_RUN_ID IS NOT NULL AND t2.SRC_JOB_RUN_ID IS NULL)) OR (t1.EXECUTE_TEXT <> t2.EXECUTE_TEXT OR ( t1.EXECUTE_TEXT IS NULL AND t2.EXECUTE_TEXT IS NOT NULL) OR (t1.EXECUTE_TEXT IS NOT NULL AND t2.EXECUTE_TEXT IS NULL)) OR (t1.LOG_FILE_NM <> t2.LOG_FILE_NM OR ( t1.LOG_FILE_NM IS NULL AND t2.LOG_FILE_NM IS NOT NULL) OR (t1.LOG_FILE_NM IS NOT NULL AND t2.LOG_FILE_NM IS NULL)) OR (t1.JOB_ERROR_MESSAGE_TEXT <> t2.JOB_ERROR_MESSAGE_TEXT OR ( t1.JOB_ERROR_MESSAGE_TEXT IS NULL AND t2.JOB_ERROR_MESSAGE_TEXT IS NOT NULL) OR (t1.JOB_ERROR_MESSAGE_TEXT IS NOT NULL AND t2.JOB_ERROR_MESSAGE_TEXT IS NULL)) OR (t1.ERROR_TABLE_NM <> t2.ERROR_TABLE_NM OR ( t1.ERROR_TABLE_NM IS NULL AND t2.ERROR_TABLE_NM IS NOT NULL) OR (t1.ERROR_TABLE_NM IS NOT NULL AND t2.ERROR_TABLE_NM IS NULL)) OR (t1.ERROR_RESOLVED_FLAG <> t2.ERROR_RESOLVED_FLAG OR ( t1.ERROR_RESOLVED_FLAG IS NULL AND t2.ERROR_RESOLVED_FLAG IS NOT NULL) OR (t1.ERROR_RESOLVED_FLAG IS NOT NULL AND t2.ERROR_RESOLVED_FLAG IS NULL)) OR (t1.SOURCE_COUNT <> t2.SOURCE_COUNT OR ( t1.SOURCE_COUNT IS NULL AND t2.SOURCE_COUNT IS NOT NULL) OR (t1.SOURCE_COUNT IS NOT NULL AND t2.SOURCE_COUNT IS NULL)) OR (t1.TARGET_COUNT <> t2.TARGET_COUNT OR ( t1.TARGET_COUNT IS NULL AND t2.TARGET_COUNT IS NOT NULL) OR (t1.TARGET_COUNT IS NOT NULL AND t2.TARGET_COUNT IS NULL)) OR (t1.ERROR_COUNT <> t2.ERROR_COUNT OR ( t1.ERROR_COUNT IS NULL AND t2.ERROR_COUNT IS NOT NULL) OR (t1.ERROR_COUNT IS NOT NULL AND t2.ERROR_COUNT IS NULL)) OR (t1.NOTIFICATION_STATUS <> t2.NOTIFICATION_STATUS OR ( t1.NOTIFICATION_STATUS IS NULL AND t2.NOTIFICATION_STATUS IS NOT NULL) OR (t1.NOTIFICATION_STATUS IS NOT NULL AND t2.NOTIFICATION_STATUS IS NULL)) OR (t1.ROW_ERROR_FILE <> t2.ROW_ERROR_FILE OR ( t1.ROW_ERROR_FILE IS NULL AND t2.ROW_ERROR_FILE IS NOT NULL) OR (t1.ROW_ERROR_FILE IS NOT NULL AND t2.ROW_ERROR_FILE IS NULL)) OR (t1.ERROR_PERCENT <> t2.ERROR_PERCENT OR ( t1.ERROR_PERCENT IS NULL AND t2.ERROR_PERCENT IS NOT NULL) OR (t1.ERROR_PERCENT IS NOT NULL AND t2.ERROR_PERCENT IS NULL)) OR (t1.DUP_COUNT <> t2.DUP_COUNT OR ( t1.DUP_COUNT IS NULL AND t2.DUP_COUNT IS NOT NULL) OR (t1.DUP_COUNT IS NOT NULL AND t2.DUP_COUNT IS NULL)) OR (t1.WARNING_COUNT <> t2.WARNING_COUNT OR ( t1.WARNING_COUNT IS NULL AND t2.WARNING_COUNT IS NOT NULL) OR (t1.WARNING_COUNT IS NOT NULL AND t2.WARNING_COUNT IS NULL)) OR (t1.GROUP_ID <> t2.GROUP_ID OR ( t1.GROUP_ID IS NULL AND t2.GROUP_ID IS NOT NULL) OR (t1.GROUP_ID IS NOT NULL AND t2.GROUP_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_GROUP_JOB_RUN', 'INSERT INTO NC_GROUP_JOB_RUN ( SCENARIO_ID,JOB_GROUP_RUN_ID,SRC_INTAKE_CD,DATA_SOURCE,DATA_SOURCE_TYPE,STATUS_ID,START_DTTM,END_DTTM,SRC_JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NM,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NM,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,NOTIFICATION_STATUS,ROW_ERROR_FILE,ERROR_PERCENT,DUP_COUNT,WARNING_COUNT,GROUP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.JOB_GROUP_RUN_ID,t1.SRC_INTAKE_CD,t1.DATA_SOURCE,t1.DATA_SOURCE_TYPE,t1.STATUS_ID,t1.START_DTTM,t1.END_DTTM,t1.SRC_JOB_RUN_ID,t1.EXECUTE_TEXT,t1.LOG_FILE_NM,t1.JOB_ERROR_MESSAGE_TEXT,t1.ERROR_TABLE_NM,t1.ERROR_RESOLVED_FLAG,t1.SOURCE_COUNT,t1.TARGET_COUNT,t1.ERROR_COUNT,t1.NOTIFICATION_STATUS,t1.ROW_ERROR_FILE,t1.ERROR_PERCENT,t1.DUP_COUNT,t1.WARNING_COUNT,t1.GROUP_ID,''ACTIVATE'',''VALID'' FROM IN_GROUP_JOB_RUN t1, M_GROUP_JOB_RUN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_GROUP_RUN_ID = t2.JOB_GROUP_RUN_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_VAL_INST', 'INSERT INTO NC_GRP_ATTR_VAL_INST ( SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,''INSERT'',''VALID'' FROM GP_IN_GRP_ATTR_VAL_INST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GP_MST_GRP_ATTR_VAL_INST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND t1.Log_Id = t2.Log_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_VAL_INST', 'INSERT INTO NC_GRP_ATTR_VAL_INST ( SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,''DELETE'',''VALID'' FROM GP_MST_GRP_ATTR_VAL_INST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_IN_GRP_ATTR_VAL_INST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND t1.Log_Id = t2.Log_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_ERR_GRP_ATTR_VAL_INST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND t1.Log_Id = t2.Log_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_VAL_INST', 'INSERT INTO NC_GRP_ATTR_VAL_INST ( SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOG_ID,t1.ATTRIBUTE_SET_ID,t1.GROUP_ID,t1.UPDT_LOG_COL_NAME,t1.UPDT_COL_VALUE,''UPDATE'',''VALID'' FROM GP_IN_GRP_ATTR_VAL_INST t1, GP_MST_GRP_ATTR_VAL_INST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND t1.Log_Id = t2.Log_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Log_Id <> t2.Log_Id OR ( t1.Log_Id IS NULL AND t2.Log_Id IS NOT NULL) OR (t1.Log_Id IS NOT NULL AND t2.Log_Id IS NULL)) OR (t1.Attribute_Set_Id <> t2.Attribute_Set_Id OR ( t1.Attribute_Set_Id IS NULL AND t2.Attribute_Set_Id IS NOT NULL) OR (t1.Attribute_Set_Id IS NOT NULL AND t2.Attribute_Set_Id IS NULL)) OR (t1.Group_Id <> t2.Group_Id OR ( t1.Group_Id IS NULL AND t2.Group_Id IS NOT NULL) OR (t1.Group_Id IS NOT NULL AND t2.Group_Id IS NULL)) OR (t1.Updt_Log_Col_Name <> t2.Updt_Log_Col_Name OR ( t1.Updt_Log_Col_Name IS NULL AND t2.Updt_Log_Col_Name IS NOT NULL) OR (t1.Updt_Log_Col_Name IS NOT NULL AND t2.Updt_Log_Col_Name IS NULL)) OR (t1.Updt_Col_Value <> t2.Updt_Col_Value OR ( t1.Updt_Col_Value IS NULL AND t2.Updt_Col_Value IS NOT NULL) OR (t1.Updt_Col_Value IS NOT NULL AND t2.Updt_Col_Value IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_VAL_INST', 'INSERT INTO NC_GRP_ATTR_VAL_INST ( SCENARIO_ID,LOG_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOG_ID,t1.ATTRIBUTE_SET_ID,t1.GROUP_ID,t1.UPDT_LOG_COL_NAME,t1.UPDT_COL_VALUE,''ACTIVATE'',''VALID'' FROM GP_IN_GRP_ATTR_VAL_INST t1, GP_MST_GRP_ATTR_VAL_INST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND t1.Log_Id = t2.Log_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_VAL', 'INSERT INTO NC_GRP_ATTR_VAL ( SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,''INSERT'',''VALID'' FROM GP_IN_GRP_ATTR_VAL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GP_MST_GRP_ATTR_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Group_Id = t2.Group_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_VAL', 'INSERT INTO NC_GRP_ATTR_VAL ( SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,''DELETE'',''VALID'' FROM GP_MST_GRP_ATTR_VAL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_IN_GRP_ATTR_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Group_Id = t2.Group_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_ERR_GRP_ATTR_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Group_Id = t2.Group_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_VAL', 'INSERT INTO NC_GRP_ATTR_VAL ( SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.GROUP_ID,t1.UPDT_LOG_COL_NAME,t1.UPDT_COL_VALUE,''UPDATE'',''VALID'' FROM GP_IN_GRP_ATTR_VAL t1, GP_MST_GRP_ATTR_VAL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Group_Id = t2.Group_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Attribute_Set_Id <> t2.Attribute_Set_Id OR ( t1.Attribute_Set_Id IS NULL AND t2.Attribute_Set_Id IS NOT NULL) OR (t1.Attribute_Set_Id IS NOT NULL AND t2.Attribute_Set_Id IS NULL)) OR (t1.Group_Id <> t2.Group_Id OR ( t1.Group_Id IS NULL AND t2.Group_Id IS NOT NULL) OR (t1.Group_Id IS NOT NULL AND t2.Group_Id IS NULL)) OR (t1.Updt_Log_Col_Name <> t2.Updt_Log_Col_Name OR ( t1.Updt_Log_Col_Name IS NULL AND t2.Updt_Log_Col_Name IS NOT NULL) OR (t1.Updt_Log_Col_Name IS NOT NULL AND t2.Updt_Log_Col_Name IS NULL)) OR (t1.Updt_Col_Value <> t2.Updt_Col_Value OR ( t1.Updt_Col_Value IS NULL AND t2.Updt_Col_Value IS NOT NULL) OR (t1.Updt_Col_Value IS NOT NULL AND t2.Updt_Col_Value IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_ATTR_VAL', 'INSERT INTO NC_GRP_ATTR_VAL ( SCENARIO_ID,ATTRIBUTE_SET_ID,GROUP_ID,UPDT_LOG_COL_NAME,UPDT_COL_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ATTRIBUTE_SET_ID,t1.GROUP_ID,t1.UPDT_LOG_COL_NAME,t1.UPDT_COL_VALUE,''ACTIVATE'',''VALID'' FROM GP_IN_GRP_ATTR_VAL t1, GP_MST_GRP_ATTR_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Attribute_Set_Id = t2.Attribute_Set_Id AND t1.Group_Id = t2.Group_Id AND t1.Updt_Log_Col_Name = t2.Updt_Log_Col_Name AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_CLASS', 'INSERT INTO NC_GRP_CLASS ( SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,''INSERT'',''VALID'' FROM GP_IN_GRP_CLASS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GP_MST_GRP_CLASS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Class_Id = t2.Group_Class_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_CLASS', 'INSERT INTO NC_GRP_CLASS ( SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,''DELETE'',''VALID'' FROM GP_MST_GRP_CLASS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_IN_GRP_CLASS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Class_Id = t2.Group_Class_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_ERR_GRP_CLASS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Class_Id = t2.Group_Class_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_CLASS', 'INSERT INTO NC_GRP_CLASS ( SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_CLASS_ID,t1.CLASS_NAME,t1.CLASS_DESCRIPTION,t1.PHY_TBL_NAME,t1.LOG_TBL_NAME,''UPDATE'',''VALID'' FROM GP_IN_GRP_CLASS t1, GP_MST_GRP_CLASS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Class_Id = t2.Group_Class_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Group_Class_Id <> t2.Group_Class_Id OR ( t1.Group_Class_Id IS NULL AND t2.Group_Class_Id IS NOT NULL) OR (t1.Group_Class_Id IS NOT NULL AND t2.Group_Class_Id IS NULL)) OR (t1.Class_Name <> t2.Class_Name OR ( t1.Class_Name IS NULL AND t2.Class_Name IS NOT NULL) OR (t1.Class_Name IS NOT NULL AND t2.Class_Name IS NULL)) OR (t1.Class_Description <> t2.Class_Description OR ( t1.Class_Description IS NULL AND t2.Class_Description IS NOT NULL) OR (t1.Class_Description IS NOT NULL AND t2.Class_Description IS NULL)) OR (t1.Phy_Tbl_Name <> t2.Phy_Tbl_Name OR ( t1.Phy_Tbl_Name IS NULL AND t2.Phy_Tbl_Name IS NOT NULL) OR (t1.Phy_Tbl_Name IS NOT NULL AND t2.Phy_Tbl_Name IS NULL)) OR (t1.Log_Tbl_Name <> t2.Log_Tbl_Name OR ( t1.Log_Tbl_Name IS NULL AND t2.Log_Tbl_Name IS NOT NULL) OR (t1.Log_Tbl_Name IS NOT NULL AND t2.Log_Tbl_Name IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_CLASS', 'INSERT INTO NC_GRP_CLASS ( SCENARIO_ID,GROUP_CLASS_ID,CLASS_NAME,CLASS_DESCRIPTION,PHY_TBL_NAME,LOG_TBL_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_CLASS_ID,t1.CLASS_NAME,t1.CLASS_DESCRIPTION,t1.PHY_TBL_NAME,t1.LOG_TBL_NAME,''ACTIVATE'',''VALID'' FROM GP_IN_GRP_CLASS t1, GP_MST_GRP_CLASS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Class_Id = t2.Group_Class_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_EXEC_LOG', 'INSERT INTO NC_GRP_EXEC_LOG ( SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,''INSERT'',''VALID'' FROM GP_IN_GRP_EXEC_LOG t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GP_MST_GRP_EXEC_LOG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Log_Id = t2.Log_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_EXEC_LOG', 'INSERT INTO NC_GRP_EXEC_LOG ( SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,''DELETE'',''VALID'' FROM GP_MST_GRP_EXEC_LOG t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_IN_GRP_EXEC_LOG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Log_Id = t2.Log_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_ERR_GRP_EXEC_LOG t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Log_Id = t2.Log_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_EXEC_LOG', 'INSERT INTO NC_GRP_EXEC_LOG ( SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOG_ID,t1.GROUP_ID,t1.EXECUTION_STATUS,t1.EXECUTION_TIME,t1.GROUP_NAME,t1.ATTRIBUTE_SET_NAME,t1.EXECUTION_RESPONSE,''UPDATE'',''VALID'' FROM GP_IN_GRP_EXEC_LOG t1, GP_MST_GRP_EXEC_LOG t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Log_Id = t2.Log_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Log_Id <> t2.Log_Id OR ( t1.Log_Id IS NULL AND t2.Log_Id IS NOT NULL) OR (t1.Log_Id IS NOT NULL AND t2.Log_Id IS NULL)) OR (t1.Group_Id <> t2.Group_Id OR ( t1.Group_Id IS NULL AND t2.Group_Id IS NOT NULL) OR (t1.Group_Id IS NOT NULL AND t2.Group_Id IS NULL)) OR (t1.Execution_Status <> t2.Execution_Status OR ( t1.Execution_Status IS NULL AND t2.Execution_Status IS NOT NULL) OR (t1.Execution_Status IS NOT NULL AND t2.Execution_Status IS NULL)) OR (t1.Execution_Time <> t2.Execution_Time OR ( t1.Execution_Time IS NULL AND t2.Execution_Time IS NOT NULL) OR (t1.Execution_Time IS NOT NULL AND t2.Execution_Time IS NULL)) OR (t1.Group_Name <> t2.Group_Name OR ( t1.Group_Name IS NULL AND t2.Group_Name IS NOT NULL) OR (t1.Group_Name IS NOT NULL AND t2.Group_Name IS NULL)) OR (t1.Attribute_Set_Name <> t2.Attribute_Set_Name OR ( t1.Attribute_Set_Name IS NULL AND t2.Attribute_Set_Name IS NOT NULL) OR (t1.Attribute_Set_Name IS NOT NULL AND t2.Attribute_Set_Name IS NULL)) OR (t1.Execution_Response <> t2.Execution_Response OR ( t1.Execution_Response IS NULL AND t2.Execution_Response IS NOT NULL) OR (t1.Execution_Response IS NOT NULL AND t2.Execution_Response IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_EXEC_LOG', 'INSERT INTO NC_GRP_EXEC_LOG ( SCENARIO_ID,LOG_ID,GROUP_ID,EXECUTION_STATUS,EXECUTION_TIME,GROUP_NAME,ATTRIBUTE_SET_NAME,EXECUTION_RESPONSE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.LOG_ID,t1.GROUP_ID,t1.EXECUTION_STATUS,t1.EXECUTION_TIME,t1.GROUP_NAME,t1.ATTRIBUTE_SET_NAME,t1.EXECUTION_RESPONSE,''ACTIVATE'',''VALID'' FROM GP_IN_GRP_EXEC_LOG t1, GP_MST_GRP_EXEC_LOG t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Log_Id = t2.Log_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_MASTER', 'INSERT INTO NC_GRP_MASTER ( SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,''INSERT'',''VALID'' FROM GP_IN_GRP_MASTER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GP_MST_GRP_MASTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_MASTER', 'INSERT INTO NC_GRP_MASTER ( SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,''DELETE'',''VALID'' FROM GP_MST_GRP_MASTER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_IN_GRP_MASTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_ERR_GRP_MASTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_MASTER', 'INSERT INTO NC_GRP_MASTER ( SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_ID,t1.GROUP_NAME,t1.GROUP_DESCRIPTION,t1.GROUP_CLASS_ID,t1.GROUP_RULE_ID,t1.GROUP_PRECENDENCE,''UPDATE'',''VALID'' FROM GP_IN_GRP_MASTER t1, GP_MST_GRP_MASTER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Group_Id <> t2.Group_Id OR ( t1.Group_Id IS NULL AND t2.Group_Id IS NOT NULL) OR (t1.Group_Id IS NOT NULL AND t2.Group_Id IS NULL)) OR (t1.Group_Name <> t2.Group_Name OR ( t1.Group_Name IS NULL AND t2.Group_Name IS NOT NULL) OR (t1.Group_Name IS NOT NULL AND t2.Group_Name IS NULL)) OR (t1.Group_Description <> t2.Group_Description OR ( t1.Group_Description IS NULL AND t2.Group_Description IS NOT NULL) OR (t1.Group_Description IS NOT NULL AND t2.Group_Description IS NULL)) OR (t1.Group_Class_Id <> t2.Group_Class_Id OR ( t1.Group_Class_Id IS NULL AND t2.Group_Class_Id IS NOT NULL) OR (t1.Group_Class_Id IS NOT NULL AND t2.Group_Class_Id IS NULL)) OR (t1.Group_Rule_Id <> t2.Group_Rule_Id OR ( t1.Group_Rule_Id IS NULL AND t2.Group_Rule_Id IS NOT NULL) OR (t1.Group_Rule_Id IS NOT NULL AND t2.Group_Rule_Id IS NULL)) OR (t1.Group_Precedence <> t2.Group_Precedence OR ( t1.Group_Precedence IS NULL AND t2.Group_Precedence IS NOT NULL) OR (t1.Group_Precedence IS NOT NULL AND t2.Group_Precedence IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_MASTER', 'INSERT INTO NC_GRP_MASTER ( SCENARIO_ID,GROUP_ID,GROUP_NAME,GROUP_DESCRIPTION,GROUP_CLASS_ID,GROUP_RULE_ID,GROUP_PRECENDENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_ID,t1.GROUP_NAME,t1.GROUP_DESCRIPTION,t1.GROUP_CLASS_ID,t1.GROUP_RULE_ID,t1.GROUP_PRECENDENCE,''ACTIVATE'',''VALID'' FROM GP_IN_GRP_MASTER t1, GP_MST_GRP_MASTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Group_Id = t2.Group_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_MEMBER', 'INSERT INTO NC_GRP_MEMBER ( SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,''INSERT'',''VALID'' FROM GP_IN_GRP_MEMBER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM GP_MST_GRP_MEMBER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Member_Id = t2.Member_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_MEMBER', 'INSERT INTO NC_GRP_MEMBER ( SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,''DELETE'',''VALID'' FROM GP_MST_GRP_MEMBER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_IN_GRP_MEMBER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Member_Id = t2.Member_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM GP_ERR_GRP_MEMBER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Member_Id = t2.Member_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_MEMBER', 'INSERT INTO NC_GRP_MEMBER ( SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MEMBER_ID,t1.GROUP_CLASS_ID,t1.GROUP_ID,t1.PK_COL_VAL1,t1.PK_COL_VAL2,t1.PK_COL_VAL3,t1.PK_COL_VAL4,t1.PK_COL_VAL5,t1.PK_COL_VAL6,t1.PK_COL_VAL7,t1.PK_COL_VAL8,t1.PK_COL_VAL9,t1.PK_COL_VAL10,''UPDATE'',''VALID'' FROM GP_IN_GRP_MEMBER t1, GP_MST_GRP_MEMBER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Member_Id = t2.Member_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Member_Id <> t2.Member_Id OR ( t1.Member_Id IS NULL AND t2.Member_Id IS NOT NULL) OR (t1.Member_Id IS NOT NULL AND t2.Member_Id IS NULL)) OR (t1.Group_Class_Id <> t2.Group_Class_Id OR ( t1.Group_Class_Id IS NULL AND t2.Group_Class_Id IS NOT NULL) OR (t1.Group_Class_Id IS NOT NULL AND t2.Group_Class_Id IS NULL)) OR (t1.Group_Id <> t2.Group_Id OR ( t1.Group_Id IS NULL AND t2.Group_Id IS NOT NULL) OR (t1.Group_Id IS NOT NULL AND t2.Group_Id IS NULL)) OR (t1.Pk_Col_Val1 <> t2.Pk_Col_Val1 OR ( t1.Pk_Col_Val1 IS NULL AND t2.Pk_Col_Val1 IS NOT NULL) OR (t1.Pk_Col_Val1 IS NOT NULL AND t2.Pk_Col_Val1 IS NULL)) OR (t1.Pk_Col_Val2 <> t2.Pk_Col_Val2 OR ( t1.Pk_Col_Val2 IS NULL AND t2.Pk_Col_Val2 IS NOT NULL) OR (t1.Pk_Col_Val2 IS NOT NULL AND t2.Pk_Col_Val2 IS NULL)) OR (t1.Pk_Col_Val3 <> t2.Pk_Col_Val3 OR ( t1.Pk_Col_Val3 IS NULL AND t2.Pk_Col_Val3 IS NOT NULL) OR (t1.Pk_Col_Val3 IS NOT NULL AND t2.Pk_Col_Val3 IS NULL)) OR (t1.Pk_Col_Val4 <> t2.Pk_Col_Val4 OR ( t1.Pk_Col_Val4 IS NULL AND t2.Pk_Col_Val4 IS NOT NULL) OR (t1.Pk_Col_Val4 IS NOT NULL AND t2.Pk_Col_Val4 IS NULL)) OR (t1.Pk_Col_Val5 <> t2.Pk_Col_Val5 OR ( t1.Pk_Col_Val5 IS NULL AND t2.Pk_Col_Val5 IS NOT NULL) OR (t1.Pk_Col_Val5 IS NOT NULL AND t2.Pk_Col_Val5 IS NULL)) OR (t1.Pk_Col_Val6 <> t2.Pk_Col_Val6 OR ( t1.Pk_Col_Val6 IS NULL AND t2.Pk_Col_Val6 IS NOT NULL) OR (t1.Pk_Col_Val6 IS NOT NULL AND t2.Pk_Col_Val6 IS NULL)) OR (t1.Pk_Col_Val7 <> t2.Pk_Col_Val7 OR ( t1.Pk_Col_Val7 IS NULL AND t2.Pk_Col_Val7 IS NOT NULL) OR (t1.Pk_Col_Val7 IS NOT NULL AND t2.Pk_Col_Val7 IS NULL)) OR (t1.Pk_Col_Val8 <> t2.Pk_Col_Val8 OR ( t1.Pk_Col_Val8 IS NULL AND t2.Pk_Col_Val8 IS NOT NULL) OR (t1.Pk_Col_Val8 IS NOT NULL AND t2.Pk_Col_Val8 IS NULL)) OR (t1.Pk_Col_Val9 <> t2.Pk_Col_Val9 OR ( t1.Pk_Col_Val9 IS NULL AND t2.Pk_Col_Val9 IS NOT NULL) OR (t1.Pk_Col_Val9 IS NOT NULL AND t2.Pk_Col_Val9 IS NULL)) OR (t1.Pk_Col_Val10 <> t2.Pk_Col_Val10 OR ( t1.Pk_Col_Val10 IS NULL AND t2.Pk_Col_Val10 IS NOT NULL) OR (t1.Pk_Col_Val10 IS NOT NULL AND t2.Pk_Col_Val10 IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('GP_IN_GRP_MEMBER', 'INSERT INTO NC_GRP_MEMBER ( SCENARIO_ID,MEMBER_ID,GROUP_CLASS_ID,GROUP_ID,PK_COL_VAL1,PK_COL_VAL2,PK_COL_VAL3,PK_COL_VAL4,PK_COL_VAL5,PK_COL_VAL6,PK_COL_VAL7,PK_COL_VAL8,PK_COL_VAL9,PK_COL_VAL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MEMBER_ID,t1.GROUP_CLASS_ID,t1.GROUP_ID,t1.PK_COL_VAL1,t1.PK_COL_VAL2,t1.PK_COL_VAL3,t1.PK_COL_VAL4,t1.PK_COL_VAL5,t1.PK_COL_VAL6,t1.PK_COL_VAL7,t1.PK_COL_VAL8,t1.PK_COL_VAL9,t1.PK_COL_VAL10,''ACTIVATE'',''VALID'' FROM GP_IN_GRP_MEMBER t1, GP_MST_GRP_MEMBER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Member_Id = t2.Member_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INDIV_CUST', 'INSERT INTO NC_INDIV_CUST ( SCENARIO_ID,CUST_ID,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,ETHCTY_type_CD,GNDR_type_CD,BIRTH_DT,NTLTY_CD,BIRTH_YR,BIRTH_MTH,BIRTH_DY,DEATH_DT,Soundex_NAME_TXT,NICK_NAME_TXT,STD_NAME_TXT,Pet_type_CD,Pet_BREED_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,ETHCTY_type_CD,GNDR_type_CD,BIRTH_DT,NTLTY_CD,BIRTH_YR,BIRTH_MTH,BIRTH_DY,DEATH_DT,Soundex_NAME_TXT,NICK_NAME_TXT,STD_NAME_TXT,Pet_type_CD,Pet_BREED_CD,''INSERT'',''VALID'' FROM IN_INDIV_CUST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_INDIV_CUST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INDIV_CUST', 'INSERT INTO NC_INDIV_CUST ( SCENARIO_ID,CUST_ID,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,ETHCTY_type_CD,GNDR_type_CD,BIRTH_DT,NTLTY_CD,BIRTH_YR,BIRTH_MTH,BIRTH_DY,DEATH_DT,Soundex_NAME_TXT,NICK_NAME_TXT,STD_NAME_TXT,Pet_type_CD,Pet_BREED_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,ETHCTY_type_CD,GNDR_type_CD,BIRTH_DT,NTLTY_CD,BIRTH_YR,BIRTH_MTH,BIRTH_DY,DEATH_DT,Soundex_NAME_TXT,NICK_NAME_TXT,STD_NAME_TXT,Pet_type_CD,Pet_BREED_CD,''DELETE'',''VALID'' FROM M_INDIV_CUST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_INDIV_CUST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_INDIV_CUST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INDIV_CUST', 'INSERT INTO NC_INDIV_CUST ( SCENARIO_ID,CUST_ID,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,ETHCTY_type_CD,GNDR_type_CD,BIRTH_DT,NTLTY_CD,BIRTH_YR,BIRTH_MTH,BIRTH_DY,DEATH_DT,Soundex_NAME_TXT,NICK_NAME_TXT,STD_NAME_TXT,Pet_type_CD,Pet_BREED_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.FRST_NAME,t1.MDL_NAME,t1.LAST_NAME,t1.NAME_PRFX_TXT,t1.NAME_SFX_TXT,t1.ETHCTY_type_CD,t1.GNDR_type_CD,t1.BIRTH_DT,t1.NTLTY_CD,t1.BIRTH_YR,t1.BIRTH_MTH,t1.BIRTH_DY,t1.DEATH_DT,t1.Soundex_NAME_TXT,t1.NICK_NAME_TXT,t1.STD_NAME_TXT,t1.Pet_type_CD,t1.Pet_BREED_CD,''UPDATE'',''VALID'' FROM IN_INDIV_CUST t1, M_INDIV_CUST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.FRST_NAME <> t2.FRST_NAME OR ( t1.FRST_NAME IS NULL AND t2.FRST_NAME IS NOT NULL) OR (t1.FRST_NAME IS NOT NULL AND t2.FRST_NAME IS NULL)) OR (t1.MDL_NAME <> t2.MDL_NAME OR ( t1.MDL_NAME IS NULL AND t2.MDL_NAME IS NOT NULL) OR (t1.MDL_NAME IS NOT NULL AND t2.MDL_NAME IS NULL)) OR (t1.LAST_NAME <> t2.LAST_NAME OR ( t1.LAST_NAME IS NULL AND t2.LAST_NAME IS NOT NULL) OR (t1.LAST_NAME IS NOT NULL AND t2.LAST_NAME IS NULL)) OR (t1.NAME_PRFX_TXT <> t2.NAME_PRFX_TXT OR ( t1.NAME_PRFX_TXT IS NULL AND t2.NAME_PRFX_TXT IS NOT NULL) OR (t1.NAME_PRFX_TXT IS NOT NULL AND t2.NAME_PRFX_TXT IS NULL)) OR (t1.NAME_SFX_TXT <> t2.NAME_SFX_TXT OR ( t1.NAME_SFX_TXT IS NULL AND t2.NAME_SFX_TXT IS NOT NULL) OR (t1.NAME_SFX_TXT IS NOT NULL AND t2.NAME_SFX_TXT IS NULL)) OR (t1.ETHCTY_type_CD <> t2.ETHCTY_type_CD OR ( t1.ETHCTY_type_CD IS NULL AND t2.ETHCTY_type_CD IS NOT NULL) OR (t1.ETHCTY_type_CD IS NOT NULL AND t2.ETHCTY_type_CD IS NULL)) OR (t1.GNDR_type_CD <> t2.GNDR_type_CD OR ( t1.GNDR_type_CD IS NULL AND t2.GNDR_type_CD IS NOT NULL) OR (t1.GNDR_type_CD IS NOT NULL AND t2.GNDR_type_CD IS NULL)) OR (t1.BIRTH_DT <> t2.BIRTH_DT OR ( t1.BIRTH_DT IS NULL AND t2.BIRTH_DT IS NOT NULL) OR (t1.BIRTH_DT IS NOT NULL AND t2.BIRTH_DT IS NULL)) OR (t1.NTLTY_CD <> t2.NTLTY_CD OR ( t1.NTLTY_CD IS NULL AND t2.NTLTY_CD IS NOT NULL) OR (t1.NTLTY_CD IS NOT NULL AND t2.NTLTY_CD IS NULL)) OR (t1.BIRTH_YR <> t2.BIRTH_YR OR ( t1.BIRTH_YR IS NULL AND t2.BIRTH_YR IS NOT NULL) OR (t1.BIRTH_YR IS NOT NULL AND t2.BIRTH_YR IS NULL)) OR (t1.BIRTH_MTH <> t2.BIRTH_MTH OR ( t1.BIRTH_MTH IS NULL AND t2.BIRTH_MTH IS NOT NULL) OR (t1.BIRTH_MTH IS NOT NULL AND t2.BIRTH_MTH IS NULL)) OR (t1.BIRTH_DY <> t2.BIRTH_DY OR ( t1.BIRTH_DY IS NULL AND t2.BIRTH_DY IS NOT NULL) OR (t1.BIRTH_DY IS NOT NULL AND t2.BIRTH_DY IS NULL)) OR (t1.DEATH_DT <> t2.DEATH_DT OR ( t1.DEATH_DT IS NULL AND t2.DEATH_DT IS NOT NULL) OR (t1.DEATH_DT IS NOT NULL AND t2.DEATH_DT IS NULL)) OR (t1.Soundex_NAME_TXT <> t2.Soundex_NAME_TXT OR ( t1.Soundex_NAME_TXT IS NULL AND t2.Soundex_NAME_TXT IS NOT NULL) OR (t1.Soundex_NAME_TXT IS NOT NULL AND t2.Soundex_NAME_TXT IS NULL)) OR (t1.NICK_NAME_TXT <> t2.NICK_NAME_TXT OR ( t1.NICK_NAME_TXT IS NULL AND t2.NICK_NAME_TXT IS NOT NULL) OR (t1.NICK_NAME_TXT IS NOT NULL AND t2.NICK_NAME_TXT IS NULL)) OR (t1.STD_NAME_TXT <> t2.STD_NAME_TXT OR ( t1.STD_NAME_TXT IS NULL AND t2.STD_NAME_TXT IS NOT NULL) OR (t1.STD_NAME_TXT IS NOT NULL AND t2.STD_NAME_TXT IS NULL)) OR (t1.Pet_type_CD <> t2.Pet_type_CD OR ( t1.Pet_type_CD IS NULL AND t2.Pet_type_CD IS NOT NULL) OR (t1.Pet_type_CD IS NOT NULL AND t2.Pet_type_CD IS NULL)) OR (t1.Pet_BREED_CD <> t2.Pet_BREED_CD OR ( t1.Pet_BREED_CD IS NULL AND t2.Pet_BREED_CD IS NOT NULL) OR (t1.Pet_BREED_CD IS NOT NULL AND t2.Pet_BREED_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_INDIV_CUST', 'INSERT INTO NC_INDIV_CUST ( SCENARIO_ID,CUST_ID,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,ETHCTY_type_CD,GNDR_type_CD,BIRTH_DT,NTLTY_CD,BIRTH_YR,BIRTH_MTH,BIRTH_DY,DEATH_DT,Soundex_NAME_TXT,NICK_NAME_TXT,STD_NAME_TXT,Pet_type_CD,Pet_BREED_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.FRST_NAME,t1.MDL_NAME,t1.LAST_NAME,t1.NAME_PRFX_TXT,t1.NAME_SFX_TXT,t1.ETHCTY_type_CD,t1.GNDR_type_CD,t1.BIRTH_DT,t1.NTLTY_CD,t1.BIRTH_YR,t1.BIRTH_MTH,t1.BIRTH_DY,t1.DEATH_DT,t1.Soundex_NAME_TXT,t1.NICK_NAME_TXT,t1.STD_NAME_TXT,t1.Pet_type_CD,t1.Pet_BREED_CD,''ACTIVATE'',''VALID'' FROM IN_INDIV_CUST t1, M_INDIV_CUST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_GROUP', 'INSERT INTO NC_JOB_GROUP ( SCENARIO_ID,GROUP_ID,JOB_ID,SEQUENCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_ID,JOB_ID,SEQUENCE_ID,''INSERT'',''VALID'' FROM IN_JOB_GROUP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_JOB_GROUP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GROUP_ID = t2.GROUP_ID AND t1.JOB_ID = t2.JOB_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_GROUP', 'INSERT INTO NC_JOB_GROUP ( SCENARIO_ID,GROUP_ID,JOB_ID,SEQUENCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,GROUP_ID,JOB_ID,SEQUENCE_ID,''DELETE'',''VALID'' FROM M_JOB_GROUP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_JOB_GROUP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GROUP_ID = t2.GROUP_ID AND t1.JOB_ID = t2.JOB_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_JOB_GROUP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GROUP_ID = t2.GROUP_ID AND t1.JOB_ID = t2.JOB_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_GROUP', 'INSERT INTO NC_JOB_GROUP ( SCENARIO_ID,GROUP_ID,JOB_ID,SEQUENCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_ID,t1.JOB_ID,t1.SEQUENCE_ID,''UPDATE'',''VALID'' FROM IN_JOB_GROUP t1, M_JOB_GROUP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GROUP_ID = t2.GROUP_ID AND t1.JOB_ID = t2.JOB_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.GROUP_ID <> t2.GROUP_ID OR ( t1.GROUP_ID IS NULL AND t2.GROUP_ID IS NOT NULL) OR (t1.GROUP_ID IS NOT NULL AND t2.GROUP_ID IS NULL)) OR (t1.JOB_ID <> t2.JOB_ID OR ( t1.JOB_ID IS NULL AND t2.JOB_ID IS NOT NULL) OR (t1.JOB_ID IS NOT NULL AND t2.JOB_ID IS NULL)) OR (t1.SEQUENCE_ID <> t2.SEQUENCE_ID OR ( t1.SEQUENCE_ID IS NULL AND t2.SEQUENCE_ID IS NOT NULL) OR (t1.SEQUENCE_ID IS NOT NULL AND t2.SEQUENCE_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_GROUP', 'INSERT INTO NC_JOB_GROUP ( SCENARIO_ID,GROUP_ID,JOB_ID,SEQUENCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.GROUP_ID,t1.JOB_ID,t1.SEQUENCE_ID,''ACTIVATE'',''VALID'' FROM IN_JOB_GROUP t1, M_JOB_GROUP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.GROUP_ID = t2.GROUP_ID AND t1.JOB_ID = t2.JOB_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_MASTER', 'INSERT INTO NC_JOB_MASTER ( SCENARIO_ID,JOB_ID,JOB_NM,FILE_IDENTIFIER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,JOB_ID,JOB_NM,FILE_IDENTIFIER,''INSERT'',''VALID'' FROM IN_JOB_MASTER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_JOB_MASTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_ID = t2.JOB_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_MASTER', 'INSERT INTO NC_JOB_MASTER ( SCENARIO_ID,JOB_ID,JOB_NM,FILE_IDENTIFIER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,JOB_ID,JOB_NM,FILE_IDENTIFIER,''DELETE'',''VALID'' FROM M_JOB_MASTER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_JOB_MASTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_ID = t2.JOB_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_JOB_MASTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_ID = t2.JOB_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_MASTER', 'INSERT INTO NC_JOB_MASTER ( SCENARIO_ID,JOB_ID,JOB_NM,FILE_IDENTIFIER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.JOB_ID,t1.JOB_NM,t1.FILE_IDENTIFIER,''UPDATE'',''VALID'' FROM IN_JOB_MASTER t1, M_JOB_MASTER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_ID = t2.JOB_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.JOB_ID <> t2.JOB_ID OR ( t1.JOB_ID IS NULL AND t2.JOB_ID IS NOT NULL) OR (t1.JOB_ID IS NOT NULL AND t2.JOB_ID IS NULL)) OR (t1.JOB_NM <> t2.JOB_NM OR ( t1.JOB_NM IS NULL AND t2.JOB_NM IS NOT NULL) OR (t1.JOB_NM IS NOT NULL AND t2.JOB_NM IS NULL)) OR (t1.FILE_IDENTIFIER <> t2.FILE_IDENTIFIER OR ( t1.FILE_IDENTIFIER IS NULL AND t2.FILE_IDENTIFIER IS NOT NULL) OR (t1.FILE_IDENTIFIER IS NOT NULL AND t2.FILE_IDENTIFIER IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_MASTER', 'INSERT INTO NC_JOB_MASTER ( SCENARIO_ID,JOB_ID,JOB_NM,FILE_IDENTIFIER,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.JOB_ID,t1.JOB_NM,t1.FILE_IDENTIFIER,''ACTIVATE'',''VALID'' FROM IN_JOB_MASTER t1, M_JOB_MASTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_ID = t2.JOB_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_RUN_DETAILS', 'INSERT INTO NC_JOB_RUN_DETAILS ( SCENARIO_ID,JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NAME,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NAME,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,JOB_ID,JOB_GROUP_RUN_ID,STATUS_ID,START_DTTM,END_DTTM,ERROR_PERCENT,WARNING_COUNT,ROW_ERROR_FILE,DUP_COUNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NAME,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NAME,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,JOB_ID,JOB_GROUP_RUN_ID,STATUS_ID,START_DTTM,END_DTTM,ERROR_PERCENT,WARNING_COUNT,ROW_ERROR_FILE,DUP_COUNT,''INSERT'',''VALID'' FROM IN_JOB_RUN_DETAILS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_JOB_RUN_DETAILS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_ID = t2.JOB_ID AND t1.JOB_RUN_ID = t2.JOB_RUN_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_RUN_DETAILS', 'INSERT INTO NC_JOB_RUN_DETAILS ( SCENARIO_ID,JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NAME,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NAME,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,JOB_ID,JOB_GROUP_RUN_ID,STATUS_ID,START_DTTM,END_DTTM,ERROR_PERCENT,WARNING_COUNT,ROW_ERROR_FILE,DUP_COUNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NAME,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NAME,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,JOB_ID,JOB_GROUP_RUN_ID,STATUS_ID,START_DTTM,END_DTTM,ERROR_PERCENT,WARNING_COUNT,ROW_ERROR_FILE,DUP_COUNT,''DELETE'',''VALID'' FROM M_JOB_RUN_DETAILS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_JOB_RUN_DETAILS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_ID = t2.JOB_ID AND t1.JOB_RUN_ID = t2.JOB_RUN_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_JOB_RUN_DETAILS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_ID = t2.JOB_ID AND t1.JOB_RUN_ID = t2.JOB_RUN_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_RUN_DETAILS', 'INSERT INTO NC_JOB_RUN_DETAILS ( SCENARIO_ID,JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NAME,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NAME,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,JOB_ID,JOB_GROUP_RUN_ID,STATUS_ID,START_DTTM,END_DTTM,ERROR_PERCENT,WARNING_COUNT,ROW_ERROR_FILE,DUP_COUNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.JOB_RUN_ID,t1.EXECUTE_TEXT,t1.LOG_FILE_NAME,t1.JOB_ERROR_MESSAGE_TEXT,t1.ERROR_TABLE_NAME,t1.ERROR_RESOLVED_FLAG,t1.SOURCE_COUNT,t1.TARGET_COUNT,t1.ERROR_COUNT,t1.JOB_ID,t1.JOB_GROUP_RUN_ID,t1.STATUS_ID,t1.START_DTTM,t1.END_DTTM,t1.ERROR_PERCENT,t1.WARNING_COUNT,t1.ROW_ERROR_FILE,t1.DUP_COUNT,''UPDATE'',''VALID'' FROM IN_JOB_RUN_DETAILS t1, M_JOB_RUN_DETAILS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_ID = t2.JOB_ID AND t1.JOB_RUN_ID = t2.JOB_RUN_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.JOB_RUN_ID <> t2.JOB_RUN_ID OR ( t1.JOB_RUN_ID IS NULL AND t2.JOB_RUN_ID IS NOT NULL) OR (t1.JOB_RUN_ID IS NOT NULL AND t2.JOB_RUN_ID IS NULL)) OR (t1.EXECUTE_TEXT <> t2.EXECUTE_TEXT OR ( t1.EXECUTE_TEXT IS NULL AND t2.EXECUTE_TEXT IS NOT NULL) OR (t1.EXECUTE_TEXT IS NOT NULL AND t2.EXECUTE_TEXT IS NULL)) OR (t1.LOG_FILE_NAME <> t2.LOG_FILE_NAME OR ( t1.LOG_FILE_NAME IS NULL AND t2.LOG_FILE_NAME IS NOT NULL) OR (t1.LOG_FILE_NAME IS NOT NULL AND t2.LOG_FILE_NAME IS NULL)) OR (t1.JOB_ERROR_MESSAGE_TEXT <> t2.JOB_ERROR_MESSAGE_TEXT OR ( t1.JOB_ERROR_MESSAGE_TEXT IS NULL AND t2.JOB_ERROR_MESSAGE_TEXT IS NOT NULL) OR (t1.JOB_ERROR_MESSAGE_TEXT IS NOT NULL AND t2.JOB_ERROR_MESSAGE_TEXT IS NULL)) OR (t1.ERROR_TABLE_NAME <> t2.ERROR_TABLE_NAME OR ( t1.ERROR_TABLE_NAME IS NULL AND t2.ERROR_TABLE_NAME IS NOT NULL) OR (t1.ERROR_TABLE_NAME IS NOT NULL AND t2.ERROR_TABLE_NAME IS NULL)) OR (t1.ERROR_RESOLVED_FLAG <> t2.ERROR_RESOLVED_FLAG OR ( t1.ERROR_RESOLVED_FLAG IS NULL AND t2.ERROR_RESOLVED_FLAG IS NOT NULL) OR (t1.ERROR_RESOLVED_FLAG IS NOT NULL AND t2.ERROR_RESOLVED_FLAG IS NULL)) OR (t1.SOURCE_COUNT <> t2.SOURCE_COUNT OR ( t1.SOURCE_COUNT IS NULL AND t2.SOURCE_COUNT IS NOT NULL) OR (t1.SOURCE_COUNT IS NOT NULL AND t2.SOURCE_COUNT IS NULL)) OR (t1.TARGET_COUNT <> t2.TARGET_COUNT OR ( t1.TARGET_COUNT IS NULL AND t2.TARGET_COUNT IS NOT NULL) OR (t1.TARGET_COUNT IS NOT NULL AND t2.TARGET_COUNT IS NULL)) OR (t1.ERROR_COUNT <> t2.ERROR_COUNT OR ( t1.ERROR_COUNT IS NULL AND t2.ERROR_COUNT IS NOT NULL) OR (t1.ERROR_COUNT IS NOT NULL AND t2.ERROR_COUNT IS NULL)) OR (t1.JOB_ID <> t2.JOB_ID OR ( t1.JOB_ID IS NULL AND t2.JOB_ID IS NOT NULL) OR (t1.JOB_ID IS NOT NULL AND t2.JOB_ID IS NULL)) OR (t1.JOB_GROUP_RUN_ID <> t2.JOB_GROUP_RUN_ID OR ( t1.JOB_GROUP_RUN_ID IS NULL AND t2.JOB_GROUP_RUN_ID IS NOT NULL) OR (t1.JOB_GROUP_RUN_ID IS NOT NULL AND t2.JOB_GROUP_RUN_ID IS NULL)) OR (t1.STATUS_ID <> t2.STATUS_ID OR ( t1.STATUS_ID IS NULL AND t2.STATUS_ID IS NOT NULL) OR (t1.STATUS_ID IS NOT NULL AND t2.STATUS_ID IS NULL)) OR (t1.START_DTTM <> t2.START_DTTM OR ( t1.START_DTTM IS NULL AND t2.START_DTTM IS NOT NULL) OR (t1.START_DTTM IS NOT NULL AND t2.START_DTTM IS NULL)) OR (t1.END_DTTM <> t2.END_DTTM OR ( t1.END_DTTM IS NULL AND t2.END_DTTM IS NOT NULL) OR (t1.END_DTTM IS NOT NULL AND t2.END_DTTM IS NULL)) OR (t1.ERROR_PERCENT <> t2.ERROR_PERCENT OR ( t1.ERROR_PERCENT IS NULL AND t2.ERROR_PERCENT IS NOT NULL) OR (t1.ERROR_PERCENT IS NOT NULL AND t2.ERROR_PERCENT IS NULL)) OR (t1.WARNING_COUNT <> t2.WARNING_COUNT OR ( t1.WARNING_COUNT IS NULL AND t2.WARNING_COUNT IS NOT NULL) OR (t1.WARNING_COUNT IS NOT NULL AND t2.WARNING_COUNT IS NULL)) OR (t1.ROW_ERROR_FILE <> t2.ROW_ERROR_FILE OR ( t1.ROW_ERROR_FILE IS NULL AND t2.ROW_ERROR_FILE IS NOT NULL) OR (t1.ROW_ERROR_FILE IS NOT NULL AND t2.ROW_ERROR_FILE IS NULL)) OR (t1.DUP_COUNT <> t2.DUP_COUNT OR ( t1.DUP_COUNT IS NULL AND t2.DUP_COUNT IS NOT NULL) OR (t1.DUP_COUNT IS NOT NULL AND t2.DUP_COUNT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_JOB_RUN_DETAILS', 'INSERT INTO NC_JOB_RUN_DETAILS ( SCENARIO_ID,JOB_RUN_ID,EXECUTE_TEXT,LOG_FILE_NAME,JOB_ERROR_MESSAGE_TEXT,ERROR_TABLE_NAME,ERROR_RESOLVED_FLAG,SOURCE_COUNT,TARGET_COUNT,ERROR_COUNT,JOB_ID,JOB_GROUP_RUN_ID,STATUS_ID,START_DTTM,END_DTTM,ERROR_PERCENT,WARNING_COUNT,ROW_ERROR_FILE,DUP_COUNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.JOB_RUN_ID,t1.EXECUTE_TEXT,t1.LOG_FILE_NAME,t1.JOB_ERROR_MESSAGE_TEXT,t1.ERROR_TABLE_NAME,t1.ERROR_RESOLVED_FLAG,t1.SOURCE_COUNT,t1.TARGET_COUNT,t1.ERROR_COUNT,t1.JOB_ID,t1.JOB_GROUP_RUN_ID,t1.STATUS_ID,t1.START_DTTM,t1.END_DTTM,t1.ERROR_PERCENT,t1.WARNING_COUNT,t1.ROW_ERROR_FILE,t1.DUP_COUNT,''ACTIVATE'',''VALID'' FROM IN_JOB_RUN_DETAILS t1, M_JOB_RUN_DETAILS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.JOB_ID = t2.JOB_ID AND t1.JOB_RUN_ID = t2.JOB_RUN_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LAST_SYNC_UP', 'INSERT INTO NC_LAST_SYNC_UP ( SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,''INSERT'',''VALID'' FROM IN_LAST_SYNC_UP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_LAST_SYNC_UP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.syncUpID = t2.syncUpID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LAST_SYNC_UP', 'INSERT INTO NC_LAST_SYNC_UP ( SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,''DELETE'',''VALID'' FROM MST_LAST_SYNC_UP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_LAST_SYNC_UP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.syncUpID = t2.syncUpID ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_LAST_SYNC_UP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.syncUpID = t2.syncUpID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LAST_SYNC_UP', 'INSERT INTO NC_LAST_SYNC_UP ( SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.APPLICATION_NAME,t1.INSTANCE_ID,t1.END_TIME,t1.OPERATION_CODE,t1.OPERATION_STATUS,t1.START_TIME,t1.SYNC_UP_DATE,t1.SYNC_UP_ID,''UPDATE'',''VALID'' FROM IN_LAST_SYNC_UP t1, MST_LAST_SYNC_UP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.syncUpID = t2.syncUpID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ApplicationName <> t2.ApplicationName OR ( t1.ApplicationName IS NULL AND t2.ApplicationName IS NOT NULL) OR (t1.ApplicationName IS NOT NULL AND t2.ApplicationName IS NULL)) OR (t1.InstanceID <> t2.InstanceID OR ( t1.InstanceID IS NULL AND t2.InstanceID IS NOT NULL) OR (t1.InstanceID IS NOT NULL AND t2.InstanceID IS NULL)) OR (t1.endTime <> t2.endTime OR ( t1.endTime IS NULL AND t2.endTime IS NOT NULL) OR (t1.endTime IS NOT NULL AND t2.endTime IS NULL)) OR (t1.operationCode <> t2.operationCode OR ( t1.operationCode IS NULL AND t2.operationCode IS NOT NULL) OR (t1.operationCode IS NOT NULL AND t2.operationCode IS NULL)) OR (t1.operationStatus <> t2.operationStatus OR ( t1.operationStatus IS NULL AND t2.operationStatus IS NOT NULL) OR (t1.operationStatus IS NOT NULL AND t2.operationStatus IS NULL)) OR (t1.startTime <> t2.startTime OR ( t1.startTime IS NULL AND t2.startTime IS NOT NULL) OR (t1.startTime IS NOT NULL AND t2.startTime IS NULL)) OR (t1.syncUpDate <> t2.syncUpDate OR ( t1.syncUpDate IS NULL AND t2.syncUpDate IS NOT NULL) OR (t1.syncUpDate IS NOT NULL AND t2.syncUpDate IS NULL)) OR (t1.syncUpID <> t2.syncUpID OR ( t1.syncUpID IS NULL AND t2.syncUpID IS NOT NULL) OR (t1.syncUpID IS NOT NULL AND t2.syncUpID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_LAST_SYNC_UP', 'INSERT INTO NC_LAST_SYNC_UP ( SCENARIO_ID,APPLICATION_NAME,INSTANCE_ID,END_TIME,OPERATION_CODE,OPERATION_STATUS,START_TIME,SYNC_UP_DATE,SYNC_UP_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.APPLICATION_NAME,t1.INSTANCE_ID,t1.END_TIME,t1.OPERATION_CODE,t1.OPERATION_STATUS,t1.START_TIME,t1.SYNC_UP_DATE,t1.SYNC_UP_ID,''ACTIVATE'',''VALID'' FROM IN_LAST_SYNC_UP t1, MST_LAST_SYNC_UP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.syncUpID = t2.syncUpID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MULTITABLE_MAP', 'INSERT INTO NC_MULTITABLE_MAP ( SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,''INSERT'',''VALID'' FROM IN_MULTITABLE_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_MULTITABLE_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Id = t2.Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MULTITABLE_MAP', 'INSERT INTO NC_MULTITABLE_MAP ( SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,''DELETE'',''VALID'' FROM MST_MULTITABLE_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_MULTITABLE_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Id = t2.Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_MULTITABLE_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Id = t2.Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MULTITABLE_MAP', 'INSERT INTO NC_MULTITABLE_MAP ( SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MAP_TABLE_NAME,t1.TABLE_TYPE,t1.IS_USED,t1.START_DATE,t1.END_DATE,t1.ID,''UPDATE'',''VALID'' FROM IN_MULTITABLE_MAP t1, MST_MULTITABLE_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Id = t2.Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Map_Table_Name <> t2.Map_Table_Name OR ( t1.Map_Table_Name IS NULL AND t2.Map_Table_Name IS NOT NULL) OR (t1.Map_Table_Name IS NOT NULL AND t2.Map_Table_Name IS NULL)) OR (t1.Table_Type <> t2.Table_Type OR ( t1.Table_Type IS NULL AND t2.Table_Type IS NOT NULL) OR (t1.Table_Type IS NOT NULL AND t2.Table_Type IS NULL)) OR (t1.IS_USED <> t2.IS_USED OR ( t1.IS_USED IS NULL AND t2.IS_USED IS NOT NULL) OR (t1.IS_USED IS NOT NULL AND t2.IS_USED IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Id <> t2.Id OR ( t1.Id IS NULL AND t2.Id IS NOT NULL) OR (t1.Id IS NOT NULL AND t2.Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_MULTITABLE_MAP', 'INSERT INTO NC_MULTITABLE_MAP ( SCENARIO_ID,MAP_TABLE_NAME,TABLE_TYPE,IS_USED,START_DATE,END_DATE,ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MAP_TABLE_NAME,t1.TABLE_TYPE,t1.IS_USED,t1.START_DATE,t1.END_DATE,t1.ID,''ACTIVATE'',''VALID'' FROM IN_MULTITABLE_MAP t1, MST_MULTITABLE_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Id = t2.Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ORG_CUST', 'INSERT INTO NC_ORG_CUST ( SCENARIO_ID,CUST_ID,ORG_NAME,PARNT_ORG_CUST_ID,ORG_ESTBLD_DTTM,LEGL_CLASFCN_CD,OWNRSHP_type_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,ORG_NAME,PARNT_ORG_CUST_ID,ORG_ESTBLD_DTTM,LEGL_CLASFCN_CD,OWNRSHP_type_CD,''INSERT'',''VALID'' FROM IN_ORG_CUST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_ORG_CUST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ORG_CUST', 'INSERT INTO NC_ORG_CUST ( SCENARIO_ID,CUST_ID,ORG_NAME,PARNT_ORG_CUST_ID,ORG_ESTBLD_DTTM,LEGL_CLASFCN_CD,OWNRSHP_type_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,ORG_NAME,PARNT_ORG_CUST_ID,ORG_ESTBLD_DTTM,LEGL_CLASFCN_CD,OWNRSHP_type_CD,''DELETE'',''VALID'' FROM M_ORG_CUST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_ORG_CUST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_ORG_CUST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ORG_CUST', 'INSERT INTO NC_ORG_CUST ( SCENARIO_ID,CUST_ID,ORG_NAME,PARNT_ORG_CUST_ID,ORG_ESTBLD_DTTM,LEGL_CLASFCN_CD,OWNRSHP_type_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.ORG_NAME,t1.PARNT_ORG_CUST_ID,t1.ORG_ESTBLD_DTTM,t1.LEGL_CLASFCN_CD,t1.OWNRSHP_type_CD,''UPDATE'',''VALID'' FROM IN_ORG_CUST t1, M_ORG_CUST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.ORG_NAME <> t2.ORG_NAME OR ( t1.ORG_NAME IS NULL AND t2.ORG_NAME IS NOT NULL) OR (t1.ORG_NAME IS NOT NULL AND t2.ORG_NAME IS NULL)) OR (t1.PARNT_ORG_CUST_ID <> t2.PARNT_ORG_CUST_ID OR ( t1.PARNT_ORG_CUST_ID IS NULL AND t2.PARNT_ORG_CUST_ID IS NOT NULL) OR (t1.PARNT_ORG_CUST_ID IS NOT NULL AND t2.PARNT_ORG_CUST_ID IS NULL)) OR (t1.ORG_ESTBLD_DTTM <> t2.ORG_ESTBLD_DTTM OR ( t1.ORG_ESTBLD_DTTM IS NULL AND t2.ORG_ESTBLD_DTTM IS NOT NULL) OR (t1.ORG_ESTBLD_DTTM IS NOT NULL AND t2.ORG_ESTBLD_DTTM IS NULL)) OR (t1.LEGL_CLASFCN_CD <> t2.LEGL_CLASFCN_CD OR ( t1.LEGL_CLASFCN_CD IS NULL AND t2.LEGL_CLASFCN_CD IS NOT NULL) OR (t1.LEGL_CLASFCN_CD IS NOT NULL AND t2.LEGL_CLASFCN_CD IS NULL)) OR (t1.OWNRSHP_type_CD <> t2.OWNRSHP_type_CD OR ( t1.OWNRSHP_type_CD IS NULL AND t2.OWNRSHP_type_CD IS NOT NULL) OR (t1.OWNRSHP_type_CD IS NOT NULL AND t2.OWNRSHP_type_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_ORG_CUST', 'INSERT INTO NC_ORG_CUST ( SCENARIO_ID,CUST_ID,ORG_NAME,PARNT_ORG_CUST_ID,ORG_ESTBLD_DTTM,LEGL_CLASFCN_CD,OWNRSHP_type_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.ORG_NAME,t1.PARNT_ORG_CUST_ID,t1.ORG_ESTBLD_DTTM,t1.LEGL_CLASFCN_CD,t1.OWNRSHP_type_CD,''ACTIVATE'',''VALID'' FROM IN_ORG_CUST t1, M_ORG_CUST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA', 'INSERT INTO NC_PRSNA ( SCENARIO_ID,PRSNA_ID,PRSNA_SRC_ID,FRST_NAME,MDL_NAME,LAST_NAME,ORG_NAME,FULL_NAME,NICK_NAME,GNDR_TYPE_CD,USR_ID,USR_ACCT_STRT_DT,USR_ACCT_ROLE_CD,STDZD_FRST_NAME,STDZD_LAST_NAME,STDZD_MDL_NAME,PRSNA_TYPE_CD,PRSNA_ROLE_CD,UNVRSL_AUTHZTN_LANG_CD,PRSNA_BUS_DT,UNVRSL_AUTHZTN_STRT_DT,SOC_GRP_NAME,MKTG_PRG_ID,SRC_INTAKE_ID,LOB_NUM,PRTNR_NAME,NAME_PRFX,NAME_SFX,PREFD_LANG,TERMS_ACPTNC_DT,CMUNCTN_TM_ZN,LEAD_NUM,ETHCTY_type_CD,USR_RGSTRN_DT,UNVRSL_OPT_IND,TGT_CUST_ID,INSERT_UPDATE_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,PRSNA_SRC_ID,FRST_NAME,MDL_NAME,LAST_NAME,ORG_NAME,FULL_NAME,NICK_NAME,GNDR_TYPE_CD,USR_ID,USR_ACCT_STRT_DT,USR_ACCT_ROLE_CD,STDZD_FRST_NAME,STDZD_LAST_NAME,STDZD_MDL_NAME,PRSNA_TYPE_CD,PRSNA_ROLE_CD,UNVRSL_AUTHZTN_LANG_CD,PRSNA_BUS_DT,UNVRSL_AUTHZTN_STRT_DT,SOC_GRP_NAME,MKTG_PRG_ID,SRC_INTAKE_ID,LOB_NUM,PRTNR_NAME,NAME_PRFX,NAME_SFX,PREFD_LANG,TERMS_ACPTNC_DT,CMUNCTN_TM_ZN,LEAD_NUM,ETHCTY_type_CD,USR_RGSTRN_DT,UNVRSL_OPT_IND,TGT_CUST_ID,INSERT_UPDATE_FLAG,''INSERT'',''VALID'' FROM IN_PRSNA t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA', 'INSERT INTO NC_PRSNA ( SCENARIO_ID,PRSNA_ID,PRSNA_SRC_ID,FRST_NAME,MDL_NAME,LAST_NAME,ORG_NAME,FULL_NAME,NICK_NAME,GNDR_TYPE_CD,USR_ID,USR_ACCT_STRT_DT,USR_ACCT_ROLE_CD,STDZD_FRST_NAME,STDZD_LAST_NAME,STDZD_MDL_NAME,PRSNA_TYPE_CD,PRSNA_ROLE_CD,UNVRSL_AUTHZTN_LANG_CD,PRSNA_BUS_DT,UNVRSL_AUTHZTN_STRT_DT,SOC_GRP_NAME,MKTG_PRG_ID,SRC_INTAKE_ID,LOB_NUM,PRTNR_NAME,NAME_PRFX,NAME_SFX,PREFD_LANG,TERMS_ACPTNC_DT,CMUNCTN_TM_ZN,LEAD_NUM,ETHCTY_type_CD,USR_RGSTRN_DT,UNVRSL_OPT_IND,TGT_CUST_ID,INSERT_UPDATE_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,PRSNA_SRC_ID,FRST_NAME,MDL_NAME,LAST_NAME,ORG_NAME,FULL_NAME,NICK_NAME,GNDR_TYPE_CD,USR_ID,USR_ACCT_STRT_DT,USR_ACCT_ROLE_CD,STDZD_FRST_NAME,STDZD_LAST_NAME,STDZD_MDL_NAME,PRSNA_TYPE_CD,PRSNA_ROLE_CD,UNVRSL_AUTHZTN_LANG_CD,PRSNA_BUS_DT,UNVRSL_AUTHZTN_STRT_DT,SOC_GRP_NAME,MKTG_PRG_ID,SRC_INTAKE_ID,LOB_NUM,PRTNR_NAME,NAME_PRFX,NAME_SFX,PREFD_LANG,TERMS_ACPTNC_DT,CMUNCTN_TM_ZN,LEAD_NUM,ETHCTY_type_CD,USR_RGSTRN_DT,UNVRSL_OPT_IND,TGT_CUST_ID,INSERT_UPDATE_FLAG,''DELETE'',''VALID'' FROM PRSNA t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA', 'INSERT INTO NC_PRSNA ( SCENARIO_ID,PRSNA_ID,PRSNA_SRC_ID,FRST_NAME,MDL_NAME,LAST_NAME,ORG_NAME,FULL_NAME,NICK_NAME,GNDR_TYPE_CD,USR_ID,USR_ACCT_STRT_DT,USR_ACCT_ROLE_CD,STDZD_FRST_NAME,STDZD_LAST_NAME,STDZD_MDL_NAME,PRSNA_TYPE_CD,PRSNA_ROLE_CD,UNVRSL_AUTHZTN_LANG_CD,PRSNA_BUS_DT,UNVRSL_AUTHZTN_STRT_DT,SOC_GRP_NAME,MKTG_PRG_ID,SRC_INTAKE_ID,LOB_NUM,PRTNR_NAME,NAME_PRFX,NAME_SFX,PREFD_LANG,TERMS_ACPTNC_DT,CMUNCTN_TM_ZN,LEAD_NUM,ETHCTY_type_CD,USR_RGSTRN_DT,UNVRSL_OPT_IND,TGT_CUST_ID,INSERT_UPDATE_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.PRSNA_SRC_ID,t1.FRST_NAME,t1.MDL_NAME,t1.LAST_NAME,t1.ORG_NAME,t1.FULL_NAME,t1.NICK_NAME,t1.GNDR_TYPE_CD,t1.USR_ID,t1.USR_ACCT_STRT_DT,t1.USR_ACCT_ROLE_CD,t1.STDZD_FRST_NAME,t1.STDZD_LAST_NAME,t1.STDZD_MDL_NAME,t1.PRSNA_TYPE_CD,t1.PRSNA_ROLE_CD,t1.UNVRSL_AUTHZTN_LANG_CD,t1.PRSNA_BUS_DT,t1.UNVRSL_AUTHZTN_STRT_DT,t1.SOC_GRP_NAME,t1.MKTG_PRG_ID,t1.SRC_INTAKE_ID,t1.LOB_NUM,t1.PRTNR_NAME,t1.NAME_PRFX,t1.NAME_SFX,t1.PREFD_LANG,t1.TERMS_ACPTNC_DT,t1.CMUNCTN_TM_ZN,t1.LEAD_NUM,t1.ETHCTY_type_CD,t1.USR_RGSTRN_DT,t1.UNVRSL_OPT_IND,t1.TGT_CUST_ID,t1.INSERT_UPDATE_FLAG,''UPDATE'',''VALID'' FROM IN_PRSNA t1, PRSNA t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.PRSNA_SRC_ID <> t2.PRSNA_SRC_ID OR ( t1.PRSNA_SRC_ID IS NULL AND t2.PRSNA_SRC_ID IS NOT NULL) OR (t1.PRSNA_SRC_ID IS NOT NULL AND t2.PRSNA_SRC_ID IS NULL)) OR (t1.FRST_NAME <> t2.FRST_NAME OR ( t1.FRST_NAME IS NULL AND t2.FRST_NAME IS NOT NULL) OR (t1.FRST_NAME IS NOT NULL AND t2.FRST_NAME IS NULL)) OR (t1.MDL_NAME <> t2.MDL_NAME OR ( t1.MDL_NAME IS NULL AND t2.MDL_NAME IS NOT NULL) OR (t1.MDL_NAME IS NOT NULL AND t2.MDL_NAME IS NULL)) OR (t1.LAST_NAME <> t2.LAST_NAME OR ( t1.LAST_NAME IS NULL AND t2.LAST_NAME IS NOT NULL) OR (t1.LAST_NAME IS NOT NULL AND t2.LAST_NAME IS NULL)) OR (t1.ORG_NAME <> t2.ORG_NAME OR ( t1.ORG_NAME IS NULL AND t2.ORG_NAME IS NOT NULL) OR (t1.ORG_NAME IS NOT NULL AND t2.ORG_NAME IS NULL)) OR (t1.FULL_NAME <> t2.FULL_NAME OR ( t1.FULL_NAME IS NULL AND t2.FULL_NAME IS NOT NULL) OR (t1.FULL_NAME IS NOT NULL AND t2.FULL_NAME IS NULL)) OR (t1.NICK_NAME <> t2.NICK_NAME OR ( t1.NICK_NAME IS NULL AND t2.NICK_NAME IS NOT NULL) OR (t1.NICK_NAME IS NOT NULL AND t2.NICK_NAME IS NULL)) OR (t1.GNDR_TYPE_CD <> t2.GNDR_TYPE_CD OR ( t1.GNDR_TYPE_CD IS NULL AND t2.GNDR_TYPE_CD IS NOT NULL) OR (t1.GNDR_TYPE_CD IS NOT NULL AND t2.GNDR_TYPE_CD IS NULL)) OR (t1.USR_ID <> t2.USR_ID OR ( t1.USR_ID IS NULL AND t2.USR_ID IS NOT NULL) OR (t1.USR_ID IS NOT NULL AND t2.USR_ID IS NULL)) OR (t1.USR_ACCT_STRT_DT <> t2.USR_ACCT_STRT_DT OR ( t1.USR_ACCT_STRT_DT IS NULL AND t2.USR_ACCT_STRT_DT IS NOT NULL) OR (t1.USR_ACCT_STRT_DT IS NOT NULL AND t2.USR_ACCT_STRT_DT IS NULL)) OR (t1.USR_ACCT_ROLE_CD <> t2.USR_ACCT_ROLE_CD OR ( t1.USR_ACCT_ROLE_CD IS NULL AND t2.USR_ACCT_ROLE_CD IS NOT NULL) OR (t1.USR_ACCT_ROLE_CD IS NOT NULL AND t2.USR_ACCT_ROLE_CD IS NULL)) OR (t1.STDZD_FRST_NAME <> t2.STDZD_FRST_NAME OR ( t1.STDZD_FRST_NAME IS NULL AND t2.STDZD_FRST_NAME IS NOT NULL) OR (t1.STDZD_FRST_NAME IS NOT NULL AND t2.STDZD_FRST_NAME IS NULL)) OR (t1.STDZD_LAST_NAME <> t2.STDZD_LAST_NAME OR ( t1.STDZD_LAST_NAME IS NULL AND t2.STDZD_LAST_NAME IS NOT NULL) OR (t1.STDZD_LAST_NAME IS NOT NULL AND t2.STDZD_LAST_NAME IS NULL)) OR (t1.STDZD_MDL_NAME <> t2.STDZD_MDL_NAME OR ( t1.STDZD_MDL_NAME IS NULL AND t2.STDZD_MDL_NAME IS NOT NULL) OR (t1.STDZD_MDL_NAME IS NOT NULL AND t2.STDZD_MDL_NAME IS NULL)) OR (t1.PRSNA_TYPE_CD <> t2.PRSNA_TYPE_CD OR ( t1.PRSNA_TYPE_CD IS NULL AND t2.PRSNA_TYPE_CD IS NOT NULL) OR (t1.PRSNA_TYPE_CD IS NOT NULL AND t2.PRSNA_TYPE_CD IS NULL)) OR (t1.PRSNA_ROLE_CD <> t2.PRSNA_ROLE_CD OR ( t1.PRSNA_ROLE_CD IS NULL AND t2.PRSNA_ROLE_CD IS NOT NULL) OR (t1.PRSNA_ROLE_CD IS NOT NULL AND t2.PRSNA_ROLE_CD IS NULL)) OR (t1.UNVRSL_AUTHZTN_LANG_CD <> t2.UNVRSL_AUTHZTN_LANG_CD OR ( t1.UNVRSL_AUTHZTN_LANG_CD IS NULL AND t2.UNVRSL_AUTHZTN_LANG_CD IS NOT NULL) OR (t1.UNVRSL_AUTHZTN_LANG_CD IS NOT NULL AND t2.UNVRSL_AUTHZTN_LANG_CD IS NULL)) OR (t1.PRSNA_BUS_DT <> t2.PRSNA_BUS_DT OR ( t1.PRSNA_BUS_DT IS NULL AND t2.PRSNA_BUS_DT IS NOT NULL) OR (t1.PRSNA_BUS_DT IS NOT NULL AND t2.PRSNA_BUS_DT IS NULL)) OR (t1.UNVRSL_AUTHZTN_STRT_DT <> t2.UNVRSL_AUTHZTN_STRT_DT OR ( t1.UNVRSL_AUTHZTN_STRT_DT IS NULL AND t2.UNVRSL_AUTHZTN_STRT_DT IS NOT NULL) OR (t1.UNVRSL_AUTHZTN_STRT_DT IS NOT NULL AND t2.UNVRSL_AUTHZTN_STRT_DT IS NULL)) OR (t1.SOC_GRP_NAME <> t2.SOC_GRP_NAME OR ( t1.SOC_GRP_NAME IS NULL AND t2.SOC_GRP_NAME IS NOT NULL) OR (t1.SOC_GRP_NAME IS NOT NULL AND t2.SOC_GRP_NAME IS NULL)) OR (t1.MKTG_PRG_ID <> t2.MKTG_PRG_ID OR ( t1.MKTG_PRG_ID IS NULL AND t2.MKTG_PRG_ID IS NOT NULL) OR (t1.MKTG_PRG_ID IS NOT NULL AND t2.MKTG_PRG_ID IS NULL)) OR (t1.SRC_INTAKE_ID <> t2.SRC_INTAKE_ID OR ( t1.SRC_INTAKE_ID IS NULL AND t2.SRC_INTAKE_ID IS NOT NULL) OR (t1.SRC_INTAKE_ID IS NOT NULL AND t2.SRC_INTAKE_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.PRTNR_NAME <> t2.PRTNR_NAME OR ( t1.PRTNR_NAME IS NULL AND t2.PRTNR_NAME IS NOT NULL) OR (t1.PRTNR_NAME IS NOT NULL AND t2.PRTNR_NAME IS NULL)) OR (t1.NAME_PRFX <> t2.NAME_PRFX OR ( t1.NAME_PRFX IS NULL AND t2.NAME_PRFX IS NOT NULL) OR (t1.NAME_PRFX IS NOT NULL AND t2.NAME_PRFX IS NULL)) OR (t1.NAME_SFX <> t2.NAME_SFX OR ( t1.NAME_SFX IS NULL AND t2.NAME_SFX IS NOT NULL) OR (t1.NAME_SFX IS NOT NULL AND t2.NAME_SFX IS NULL)) OR (t1.PREFD_LANG <> t2.PREFD_LANG OR ( t1.PREFD_LANG IS NULL AND t2.PREFD_LANG IS NOT NULL) OR (t1.PREFD_LANG IS NOT NULL AND t2.PREFD_LANG IS NULL)) OR (t1.TERMS_ACPTNC_DT <> t2.TERMS_ACPTNC_DT OR ( t1.TERMS_ACPTNC_DT IS NULL AND t2.TERMS_ACPTNC_DT IS NOT NULL) OR (t1.TERMS_ACPTNC_DT IS NOT NULL AND t2.TERMS_ACPTNC_DT IS NULL)) OR (t1.CMUNCTN_TM_ZN <> t2.CMUNCTN_TM_ZN OR ( t1.CMUNCTN_TM_ZN IS NULL AND t2.CMUNCTN_TM_ZN IS NOT NULL) OR (t1.CMUNCTN_TM_ZN IS NOT NULL AND t2.CMUNCTN_TM_ZN IS NULL)) OR (t1.LEAD_NUM <> t2.LEAD_NUM OR ( t1.LEAD_NUM IS NULL AND t2.LEAD_NUM IS NOT NULL) OR (t1.LEAD_NUM IS NOT NULL AND t2.LEAD_NUM IS NULL)) OR (t1.ETHCTY_type_CD <> t2.ETHCTY_type_CD OR ( t1.ETHCTY_type_CD IS NULL AND t2.ETHCTY_type_CD IS NOT NULL) OR (t1.ETHCTY_type_CD IS NOT NULL AND t2.ETHCTY_type_CD IS NULL)) OR (t1.USR_RGSTRN_DT <> t2.USR_RGSTRN_DT OR ( t1.USR_RGSTRN_DT IS NULL AND t2.USR_RGSTRN_DT IS NOT NULL) OR (t1.USR_RGSTRN_DT IS NOT NULL AND t2.USR_RGSTRN_DT IS NULL)) OR (t1.UNVRSL_OPT_IND <> t2.UNVRSL_OPT_IND OR ( t1.UNVRSL_OPT_IND IS NULL AND t2.UNVRSL_OPT_IND IS NOT NULL) OR (t1.UNVRSL_OPT_IND IS NOT NULL AND t2.UNVRSL_OPT_IND IS NULL)) OR (t1.TGT_CUST_ID <> t2.TGT_CUST_ID OR ( t1.TGT_CUST_ID IS NULL AND t2.TGT_CUST_ID IS NOT NULL) OR (t1.TGT_CUST_ID IS NOT NULL AND t2.TGT_CUST_ID IS NULL)) OR (t1.INSERT_UPDATE_FLAG <> t2.INSERT_UPDATE_FLAG OR ( t1.INSERT_UPDATE_FLAG IS NULL AND t2.INSERT_UPDATE_FLAG IS NOT NULL) OR (t1.INSERT_UPDATE_FLAG IS NOT NULL AND t2.INSERT_UPDATE_FLAG IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA', 'INSERT INTO NC_PRSNA ( SCENARIO_ID,PRSNA_ID,PRSNA_SRC_ID,FRST_NAME,MDL_NAME,LAST_NAME,ORG_NAME,FULL_NAME,NICK_NAME,GNDR_TYPE_CD,USR_ID,USR_ACCT_STRT_DT,USR_ACCT_ROLE_CD,STDZD_FRST_NAME,STDZD_LAST_NAME,STDZD_MDL_NAME,PRSNA_TYPE_CD,PRSNA_ROLE_CD,UNVRSL_AUTHZTN_LANG_CD,PRSNA_BUS_DT,UNVRSL_AUTHZTN_STRT_DT,SOC_GRP_NAME,MKTG_PRG_ID,SRC_INTAKE_ID,LOB_NUM,PRTNR_NAME,NAME_PRFX,NAME_SFX,PREFD_LANG,TERMS_ACPTNC_DT,CMUNCTN_TM_ZN,LEAD_NUM,ETHCTY_type_CD,USR_RGSTRN_DT,UNVRSL_OPT_IND,TGT_CUST_ID,INSERT_UPDATE_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.PRSNA_SRC_ID,t1.FRST_NAME,t1.MDL_NAME,t1.LAST_NAME,t1.ORG_NAME,t1.FULL_NAME,t1.NICK_NAME,t1.GNDR_TYPE_CD,t1.USR_ID,t1.USR_ACCT_STRT_DT,t1.USR_ACCT_ROLE_CD,t1.STDZD_FRST_NAME,t1.STDZD_LAST_NAME,t1.STDZD_MDL_NAME,t1.PRSNA_TYPE_CD,t1.PRSNA_ROLE_CD,t1.UNVRSL_AUTHZTN_LANG_CD,t1.PRSNA_BUS_DT,t1.UNVRSL_AUTHZTN_STRT_DT,t1.SOC_GRP_NAME,t1.MKTG_PRG_ID,t1.SRC_INTAKE_ID,t1.LOB_NUM,t1.PRTNR_NAME,t1.NAME_PRFX,t1.NAME_SFX,t1.PREFD_LANG,t1.TERMS_ACPTNC_DT,t1.CMUNCTN_TM_ZN,t1.LEAD_NUM,t1.ETHCTY_type_CD,t1.USR_RGSTRN_DT,t1.UNVRSL_OPT_IND,t1.TGT_CUST_ID,t1.INSERT_UPDATE_FLAG,''ACTIVATE'',''VALID'' FROM IN_PRSNA t1, PRSNA t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ACCT', 'INSERT INTO NC_PRSNA_ACCT ( SCENARIO_ID,ACCT_NUM,PRSNA_ID,FRST_NAME,MDL_NAME,LAST_NAME,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACCT_NUM,PRSNA_ID,FRST_NAME,MDL_NAME,LAST_NAME,LOB_NUM,''INSERT'',''VALID'' FROM IN_PRSNA_ACCT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_ACCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_NUM = t2.ACCT_NUM AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ACCT', 'INSERT INTO NC_PRSNA_ACCT ( SCENARIO_ID,ACCT_NUM,PRSNA_ID,FRST_NAME,MDL_NAME,LAST_NAME,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ACCT_NUM,PRSNA_ID,FRST_NAME,MDL_NAME,LAST_NAME,LOB_NUM,''DELETE'',''VALID'' FROM PRSNA_ACCT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_ACCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_NUM = t2.ACCT_NUM AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA_ACCT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_NUM = t2.ACCT_NUM AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ACCT', 'INSERT INTO NC_PRSNA_ACCT ( SCENARIO_ID,ACCT_NUM,PRSNA_ID,FRST_NAME,MDL_NAME,LAST_NAME,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACCT_NUM,t1.PRSNA_ID,t1.FRST_NAME,t1.MDL_NAME,t1.LAST_NAME,t1.LOB_NUM,''UPDATE'',''VALID'' FROM IN_PRSNA_ACCT t1, PRSNA_ACCT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_NUM = t2.ACCT_NUM AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ACCT_NUM <> t2.ACCT_NUM OR ( t1.ACCT_NUM IS NULL AND t2.ACCT_NUM IS NOT NULL) OR (t1.ACCT_NUM IS NOT NULL AND t2.ACCT_NUM IS NULL)) OR (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.FRST_NAME <> t2.FRST_NAME OR ( t1.FRST_NAME IS NULL AND t2.FRST_NAME IS NOT NULL) OR (t1.FRST_NAME IS NOT NULL AND t2.FRST_NAME IS NULL)) OR (t1.MDL_NAME <> t2.MDL_NAME OR ( t1.MDL_NAME IS NULL AND t2.MDL_NAME IS NOT NULL) OR (t1.MDL_NAME IS NOT NULL AND t2.MDL_NAME IS NULL)) OR (t1.LAST_NAME <> t2.LAST_NAME OR ( t1.LAST_NAME IS NULL AND t2.LAST_NAME IS NOT NULL) OR (t1.LAST_NAME IS NOT NULL AND t2.LAST_NAME IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ACCT', 'INSERT INTO NC_PRSNA_ACCT ( SCENARIO_ID,ACCT_NUM,PRSNA_ID,FRST_NAME,MDL_NAME,LAST_NAME,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ACCT_NUM,t1.PRSNA_ID,t1.FRST_NAME,t1.MDL_NAME,t1.LAST_NAME,t1.LOB_NUM,''ACTIVATE'',''VALID'' FROM IN_PRSNA_ACCT t1, PRSNA_ACCT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_NUM = t2.ACCT_NUM AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ADDR', 'INSERT INTO NC_PRSNA_ADDR ( SCENARIO_ID,PRSNA_ID,ADDR_SUBTYPE_CD,ADDR_RQST_ID,ADDR_STDZD_TXT,CHNL_ID,ADDR_TYPE_CD,CNTCT_OPT_IND,UAL_CD,ADDR_Ignore_FLG,LOB_NUM,PRSNA_ADDR_STRT_DT,PRSNA_ADDR_END_DT,ADDR_STS_CD,SMS_ALLWD_CD,TGT_ADDR_ID,INSERT_UPDATE_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,ADDR_SUBTYPE_CD,ADDR_RQST_ID,ADDR_STDZD_TXT,CHNL_ID,ADDR_TYPE_CD,CNTCT_OPT_IND,UAL_CD,ADDR_Ignore_FLG,LOB_NUM,PRSNA_ADDR_STRT_DT,PRSNA_ADDR_END_DT,ADDR_STS_CD,SMS_ALLWD_CD,TGT_ADDR_ID,INSERT_UPDATE_FLAG,''INSERT'',''VALID'' FROM IN_PRSNA_ADDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ADDR', 'INSERT INTO NC_PRSNA_ADDR ( SCENARIO_ID,PRSNA_ID,ADDR_SUBTYPE_CD,ADDR_RQST_ID,ADDR_STDZD_TXT,CHNL_ID,ADDR_TYPE_CD,CNTCT_OPT_IND,UAL_CD,ADDR_Ignore_FLG,LOB_NUM,PRSNA_ADDR_STRT_DT,PRSNA_ADDR_END_DT,ADDR_STS_CD,SMS_ALLWD_CD,TGT_ADDR_ID,INSERT_UPDATE_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,ADDR_SUBTYPE_CD,ADDR_RQST_ID,ADDR_STDZD_TXT,CHNL_ID,ADDR_TYPE_CD,CNTCT_OPT_IND,UAL_CD,ADDR_Ignore_FLG,LOB_NUM,PRSNA_ADDR_STRT_DT,PRSNA_ADDR_END_DT,ADDR_STS_CD,SMS_ALLWD_CD,TGT_ADDR_ID,INSERT_UPDATE_FLAG,''DELETE'',''VALID'' FROM PRSNA_ADDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ADDR', 'INSERT INTO NC_PRSNA_ADDR ( SCENARIO_ID,PRSNA_ID,ADDR_SUBTYPE_CD,ADDR_RQST_ID,ADDR_STDZD_TXT,CHNL_ID,ADDR_TYPE_CD,CNTCT_OPT_IND,UAL_CD,ADDR_Ignore_FLG,LOB_NUM,PRSNA_ADDR_STRT_DT,PRSNA_ADDR_END_DT,ADDR_STS_CD,SMS_ALLWD_CD,TGT_ADDR_ID,INSERT_UPDATE_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.ADDR_SUBTYPE_CD,t1.ADDR_RQST_ID,t1.ADDR_STDZD_TXT,t1.CHNL_ID,t1.ADDR_TYPE_CD,t1.CNTCT_OPT_IND,t1.UAL_CD,t1.ADDR_Ignore_FLG,t1.LOB_NUM,t1.PRSNA_ADDR_STRT_DT,t1.PRSNA_ADDR_END_DT,t1.ADDR_STS_CD,t1.SMS_ALLWD_CD,t1.TGT_ADDR_ID,t1.INSERT_UPDATE_FLAG,''UPDATE'',''VALID'' FROM IN_PRSNA_ADDR t1, PRSNA_ADDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.ADDR_SUBTYPE_CD <> t2.ADDR_SUBTYPE_CD OR ( t1.ADDR_SUBTYPE_CD IS NULL AND t2.ADDR_SUBTYPE_CD IS NOT NULL) OR (t1.ADDR_SUBTYPE_CD IS NOT NULL AND t2.ADDR_SUBTYPE_CD IS NULL)) OR (t1.ADDR_RQST_ID <> t2.ADDR_RQST_ID OR ( t1.ADDR_RQST_ID IS NULL AND t2.ADDR_RQST_ID IS NOT NULL) OR (t1.ADDR_RQST_ID IS NOT NULL AND t2.ADDR_RQST_ID IS NULL)) OR (t1.ADDR_STDZD_TXT <> t2.ADDR_STDZD_TXT OR ( t1.ADDR_STDZD_TXT IS NULL AND t2.ADDR_STDZD_TXT IS NOT NULL) OR (t1.ADDR_STDZD_TXT IS NOT NULL AND t2.ADDR_STDZD_TXT IS NULL)) OR (t1.CHNL_ID <> t2.CHNL_ID OR ( t1.CHNL_ID IS NULL AND t2.CHNL_ID IS NOT NULL) OR (t1.CHNL_ID IS NOT NULL AND t2.CHNL_ID IS NULL)) OR (t1.ADDR_TYPE_CD <> t2.ADDR_TYPE_CD OR ( t1.ADDR_TYPE_CD IS NULL AND t2.ADDR_TYPE_CD IS NOT NULL) OR (t1.ADDR_TYPE_CD IS NOT NULL AND t2.ADDR_TYPE_CD IS NULL)) OR (t1.CNTCT_OPT_IND <> t2.CNTCT_OPT_IND OR ( t1.CNTCT_OPT_IND IS NULL AND t2.CNTCT_OPT_IND IS NOT NULL) OR (t1.CNTCT_OPT_IND IS NOT NULL AND t2.CNTCT_OPT_IND IS NULL)) OR (t1.UAL_CD <> t2.UAL_CD OR ( t1.UAL_CD IS NULL AND t2.UAL_CD IS NOT NULL) OR (t1.UAL_CD IS NOT NULL AND t2.UAL_CD IS NULL)) OR (t1.ADDR_Ignore_FLG <> t2.ADDR_Ignore_FLG OR ( t1.ADDR_Ignore_FLG IS NULL AND t2.ADDR_Ignore_FLG IS NOT NULL) OR (t1.ADDR_Ignore_FLG IS NOT NULL AND t2.ADDR_Ignore_FLG IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.PRSNA_ADDR_STRT_DT <> t2.PRSNA_ADDR_STRT_DT OR ( t1.PRSNA_ADDR_STRT_DT IS NULL AND t2.PRSNA_ADDR_STRT_DT IS NOT NULL) OR (t1.PRSNA_ADDR_STRT_DT IS NOT NULL AND t2.PRSNA_ADDR_STRT_DT IS NULL)) OR (t1.PRSNA_ADDR_END_DT <> t2.PRSNA_ADDR_END_DT OR ( t1.PRSNA_ADDR_END_DT IS NULL AND t2.PRSNA_ADDR_END_DT IS NOT NULL) OR (t1.PRSNA_ADDR_END_DT IS NOT NULL AND t2.PRSNA_ADDR_END_DT IS NULL)) OR (t1.ADDR_STS_CD <> t2.ADDR_STS_CD OR ( t1.ADDR_STS_CD IS NULL AND t2.ADDR_STS_CD IS NOT NULL) OR (t1.ADDR_STS_CD IS NOT NULL AND t2.ADDR_STS_CD IS NULL)) OR (t1.SMS_ALLWD_CD <> t2.SMS_ALLWD_CD OR ( t1.SMS_ALLWD_CD IS NULL AND t2.SMS_ALLWD_CD IS NOT NULL) OR (t1.SMS_ALLWD_CD IS NOT NULL AND t2.SMS_ALLWD_CD IS NULL)) OR (t1.TGT_ADDR_ID <> t2.TGT_ADDR_ID OR ( t1.TGT_ADDR_ID IS NULL AND t2.TGT_ADDR_ID IS NOT NULL) OR (t1.TGT_ADDR_ID IS NOT NULL AND t2.TGT_ADDR_ID IS NULL)) OR (t1.INSERT_UPDATE_FLAG <> t2.INSERT_UPDATE_FLAG OR ( t1.INSERT_UPDATE_FLAG IS NULL AND t2.INSERT_UPDATE_FLAG IS NOT NULL) OR (t1.INSERT_UPDATE_FLAG IS NOT NULL AND t2.INSERT_UPDATE_FLAG IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ADDR', 'INSERT INTO NC_PRSNA_ADDR ( SCENARIO_ID,PRSNA_ID,ADDR_SUBTYPE_CD,ADDR_RQST_ID,ADDR_STDZD_TXT,CHNL_ID,ADDR_TYPE_CD,CNTCT_OPT_IND,UAL_CD,ADDR_Ignore_FLG,LOB_NUM,PRSNA_ADDR_STRT_DT,PRSNA_ADDR_END_DT,ADDR_STS_CD,SMS_ALLWD_CD,TGT_ADDR_ID,INSERT_UPDATE_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.ADDR_SUBTYPE_CD,t1.ADDR_RQST_ID,t1.ADDR_STDZD_TXT,t1.CHNL_ID,t1.ADDR_TYPE_CD,t1.CNTCT_OPT_IND,t1.UAL_CD,t1.ADDR_Ignore_FLG,t1.LOB_NUM,t1.PRSNA_ADDR_STRT_DT,t1.PRSNA_ADDR_END_DT,t1.ADDR_STS_CD,t1.SMS_ALLWD_CD,t1.TGT_ADDR_ID,t1.INSERT_UPDATE_FLAG,''ACTIVATE'',''VALID'' FROM IN_PRSNA_ADDR t1, PRSNA_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ADDR_XREF', 'INSERT INTO NC_PRSNA_ADDR_XREF ( SCENARIO_ID,ADDR_RQST_ID,PRSNA_ID,XREF_Key1,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ADDR_RQST_ID,PRSNA_ID,XREF_Key1,LOB_NUM,''INSERT'',''VALID'' FROM IN_PRSNA_ADDR_XREF t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_ADDR_XREF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ADDR_XREF', 'INSERT INTO NC_PRSNA_ADDR_XREF ( SCENARIO_ID,ADDR_RQST_ID,PRSNA_ID,XREF_Key1,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ADDR_RQST_ID,PRSNA_ID,XREF_Key1,LOB_NUM,''DELETE'',''VALID'' FROM PRSNA_ADDR_XREF t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_ADDR_XREF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA_ADDR_XREF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ADDR_XREF', 'INSERT INTO NC_PRSNA_ADDR_XREF ( SCENARIO_ID,ADDR_RQST_ID,PRSNA_ID,XREF_Key1,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ADDR_RQST_ID,t1.PRSNA_ID,t1.XREF_Key1,t1.LOB_NUM,''UPDATE'',''VALID'' FROM IN_PRSNA_ADDR_XREF t1, PRSNA_ADDR_XREF t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ADDR_RQST_ID <> t2.ADDR_RQST_ID OR ( t1.ADDR_RQST_ID IS NULL AND t2.ADDR_RQST_ID IS NOT NULL) OR (t1.ADDR_RQST_ID IS NOT NULL AND t2.ADDR_RQST_ID IS NULL)) OR (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.XREF_KEY1 <> t2.XREF_KEY1 OR ( t1.XREF_KEY1 IS NULL AND t2.XREF_KEY1 IS NOT NULL) OR (t1.XREF_KEY1 IS NOT NULL AND t2.XREF_KEY1 IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_ADDR_XREF', 'INSERT INTO NC_PRSNA_ADDR_XREF ( SCENARIO_ID,ADDR_RQST_ID,PRSNA_ID,XREF_Key1,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ADDR_RQST_ID,t1.PRSNA_ID,t1.XREF_Key1,t1.LOB_NUM,''ACTIVATE'',''VALID'' FROM IN_PRSNA_ADDR_XREF t1, PRSNA_ADDR_XREF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_CNTCT_PREF', 'INSERT INTO NC_PRSNA_CNTCT_PREF ( SCENARIO_ID,PRSNA_ID,ADDR_RQST_ID,LOB_NUM,CNTCT_PREFRC_TM_PRD_CD,CNTRCT_PREFRC_CYCL_CD,CNTCT_PREFRC_STRT_TM,CNTCT_PREFRC_END_TM,CNTCT_PREFRC_FRQCY_NUM,CNTCT_PREFRC_CNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,ADDR_RQST_ID,LOB_NUM,CNTCT_PREFRC_TM_PRD_CD,CNTRCT_PREFRC_CYCL_CD,CNTCT_PREFRC_STRT_TM,CNTCT_PREFRC_END_TM,CNTCT_PREFRC_FRQCY_NUM,CNTCT_PREFRC_CNT,''INSERT'',''VALID'' FROM IN_PRSNA_CNTCT_PREF t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_CNTCT_PREF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_PREFRC_TM_PRD_CD = t2.CNTCT_PREFRC_TM_PRD_CD AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.LOB_NUM = t2.LOB_NUM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_CNTCT_PREF', 'INSERT INTO NC_PRSNA_CNTCT_PREF ( SCENARIO_ID,PRSNA_ID,ADDR_RQST_ID,LOB_NUM,CNTCT_PREFRC_TM_PRD_CD,CNTRCT_PREFRC_CYCL_CD,CNTCT_PREFRC_STRT_TM,CNTCT_PREFRC_END_TM,CNTCT_PREFRC_FRQCY_NUM,CNTCT_PREFRC_CNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,ADDR_RQST_ID,LOB_NUM,CNTCT_PREFRC_TM_PRD_CD,CNTRCT_PREFRC_CYCL_CD,CNTCT_PREFRC_STRT_TM,CNTCT_PREFRC_END_TM,CNTCT_PREFRC_FRQCY_NUM,CNTCT_PREFRC_CNT,''DELETE'',''VALID'' FROM PRSNA_CNTCT_PREF t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_CNTCT_PREF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_PREFRC_TM_PRD_CD = t2.CNTCT_PREFRC_TM_PRD_CD AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.LOB_NUM = t2.LOB_NUM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA_CNTCT_PREF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_PREFRC_TM_PRD_CD = t2.CNTCT_PREFRC_TM_PRD_CD AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.LOB_NUM = t2.LOB_NUM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_CNTCT_PREF', 'INSERT INTO NC_PRSNA_CNTCT_PREF ( SCENARIO_ID,PRSNA_ID,ADDR_RQST_ID,LOB_NUM,CNTCT_PREFRC_TM_PRD_CD,CNTRCT_PREFRC_CYCL_CD,CNTCT_PREFRC_STRT_TM,CNTCT_PREFRC_END_TM,CNTCT_PREFRC_FRQCY_NUM,CNTCT_PREFRC_CNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.ADDR_RQST_ID,t1.LOB_NUM,t1.CNTCT_PREFRC_TM_PRD_CD,t1.CNTRCT_PREFRC_CYCL_CD,t1.CNTCT_PREFRC_STRT_TM,t1.CNTCT_PREFRC_END_TM,t1.CNTCT_PREFRC_FRQCY_NUM,t1.CNTCT_PREFRC_CNT,''UPDATE'',''VALID'' FROM IN_PRSNA_CNTCT_PREF t1, PRSNA_CNTCT_PREF t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_PREFRC_TM_PRD_CD = t2.CNTCT_PREFRC_TM_PRD_CD AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.LOB_NUM = t2.LOB_NUM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.ADDR_RQST_ID <> t2.ADDR_RQST_ID OR ( t1.ADDR_RQST_ID IS NULL AND t2.ADDR_RQST_ID IS NOT NULL) OR (t1.ADDR_RQST_ID IS NOT NULL AND t2.ADDR_RQST_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.CNTCT_PREFRC_TM_PRD_CD <> t2.CNTCT_PREFRC_TM_PRD_CD OR ( t1.CNTCT_PREFRC_TM_PRD_CD IS NULL AND t2.CNTCT_PREFRC_TM_PRD_CD IS NOT NULL) OR (t1.CNTCT_PREFRC_TM_PRD_CD IS NOT NULL AND t2.CNTCT_PREFRC_TM_PRD_CD IS NULL)) OR (t1.CNTRCT_PREFRC_CYCL_CD <> t2.CNTRCT_PREFRC_CYCL_CD OR ( t1.CNTRCT_PREFRC_CYCL_CD IS NULL AND t2.CNTRCT_PREFRC_CYCL_CD IS NOT NULL) OR (t1.CNTRCT_PREFRC_CYCL_CD IS NOT NULL AND t2.CNTRCT_PREFRC_CYCL_CD IS NULL)) OR (t1.CNTCT_PREFRC_STRT_TM <> t2.CNTCT_PREFRC_STRT_TM OR ( t1.CNTCT_PREFRC_STRT_TM IS NULL AND t2.CNTCT_PREFRC_STRT_TM IS NOT NULL) OR (t1.CNTCT_PREFRC_STRT_TM IS NOT NULL AND t2.CNTCT_PREFRC_STRT_TM IS NULL)) OR (t1.CNTCT_PREFRC_END_TM <> t2.CNTCT_PREFRC_END_TM OR ( t1.CNTCT_PREFRC_END_TM IS NULL AND t2.CNTCT_PREFRC_END_TM IS NOT NULL) OR (t1.CNTCT_PREFRC_END_TM IS NOT NULL AND t2.CNTCT_PREFRC_END_TM IS NULL)) OR (t1.CNTCT_PREFRC_FRQCY_NUM <> t2.CNTCT_PREFRC_FRQCY_NUM OR ( t1.CNTCT_PREFRC_FRQCY_NUM IS NULL AND t2.CNTCT_PREFRC_FRQCY_NUM IS NOT NULL) OR (t1.CNTCT_PREFRC_FRQCY_NUM IS NOT NULL AND t2.CNTCT_PREFRC_FRQCY_NUM IS NULL)) OR (t1.CNTCT_PREFRC_CNT <> t2.CNTCT_PREFRC_CNT OR ( t1.CNTCT_PREFRC_CNT IS NULL AND t2.CNTCT_PREFRC_CNT IS NOT NULL) OR (t1.CNTCT_PREFRC_CNT IS NOT NULL AND t2.CNTCT_PREFRC_CNT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_CNTCT_PREF', 'INSERT INTO NC_PRSNA_CNTCT_PREF ( SCENARIO_ID,PRSNA_ID,ADDR_RQST_ID,LOB_NUM,CNTCT_PREFRC_TM_PRD_CD,CNTRCT_PREFRC_CYCL_CD,CNTCT_PREFRC_STRT_TM,CNTCT_PREFRC_END_TM,CNTCT_PREFRC_FRQCY_NUM,CNTCT_PREFRC_CNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.ADDR_RQST_ID,t1.LOB_NUM,t1.CNTCT_PREFRC_TM_PRD_CD,t1.CNTRCT_PREFRC_CYCL_CD,t1.CNTCT_PREFRC_STRT_TM,t1.CNTCT_PREFRC_END_TM,t1.CNTCT_PREFRC_FRQCY_NUM,t1.CNTCT_PREFRC_CNT,''ACTIVATE'',''VALID'' FROM IN_PRSNA_CNTCT_PREF t1, PRSNA_CNTCT_PREF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CNTCT_PREFRC_TM_PRD_CD = t2.CNTCT_PREFRC_TM_PRD_CD AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.ADDR_RQST_ID = t2.ADDR_RQST_ID AND t1.LOB_NUM = t2.LOB_NUM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_PROD', 'INSERT INTO NC_PRSNA_PROD ( SCENARIO_ID,PRSNA_ID,MKTG_PRG_ID,CHNL_ID,BRND_CD,PROD_ID,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,MKTG_PRG_ID,CHNL_ID,BRND_CD,PROD_ID,LOB_NUM,''INSERT'',''VALID'' FROM IN_PRSNA_PROD t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_PROD t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.PROD_ID = t2.PROD_ID AND t1.LOB_NUM = t2.LOB_NUM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_PROD', 'INSERT INTO NC_PRSNA_PROD ( SCENARIO_ID,PRSNA_ID,MKTG_PRG_ID,CHNL_ID,BRND_CD,PROD_ID,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,MKTG_PRG_ID,CHNL_ID,BRND_CD,PROD_ID,LOB_NUM,''DELETE'',''VALID'' FROM PRSNA_PROD t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_PROD t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.PROD_ID = t2.PROD_ID AND t1.LOB_NUM = t2.LOB_NUM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA_PROD t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.PROD_ID = t2.PROD_ID AND t1.LOB_NUM = t2.LOB_NUM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_PROD', 'INSERT INTO NC_PRSNA_PROD ( SCENARIO_ID,PRSNA_ID,MKTG_PRG_ID,CHNL_ID,BRND_CD,PROD_ID,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.MKTG_PRG_ID,t1.CHNL_ID,t1.BRND_CD,t1.PROD_ID,t1.LOB_NUM,''UPDATE'',''VALID'' FROM IN_PRSNA_PROD t1, PRSNA_PROD t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.PROD_ID = t2.PROD_ID AND t1.LOB_NUM = t2.LOB_NUM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.MKTG_PRG_ID <> t2.MKTG_PRG_ID OR ( t1.MKTG_PRG_ID IS NULL AND t2.MKTG_PRG_ID IS NOT NULL) OR (t1.MKTG_PRG_ID IS NOT NULL AND t2.MKTG_PRG_ID IS NULL)) OR (t1.CHNL_ID <> t2.CHNL_ID OR ( t1.CHNL_ID IS NULL AND t2.CHNL_ID IS NOT NULL) OR (t1.CHNL_ID IS NOT NULL AND t2.CHNL_ID IS NULL)) OR (t1.BRND_CD <> t2.BRND_CD OR ( t1.BRND_CD IS NULL AND t2.BRND_CD IS NOT NULL) OR (t1.BRND_CD IS NOT NULL AND t2.BRND_CD IS NULL)) OR (t1.PROD_ID <> t2.PROD_ID OR ( t1.PROD_ID IS NULL AND t2.PROD_ID IS NOT NULL) OR (t1.PROD_ID IS NOT NULL AND t2.PROD_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_PROD', 'INSERT INTO NC_PRSNA_PROD ( SCENARIO_ID,PRSNA_ID,MKTG_PRG_ID,CHNL_ID,BRND_CD,PROD_ID,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.MKTG_PRG_ID,t1.CHNL_ID,t1.BRND_CD,t1.PROD_ID,t1.LOB_NUM,''ACTIVATE'',''VALID'' FROM IN_PRSNA_PROD t1, PRSNA_PROD t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.PROD_ID = t2.PROD_ID AND t1.LOB_NUM = t2.LOB_NUM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_RLTNSHP', 'INSERT INTO NC_PRSNA_RLTNSHP ( SCENARIO_ID,PARNT_PRSNA_ID,CHLD_PRSNA_ID,PRSNA_RLTNSHP_type_CD,PRSNA_RLTNSHP_ROLE_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PARNT_PRSNA_ID,CHLD_PRSNA_ID,PRSNA_RLTNSHP_type_CD,PRSNA_RLTNSHP_ROLE_CD,LOB_NUM,''INSERT'',''VALID'' FROM IN_PRSNA_RLTNSHP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_RLTNSHP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PARNT_PRSNA_ID = t2.PARNT_PRSNA_ID AND t1.CHLD_PRSNA_ID = t2.CHLD_PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_RLTNSHP', 'INSERT INTO NC_PRSNA_RLTNSHP ( SCENARIO_ID,PARNT_PRSNA_ID,CHLD_PRSNA_ID,PRSNA_RLTNSHP_type_CD,PRSNA_RLTNSHP_ROLE_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PARNT_PRSNA_ID,CHLD_PRSNA_ID,PRSNA_RLTNSHP_type_CD,PRSNA_RLTNSHP_ROLE_CD,LOB_NUM,''DELETE'',''VALID'' FROM PRSNA_RLTNSHP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_RLTNSHP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PARNT_PRSNA_ID = t2.PARNT_PRSNA_ID AND t1.CHLD_PRSNA_ID = t2.CHLD_PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA_RLTNSHP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PARNT_PRSNA_ID = t2.PARNT_PRSNA_ID AND t1.CHLD_PRSNA_ID = t2.CHLD_PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_RLTNSHP', 'INSERT INTO NC_PRSNA_RLTNSHP ( SCENARIO_ID,PARNT_PRSNA_ID,CHLD_PRSNA_ID,PRSNA_RLTNSHP_type_CD,PRSNA_RLTNSHP_ROLE_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PARNT_PRSNA_ID,t1.CHLD_PRSNA_ID,t1.PRSNA_RLTNSHP_type_CD,t1.PRSNA_RLTNSHP_ROLE_CD,t1.LOB_NUM,''UPDATE'',''VALID'' FROM IN_PRSNA_RLTNSHP t1, PRSNA_RLTNSHP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PARNT_PRSNA_ID = t2.PARNT_PRSNA_ID AND t1.CHLD_PRSNA_ID = t2.CHLD_PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PARNT_PRSNA_ID <> t2.PARNT_PRSNA_ID OR ( t1.PARNT_PRSNA_ID IS NULL AND t2.PARNT_PRSNA_ID IS NOT NULL) OR (t1.PARNT_PRSNA_ID IS NOT NULL AND t2.PARNT_PRSNA_ID IS NULL)) OR (t1.CHLD_PRSNA_ID <> t2.CHLD_PRSNA_ID OR ( t1.CHLD_PRSNA_ID IS NULL AND t2.CHLD_PRSNA_ID IS NOT NULL) OR (t1.CHLD_PRSNA_ID IS NOT NULL AND t2.CHLD_PRSNA_ID IS NULL)) OR (t1.PRSNA_RLTNSHP_type_CD <> t2.PRSNA_RLTNSHP_type_CD OR ( t1.PRSNA_RLTNSHP_type_CD IS NULL AND t2.PRSNA_RLTNSHP_type_CD IS NOT NULL) OR (t1.PRSNA_RLTNSHP_type_CD IS NOT NULL AND t2.PRSNA_RLTNSHP_type_CD IS NULL)) OR (t1.PRSNA_RLTNSHP_ROLE_CD <> t2.PRSNA_RLTNSHP_ROLE_CD OR ( t1.PRSNA_RLTNSHP_ROLE_CD IS NULL AND t2.PRSNA_RLTNSHP_ROLE_CD IS NOT NULL) OR (t1.PRSNA_RLTNSHP_ROLE_CD IS NOT NULL AND t2.PRSNA_RLTNSHP_ROLE_CD IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_RLTNSHP', 'INSERT INTO NC_PRSNA_RLTNSHP ( SCENARIO_ID,PARNT_PRSNA_ID,CHLD_PRSNA_ID,PRSNA_RLTNSHP_type_CD,PRSNA_RLTNSHP_ROLE_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PARNT_PRSNA_ID,t1.CHLD_PRSNA_ID,t1.PRSNA_RLTNSHP_type_CD,t1.PRSNA_RLTNSHP_ROLE_CD,t1.LOB_NUM,''ACTIVATE'',''VALID'' FROM IN_PRSNA_RLTNSHP t1, PRSNA_RLTNSHP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PARNT_PRSNA_ID = t2.PARNT_PRSNA_ID AND t1.CHLD_PRSNA_ID = t2.CHLD_PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SRC_CHNL', 'INSERT INTO NC_PRSNA_SRC_CHNL ( SCENARIO_ID,PRSNA_SRC_type_CD,CHNL_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_SRC_type_CD,CHNL_ID,''INSERT'',''VALID'' FROM IN_PRSNA_SRC_CHNL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_SRC_CHNL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_SRC_type_CD = t2.PRSNA_SRC_type_CD AND t1.CHNL_ID = t2.CHNL_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SRC_CHNL', 'INSERT INTO NC_PRSNA_SRC_CHNL ( SCENARIO_ID,PRSNA_SRC_type_CD,CHNL_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_SRC_type_CD,CHNL_ID,''DELETE'',''VALID'' FROM PRSNA_SRC_CHNL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_SRC_CHNL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_SRC_type_CD = t2.PRSNA_SRC_type_CD AND t1.CHNL_ID = t2.CHNL_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA_SRC_CHNL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_SRC_type_CD = t2.PRSNA_SRC_type_CD AND t1.CHNL_ID = t2.CHNL_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SRC_CHNL', 'INSERT INTO NC_PRSNA_SRC_CHNL ( SCENARIO_ID,PRSNA_SRC_type_CD,CHNL_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_SRC_type_CD,t1.CHNL_ID,''UPDATE'',''VALID'' FROM IN_PRSNA_SRC_CHNL t1, PRSNA_SRC_CHNL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_SRC_type_CD = t2.PRSNA_SRC_type_CD AND t1.CHNL_ID = t2.CHNL_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_SRC_type_CD <> t2.PRSNA_SRC_type_CD OR ( t1.PRSNA_SRC_type_CD IS NULL AND t2.PRSNA_SRC_type_CD IS NOT NULL) OR (t1.PRSNA_SRC_type_CD IS NOT NULL AND t2.PRSNA_SRC_type_CD IS NULL)) OR (t1.CHNL_ID <> t2.CHNL_ID OR ( t1.CHNL_ID IS NULL AND t2.CHNL_ID IS NOT NULL) OR (t1.CHNL_ID IS NOT NULL AND t2.CHNL_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SRC_CHNL', 'INSERT INTO NC_PRSNA_SRC_CHNL ( SCENARIO_ID,PRSNA_SRC_type_CD,CHNL_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_SRC_type_CD,t1.CHNL_ID,''ACTIVATE'',''VALID'' FROM IN_PRSNA_SRC_CHNL t1, PRSNA_SRC_CHNL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_SRC_type_CD = t2.PRSNA_SRC_type_CD AND t1.CHNL_ID = t2.CHNL_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SRC_TYPE', 'INSERT INTO NC_PRSNA_SRC_TYPE ( SCENARIO_ID,PRSNA_SRC_type_CD,PRSNA_SRC_type_DESC,PRSNA_SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_SRC_type_CD,PRSNA_SRC_type_DESC,PRSNA_SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,''INSERT'',''VALID'' FROM IN_PRSNA_SRC_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_SRC_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_SRC_type_CD = t2.PRSNA_SRC_type_CD )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SRC_TYPE', 'INSERT INTO NC_PRSNA_SRC_TYPE ( SCENARIO_ID,PRSNA_SRC_type_CD,PRSNA_SRC_type_DESC,PRSNA_SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_SRC_type_CD,PRSNA_SRC_type_DESC,PRSNA_SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,''DELETE'',''VALID'' FROM PRSNA_SRC_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_SRC_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_SRC_type_CD = t2.PRSNA_SRC_type_CD ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA_SRC_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_SRC_type_CD = t2.PRSNA_SRC_type_CD));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SRC_TYPE', 'INSERT INTO NC_PRSNA_SRC_TYPE ( SCENARIO_ID,PRSNA_SRC_type_CD,PRSNA_SRC_type_DESC,PRSNA_SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_SRC_type_CD,t1.PRSNA_SRC_type_DESC,t1.PRSNA_SRC_type_NAME,t1.SRC_PRVDR_CD,t1.SRC_FLDR_TXT,t1.SFTP_FLG,''UPDATE'',''VALID'' FROM IN_PRSNA_SRC_TYPE t1, PRSNA_SRC_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_SRC_type_CD = t2.PRSNA_SRC_type_CD AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_SRC_type_CD <> t2.PRSNA_SRC_type_CD OR ( t1.PRSNA_SRC_type_CD IS NULL AND t2.PRSNA_SRC_type_CD IS NOT NULL) OR (t1.PRSNA_SRC_type_CD IS NOT NULL AND t2.PRSNA_SRC_type_CD IS NULL)) OR (t1.PRSNA_SRC_type_DESC <> t2.PRSNA_SRC_type_DESC OR ( t1.PRSNA_SRC_type_DESC IS NULL AND t2.PRSNA_SRC_type_DESC IS NOT NULL) OR (t1.PRSNA_SRC_type_DESC IS NOT NULL AND t2.PRSNA_SRC_type_DESC IS NULL)) OR (t1.PRSNA_SRC_type_NAME <> t2.PRSNA_SRC_type_NAME OR ( t1.PRSNA_SRC_type_NAME IS NULL AND t2.PRSNA_SRC_type_NAME IS NOT NULL) OR (t1.PRSNA_SRC_type_NAME IS NOT NULL AND t2.PRSNA_SRC_type_NAME IS NULL)) OR (t1.SRC_PRVDR_CD <> t2.SRC_PRVDR_CD OR ( t1.SRC_PRVDR_CD IS NULL AND t2.SRC_PRVDR_CD IS NOT NULL) OR (t1.SRC_PRVDR_CD IS NOT NULL AND t2.SRC_PRVDR_CD IS NULL)) OR (t1.SRC_FLDR_TXT <> t2.SRC_FLDR_TXT OR ( t1.SRC_FLDR_TXT IS NULL AND t2.SRC_FLDR_TXT IS NOT NULL) OR (t1.SRC_FLDR_TXT IS NOT NULL AND t2.SRC_FLDR_TXT IS NULL)) OR (t1.SFTP_FLG <> t2.SFTP_FLG OR ( t1.SFTP_FLG IS NULL AND t2.SFTP_FLG IS NOT NULL) OR (t1.SFTP_FLG IS NOT NULL AND t2.SFTP_FLG IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_SRC_TYPE', 'INSERT INTO NC_PRSNA_SRC_TYPE ( SCENARIO_ID,PRSNA_SRC_type_CD,PRSNA_SRC_type_DESC,PRSNA_SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_SRC_type_CD,t1.PRSNA_SRC_type_DESC,t1.PRSNA_SRC_type_NAME,t1.SRC_PRVDR_CD,t1.SRC_FLDR_TXT,t1.SFTP_FLG,''ACTIVATE'',''VALID'' FROM IN_PRSNA_SRC_TYPE t1, PRSNA_SRC_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_SRC_type_CD = t2.PRSNA_SRC_type_CD AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRAIT', 'INSERT INTO NC_PRSNA_TRAIT ( SCENARIO_ID,PRSNA_ID,TRAIT_CD,TRAIT_VAL,MKTG_PRG_ID,PRSNA_TRAIT_STRT_DT,PRSNA_TRAIT_END_DT,CHNL_ID,TRAIT_SEQ_ID,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,TRAIT_CD,TRAIT_VAL,MKTG_PRG_ID,PRSNA_TRAIT_STRT_DT,PRSNA_TRAIT_END_DT,CHNL_ID,TRAIT_SEQ_ID,LOB_NUM,''INSERT'',''VALID'' FROM IN_PRSNA_TRAIT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_TRAIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRAIT_CD = t2.TRAIT_CD AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.TRAIT_SEQ_ID = t2.TRAIT_SEQ_ID AND t1.LOB_NUM = t2.LOB_NUM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRAIT', 'INSERT INTO NC_PRSNA_TRAIT ( SCENARIO_ID,PRSNA_ID,TRAIT_CD,TRAIT_VAL,MKTG_PRG_ID,PRSNA_TRAIT_STRT_DT,PRSNA_TRAIT_END_DT,CHNL_ID,TRAIT_SEQ_ID,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,TRAIT_CD,TRAIT_VAL,MKTG_PRG_ID,PRSNA_TRAIT_STRT_DT,PRSNA_TRAIT_END_DT,CHNL_ID,TRAIT_SEQ_ID,LOB_NUM,''DELETE'',''VALID'' FROM PRSNA_TRAIT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_TRAIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRAIT_CD = t2.TRAIT_CD AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.TRAIT_SEQ_ID = t2.TRAIT_SEQ_ID AND t1.LOB_NUM = t2.LOB_NUM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA_TRAIT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRAIT_CD = t2.TRAIT_CD AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.TRAIT_SEQ_ID = t2.TRAIT_SEQ_ID AND t1.LOB_NUM = t2.LOB_NUM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRAIT', 'INSERT INTO NC_PRSNA_TRAIT ( SCENARIO_ID,PRSNA_ID,TRAIT_CD,TRAIT_VAL,MKTG_PRG_ID,PRSNA_TRAIT_STRT_DT,PRSNA_TRAIT_END_DT,CHNL_ID,TRAIT_SEQ_ID,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.TRAIT_CD,t1.TRAIT_VAL,t1.MKTG_PRG_ID,t1.PRSNA_TRAIT_STRT_DT,t1.PRSNA_TRAIT_END_DT,t1.CHNL_ID,t1.TRAIT_SEQ_ID,t1.LOB_NUM,''UPDATE'',''VALID'' FROM IN_PRSNA_TRAIT t1, PRSNA_TRAIT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRAIT_CD = t2.TRAIT_CD AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.TRAIT_SEQ_ID = t2.TRAIT_SEQ_ID AND t1.LOB_NUM = t2.LOB_NUM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.TRAIT_CD <> t2.TRAIT_CD OR ( t1.TRAIT_CD IS NULL AND t2.TRAIT_CD IS NOT NULL) OR (t1.TRAIT_CD IS NOT NULL AND t2.TRAIT_CD IS NULL)) OR (t1.TRAIT_VAL <> t2.TRAIT_VAL OR ( t1.TRAIT_VAL IS NULL AND t2.TRAIT_VAL IS NOT NULL) OR (t1.TRAIT_VAL IS NOT NULL AND t2.TRAIT_VAL IS NULL)) OR (t1.MKTG_PRG_ID <> t2.MKTG_PRG_ID OR ( t1.MKTG_PRG_ID IS NULL AND t2.MKTG_PRG_ID IS NOT NULL) OR (t1.MKTG_PRG_ID IS NOT NULL AND t2.MKTG_PRG_ID IS NULL)) OR (t1.PRSNA_TRAIT_STRT_DT <> t2.PRSNA_TRAIT_STRT_DT OR ( t1.PRSNA_TRAIT_STRT_DT IS NULL AND t2.PRSNA_TRAIT_STRT_DT IS NOT NULL) OR (t1.PRSNA_TRAIT_STRT_DT IS NOT NULL AND t2.PRSNA_TRAIT_STRT_DT IS NULL)) OR (t1.PRSNA_TRAIT_END_DT <> t2.PRSNA_TRAIT_END_DT OR ( t1.PRSNA_TRAIT_END_DT IS NULL AND t2.PRSNA_TRAIT_END_DT IS NOT NULL) OR (t1.PRSNA_TRAIT_END_DT IS NOT NULL AND t2.PRSNA_TRAIT_END_DT IS NULL)) OR (t1.CHNL_ID <> t2.CHNL_ID OR ( t1.CHNL_ID IS NULL AND t2.CHNL_ID IS NOT NULL) OR (t1.CHNL_ID IS NOT NULL AND t2.CHNL_ID IS NULL)) OR (t1.TRAIT_SEQ_ID <> t2.TRAIT_SEQ_ID OR ( t1.TRAIT_SEQ_ID IS NULL AND t2.TRAIT_SEQ_ID IS NOT NULL) OR (t1.TRAIT_SEQ_ID IS NOT NULL AND t2.TRAIT_SEQ_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_TRAIT', 'INSERT INTO NC_PRSNA_TRAIT ( SCENARIO_ID,PRSNA_ID,TRAIT_CD,TRAIT_VAL,MKTG_PRG_ID,PRSNA_TRAIT_STRT_DT,PRSNA_TRAIT_END_DT,CHNL_ID,TRAIT_SEQ_ID,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.TRAIT_CD,t1.TRAIT_VAL,t1.MKTG_PRG_ID,t1.PRSNA_TRAIT_STRT_DT,t1.PRSNA_TRAIT_END_DT,t1.CHNL_ID,t1.TRAIT_SEQ_ID,t1.LOB_NUM,''ACTIVATE'',''VALID'' FROM IN_PRSNA_TRAIT t1, PRSNA_TRAIT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TRAIT_CD = t2.TRAIT_CD AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.TRAIT_SEQ_ID = t2.TRAIT_SEQ_ID AND t1.LOB_NUM = t2.LOB_NUM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_XREF', 'INSERT INTO NC_PRSNA_XREF ( SCENARIO_ID,PRSNA_ID,XREF_Key1,XREF_Key2,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,XREF_Key1,XREF_Key2,LOB_NUM,''INSERT'',''VALID'' FROM IN_PRSNA_XREF t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM PRSNA_XREF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_XREF', 'INSERT INTO NC_PRSNA_XREF ( SCENARIO_ID,PRSNA_ID,XREF_Key1,XREF_Key2,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,PRSNA_ID,XREF_Key1,XREF_Key2,LOB_NUM,''DELETE'',''VALID'' FROM PRSNA_XREF t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRSNA_XREF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRSNA_XREF t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_XREF', 'INSERT INTO NC_PRSNA_XREF ( SCENARIO_ID,PRSNA_ID,XREF_Key1,XREF_Key2,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.XREF_Key1,t1.XREF_Key2,t1.LOB_NUM,''UPDATE'',''VALID'' FROM IN_PRSNA_XREF t1, PRSNA_XREF t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.XREF_Key1 <> t2.XREF_Key1 OR ( t1.XREF_Key1 IS NULL AND t2.XREF_Key1 IS NOT NULL) OR (t1.XREF_Key1 IS NOT NULL AND t2.XREF_Key1 IS NULL)) OR (t1.XREF_Key2 <> t2.XREF_Key2 OR ( t1.XREF_Key2 IS NULL AND t2.XREF_Key2 IS NOT NULL) OR (t1.XREF_Key2 IS NOT NULL AND t2.XREF_Key2 IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRSNA_XREF', 'INSERT INTO NC_PRSNA_XREF ( SCENARIO_ID,PRSNA_ID,XREF_Key1,XREF_Key2,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.PRSNA_ID,t1.XREF_Key1,t1.XREF_Key2,t1.LOB_NUM,''ACTIVATE'',''VALID'' FROM IN_PRSNA_XREF t1, PRSNA_XREF t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.PRSNA_ID = t2.PRSNA_ID AND t1.LOB_NUM = t2.LOB_NUM AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRTNR_DEVICE_TYPE', 'INSERT INTO NC_PRTNR_DEVICE_TYPE ( SCENARIO_ID,DEVICE_type_CD,PRTNR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_type_CD,PRTNR_NAME,''INSERT'',''VALID'' FROM IN_PRTNR_DEVICE_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_PRTNR_DEVICE_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_type_CD = t2.DEVICE_type_CD AND t1.PRTNR_NAME = t2.PRTNR_NAME )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRTNR_DEVICE_TYPE', 'INSERT INTO NC_PRTNR_DEVICE_TYPE ( SCENARIO_ID,DEVICE_type_CD,PRTNR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_type_CD,PRTNR_NAME,''DELETE'',''VALID'' FROM M_PRTNR_DEVICE_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_PRTNR_DEVICE_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_type_CD = t2.DEVICE_type_CD AND t1.PRTNR_NAME = t2.PRTNR_NAME ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_PRTNR_DEVICE_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_type_CD = t2.DEVICE_type_CD AND t1.PRTNR_NAME = t2.PRTNR_NAME));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRTNR_DEVICE_TYPE', 'INSERT INTO NC_PRTNR_DEVICE_TYPE ( SCENARIO_ID,DEVICE_type_CD,PRTNR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_type_CD,t1.PRTNR_NAME,''UPDATE'',''VALID'' FROM IN_PRTNR_DEVICE_TYPE t1, M_PRTNR_DEVICE_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_type_CD = t2.DEVICE_type_CD AND t1.PRTNR_NAME = t2.PRTNR_NAME AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DEVICE_type_CD <> t2.DEVICE_type_CD OR ( t1.DEVICE_type_CD IS NULL AND t2.DEVICE_type_CD IS NOT NULL) OR (t1.DEVICE_type_CD IS NOT NULL AND t2.DEVICE_type_CD IS NULL)) OR (t1.PRTNR_NAME <> t2.PRTNR_NAME OR ( t1.PRTNR_NAME IS NULL AND t2.PRTNR_NAME IS NOT NULL) OR (t1.PRTNR_NAME IS NOT NULL AND t2.PRTNR_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_PRTNR_DEVICE_TYPE', 'INSERT INTO NC_PRTNR_DEVICE_TYPE ( SCENARIO_ID,DEVICE_type_CD,PRTNR_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_type_CD,t1.PRTNR_NAME,''ACTIVATE'',''VALID'' FROM IN_PRTNR_DEVICE_TYPE t1, M_PRTNR_DEVICE_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_type_CD = t2.DEVICE_type_CD AND t1.PRTNR_NAME = t2.PRTNR_NAME AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_CUST_V', 'INSERT INTO NC_REF_CUST_V ( SCENARIO_ID,CUST_ID,GOLDEN_CUST_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_TYPE_STREET,ADDR_TYPE_PHONE,ADDR_TYPE_EMAIL,CUST_TYPE_CD,ORG_NAME,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,GNDR_type_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,GOLDEN_CUST_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_TYPE_STREET,ADDR_TYPE_PHONE,ADDR_TYPE_EMAIL,CUST_TYPE_CD,ORG_NAME,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,GNDR_type_CD,''INSERT'',''VALID'' FROM REF_CUST_V t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REF_CUST_V t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('REF_CUST_V', 'INSERT INTO NC_REF_CUST_V ( SCENARIO_ID,CUST_ID,GOLDEN_CUST_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_TYPE_STREET,ADDR_TYPE_PHONE,ADDR_TYPE_EMAIL,CUST_TYPE_CD,ORG_NAME,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,GNDR_type_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CUST_ID,GOLDEN_CUST_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_TYPE_STREET,ADDR_TYPE_PHONE,ADDR_TYPE_EMAIL,CUST_TYPE_CD,ORG_NAME,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,GNDR_type_CD,''DELETE'',''VALID'' FROM REF_CUST_V t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM REF_CUST_V t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM REF_CUST_V t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_CUST_V', 'INSERT INTO NC_REF_CUST_V ( SCENARIO_ID,CUST_ID,GOLDEN_CUST_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_TYPE_STREET,ADDR_TYPE_PHONE,ADDR_TYPE_EMAIL,CUST_TYPE_CD,ORG_NAME,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,GNDR_type_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.GOLDEN_CUST_ID,t1.ADDR_ID,t1.ADDR_TYPE_CD,t1.ADDR_TYPE_STREET,t1.ADDR_TYPE_PHONE,t1.ADDR_TYPE_EMAIL,t1.CUST_TYPE_CD,t1.ORG_NAME,t1.FRST_NAME,t1.MDL_NAME,t1.LAST_NAME,t1.NAME_PRFX_TXT,t1.NAME_SFX_TXT,t1.GNDR_type_CD,''UPDATE'',''VALID'' FROM REF_CUST_V t1, REF_CUST_V t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.GOLDEN_CUST_ID <> t2.GOLDEN_CUST_ID OR ( t1.GOLDEN_CUST_ID IS NULL AND t2.GOLDEN_CUST_ID IS NOT NULL) OR (t1.GOLDEN_CUST_ID IS NOT NULL AND t2.GOLDEN_CUST_ID IS NULL)) OR (t1.ADDR_ID <> t2.ADDR_ID OR ( t1.ADDR_ID IS NULL AND t2.ADDR_ID IS NOT NULL) OR (t1.ADDR_ID IS NOT NULL AND t2.ADDR_ID IS NULL)) OR (t1.ADDR_TYPE_CD <> t2.ADDR_TYPE_CD OR ( t1.ADDR_TYPE_CD IS NULL AND t2.ADDR_TYPE_CD IS NOT NULL) OR (t1.ADDR_TYPE_CD IS NOT NULL AND t2.ADDR_TYPE_CD IS NULL)) OR (t1.ADDR_TYPE_STREET <> t2.ADDR_TYPE_STREET OR ( t1.ADDR_TYPE_STREET IS NULL AND t2.ADDR_TYPE_STREET IS NOT NULL) OR (t1.ADDR_TYPE_STREET IS NOT NULL AND t2.ADDR_TYPE_STREET IS NULL)) OR (t1.ADDR_TYPE_PHONE <> t2.ADDR_TYPE_PHONE OR ( t1.ADDR_TYPE_PHONE IS NULL AND t2.ADDR_TYPE_PHONE IS NOT NULL) OR (t1.ADDR_TYPE_PHONE IS NOT NULL AND t2.ADDR_TYPE_PHONE IS NULL)) OR (t1.ADDR_TYPE_EMAIL <> t2.ADDR_TYPE_EMAIL OR ( t1.ADDR_TYPE_EMAIL IS NULL AND t2.ADDR_TYPE_EMAIL IS NOT NULL) OR (t1.ADDR_TYPE_EMAIL IS NOT NULL AND t2.ADDR_TYPE_EMAIL IS NULL)) OR (t1.CUST_TYPE_CD <> t2.CUST_TYPE_CD OR ( t1.CUST_TYPE_CD IS NULL AND t2.CUST_TYPE_CD IS NOT NULL) OR (t1.CUST_TYPE_CD IS NOT NULL AND t2.CUST_TYPE_CD IS NULL)) OR (t1.ORG_NAME <> t2.ORG_NAME OR ( t1.ORG_NAME IS NULL AND t2.ORG_NAME IS NOT NULL) OR (t1.ORG_NAME IS NOT NULL AND t2.ORG_NAME IS NULL)) OR (t1.FRST_NAME <> t2.FRST_NAME OR ( t1.FRST_NAME IS NULL AND t2.FRST_NAME IS NOT NULL) OR (t1.FRST_NAME IS NOT NULL AND t2.FRST_NAME IS NULL)) OR (t1.MDL_NAME <> t2.MDL_NAME OR ( t1.MDL_NAME IS NULL AND t2.MDL_NAME IS NOT NULL) OR (t1.MDL_NAME IS NOT NULL AND t2.MDL_NAME IS NULL)) OR (t1.LAST_NAME <> t2.LAST_NAME OR ( t1.LAST_NAME IS NULL AND t2.LAST_NAME IS NOT NULL) OR (t1.LAST_NAME IS NOT NULL AND t2.LAST_NAME IS NULL)) OR (t1.NAME_PRFX_TXT <> t2.NAME_PRFX_TXT OR ( t1.NAME_PRFX_TXT IS NULL AND t2.NAME_PRFX_TXT IS NOT NULL) OR (t1.NAME_PRFX_TXT IS NOT NULL AND t2.NAME_PRFX_TXT IS NULL)) OR (t1.NAME_SFX_TXT <> t2.NAME_SFX_TXT OR ( t1.NAME_SFX_TXT IS NULL AND t2.NAME_SFX_TXT IS NOT NULL) OR (t1.NAME_SFX_TXT IS NOT NULL AND t2.NAME_SFX_TXT IS NULL)) OR (t1.GNDR_type_CD <> t2.GNDR_type_CD OR ( t1.GNDR_type_CD IS NULL AND t2.GNDR_type_CD IS NOT NULL) OR (t1.GNDR_type_CD IS NOT NULL AND t2.GNDR_type_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_CUST_V', 'INSERT INTO NC_REF_CUST_V ( SCENARIO_ID,CUST_ID,GOLDEN_CUST_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_TYPE_STREET,ADDR_TYPE_PHONE,ADDR_TYPE_EMAIL,CUST_TYPE_CD,ORG_NAME,FRST_NAME,MDL_NAME,LAST_NAME,NAME_PRFX_TXT,NAME_SFX_TXT,GNDR_type_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CUST_ID,t1.GOLDEN_CUST_ID,t1.ADDR_ID,t1.ADDR_TYPE_CD,t1.ADDR_TYPE_STREET,t1.ADDR_TYPE_PHONE,t1.ADDR_TYPE_EMAIL,t1.CUST_TYPE_CD,t1.ORG_NAME,t1.FRST_NAME,t1.MDL_NAME,t1.LAST_NAME,t1.NAME_PRFX_TXT,t1.NAME_SFX_TXT,t1.GNDR_type_CD,''ACTIVATE'',''VALID'' FROM REF_CUST_V t1, REF_CUST_V t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.CUST_ID = t2.CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_ELEC_ADDR_V', 'INSERT INTO NC_REF_ELEC_ADDR_V ( SCENARIO_ID,ELEC_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ELEC_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,''INSERT'',''VALID'' FROM REF_ELEC_ADDR_V t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REF_ELEC_ADDR_V t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_ID = t2.ELEC_ADDR_ID AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.ADDR_ID = t2.ADDR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('REF_ELEC_ADDR_V', 'INSERT INTO NC_REF_ELEC_ADDR_V ( SCENARIO_ID,ELEC_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ELEC_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,''DELETE'',''VALID'' FROM REF_ELEC_ADDR_V t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM REF_ELEC_ADDR_V t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_ID = t2.ELEC_ADDR_ID AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.ADDR_ID = t2.ADDR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM REF_ELEC_ADDR_V t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_ID = t2.ELEC_ADDR_ID AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.ADDR_ID = t2.ADDR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_ELEC_ADDR_V', 'INSERT INTO NC_REF_ELEC_ADDR_V ( SCENARIO_ID,ELEC_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ELEC_ADDR_ID,t1.ADDR_ID,t1.ADDR_TYPE_CD,t1.ADDR_SUBTYPE_CD,t1.ELEC_ADDR_SBTYPE_CD,t1.DMN_ROOT_CD,t1.ELEC_ADDR_TXT,t1.ELEC_ADDR_DMN_NAME,''UPDATE'',''VALID'' FROM REF_ELEC_ADDR_V t1, REF_ELEC_ADDR_V t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_ID = t2.ELEC_ADDR_ID AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.ADDR_ID = t2.ADDR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ELEC_ADDR_ID <> t2.ELEC_ADDR_ID OR ( t1.ELEC_ADDR_ID IS NULL AND t2.ELEC_ADDR_ID IS NOT NULL) OR (t1.ELEC_ADDR_ID IS NOT NULL AND t2.ELEC_ADDR_ID IS NULL)) OR (t1.ADDR_ID <> t2.ADDR_ID OR ( t1.ADDR_ID IS NULL AND t2.ADDR_ID IS NOT NULL) OR (t1.ADDR_ID IS NOT NULL AND t2.ADDR_ID IS NULL)) OR (t1.ADDR_TYPE_CD <> t2.ADDR_TYPE_CD OR ( t1.ADDR_TYPE_CD IS NULL AND t2.ADDR_TYPE_CD IS NOT NULL) OR (t1.ADDR_TYPE_CD IS NOT NULL AND t2.ADDR_TYPE_CD IS NULL)) OR (t1.ADDR_SUBTYPE_CD <> t2.ADDR_SUBTYPE_CD OR ( t1.ADDR_SUBTYPE_CD IS NULL AND t2.ADDR_SUBTYPE_CD IS NOT NULL) OR (t1.ADDR_SUBTYPE_CD IS NOT NULL AND t2.ADDR_SUBTYPE_CD IS NULL)) OR (t1.ELEC_ADDR_SBTYPE_CD <> t2.ELEC_ADDR_SBTYPE_CD OR ( t1.ELEC_ADDR_SBTYPE_CD IS NULL AND t2.ELEC_ADDR_SBTYPE_CD IS NOT NULL) OR (t1.ELEC_ADDR_SBTYPE_CD IS NOT NULL AND t2.ELEC_ADDR_SBTYPE_CD IS NULL)) OR (t1.DMN_ROOT_CD <> t2.DMN_ROOT_CD OR ( t1.DMN_ROOT_CD IS NULL AND t2.DMN_ROOT_CD IS NOT NULL) OR (t1.DMN_ROOT_CD IS NOT NULL AND t2.DMN_ROOT_CD IS NULL)) OR (t1.ELEC_ADDR_TXT <> t2.ELEC_ADDR_TXT OR ( t1.ELEC_ADDR_TXT IS NULL AND t2.ELEC_ADDR_TXT IS NOT NULL) OR (t1.ELEC_ADDR_TXT IS NOT NULL AND t2.ELEC_ADDR_TXT IS NULL)) OR (t1.ELEC_ADDR_DMN_NAME <> t2.ELEC_ADDR_DMN_NAME OR ( t1.ELEC_ADDR_DMN_NAME IS NULL AND t2.ELEC_ADDR_DMN_NAME IS NOT NULL) OR (t1.ELEC_ADDR_DMN_NAME IS NOT NULL AND t2.ELEC_ADDR_DMN_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_ELEC_ADDR_V', 'INSERT INTO NC_REF_ELEC_ADDR_V ( SCENARIO_ID,ELEC_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ELEC_ADDR_SBTYPE_CD,DMN_ROOT_CD,ELEC_ADDR_TXT,ELEC_ADDR_DMN_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ELEC_ADDR_ID,t1.ADDR_ID,t1.ADDR_TYPE_CD,t1.ADDR_SUBTYPE_CD,t1.ELEC_ADDR_SBTYPE_CD,t1.DMN_ROOT_CD,t1.ELEC_ADDR_TXT,t1.ELEC_ADDR_DMN_NAME,''ACTIVATE'',''VALID'' FROM REF_ELEC_ADDR_V t1, REF_ELEC_ADDR_V t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ELEC_ADDR_ID = t2.ELEC_ADDR_ID AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.ADDR_ID = t2.ADDR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_STREET_ADDR_V', 'INSERT INTO NC_REF_STREET_ADDR_V ( SCENARIO_ID,STREET_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STREET_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,''INSERT'',''VALID'' FROM REF_STREET_ADDR_V t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REF_STREET_ADDR_V t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.STREET_ADDR_ID = t2.STREET_ADDR_ID AND t1.ADDR_ID = t2.ADDR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('REF_STREET_ADDR_V', 'INSERT INTO NC_REF_STREET_ADDR_V ( SCENARIO_ID,STREET_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STREET_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,''DELETE'',''VALID'' FROM REF_STREET_ADDR_V t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM REF_STREET_ADDR_V t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.STREET_ADDR_ID = t2.STREET_ADDR_ID AND t1.ADDR_ID = t2.ADDR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM REF_STREET_ADDR_V t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.STREET_ADDR_ID = t2.STREET_ADDR_ID AND t1.ADDR_ID = t2.ADDR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_STREET_ADDR_V', 'INSERT INTO NC_REF_STREET_ADDR_V ( SCENARIO_ID,STREET_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STREET_ADDR_ID,t1.ADDR_ID,t1.ADDR_TYPE_CD,t1.ADDR_SUBTYPE_CD,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.ADDR_LINE_4_TXT,t1.ST_OR_PROV_CD,t1.CITY_NAME,t1.COUNTY,t1.CNTRY_CD,t1.POSTL_CD,t1.LAT_MEAS,t1.LNGTD_MEAS,t1.GEO_ACRCY_CD,t1.ORG_CD,t1.BLDG_ID,t1.SUB_BLDG_ID,t1.PREMS_CD,t1.Thoroughfare_CD,''UPDATE'',''VALID'' FROM REF_STREET_ADDR_V t1, REF_STREET_ADDR_V t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.STREET_ADDR_ID = t2.STREET_ADDR_ID AND t1.ADDR_ID = t2.ADDR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.STREET_ADDR_ID <> t2.STREET_ADDR_ID OR ( t1.STREET_ADDR_ID IS NULL AND t2.STREET_ADDR_ID IS NOT NULL) OR (t1.STREET_ADDR_ID IS NOT NULL AND t2.STREET_ADDR_ID IS NULL)) OR (t1.ADDR_ID <> t2.ADDR_ID OR ( t1.ADDR_ID IS NULL AND t2.ADDR_ID IS NOT NULL) OR (t1.ADDR_ID IS NOT NULL AND t2.ADDR_ID IS NULL)) OR (t1.ADDR_TYPE_CD <> t2.ADDR_TYPE_CD OR ( t1.ADDR_TYPE_CD IS NULL AND t2.ADDR_TYPE_CD IS NOT NULL) OR (t1.ADDR_TYPE_CD IS NOT NULL AND t2.ADDR_TYPE_CD IS NULL)) OR (t1.ADDR_SUBTYPE_CD <> t2.ADDR_SUBTYPE_CD OR ( t1.ADDR_SUBTYPE_CD IS NULL AND t2.ADDR_SUBTYPE_CD IS NOT NULL) OR (t1.ADDR_SUBTYPE_CD IS NOT NULL AND t2.ADDR_SUBTYPE_CD IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.ADDR_LINE_4_TXT <> t2.ADDR_LINE_4_TXT OR ( t1.ADDR_LINE_4_TXT IS NULL AND t2.ADDR_LINE_4_TXT IS NOT NULL) OR (t1.ADDR_LINE_4_TXT IS NOT NULL AND t2.ADDR_LINE_4_TXT IS NULL)) OR (t1.ST_OR_PROV_CD <> t2.ST_OR_PROV_CD OR ( t1.ST_OR_PROV_CD IS NULL AND t2.ST_OR_PROV_CD IS NOT NULL) OR (t1.ST_OR_PROV_CD IS NOT NULL AND t2.ST_OR_PROV_CD IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.COUNTY <> t2.COUNTY OR ( t1.COUNTY IS NULL AND t2.COUNTY IS NOT NULL) OR (t1.COUNTY IS NOT NULL AND t2.COUNTY IS NULL)) OR (t1.CNTRY_CD <> t2.CNTRY_CD OR ( t1.CNTRY_CD IS NULL AND t2.CNTRY_CD IS NOT NULL) OR (t1.CNTRY_CD IS NOT NULL AND t2.CNTRY_CD IS NULL)) OR (t1.POSTL_CD <> t2.POSTL_CD OR ( t1.POSTL_CD IS NULL AND t2.POSTL_CD IS NOT NULL) OR (t1.POSTL_CD IS NOT NULL AND t2.POSTL_CD IS NULL)) OR (t1.LAT_MEAS <> t2.LAT_MEAS OR ( t1.LAT_MEAS IS NULL AND t2.LAT_MEAS IS NOT NULL) OR (t1.LAT_MEAS IS NOT NULL AND t2.LAT_MEAS IS NULL)) OR (t1.LNGTD_MEAS <> t2.LNGTD_MEAS OR ( t1.LNGTD_MEAS IS NULL AND t2.LNGTD_MEAS IS NOT NULL) OR (t1.LNGTD_MEAS IS NOT NULL AND t2.LNGTD_MEAS IS NULL)) OR (t1.GEO_ACRCY_CD <> t2.GEO_ACRCY_CD OR ( t1.GEO_ACRCY_CD IS NULL AND t2.GEO_ACRCY_CD IS NOT NULL) OR (t1.GEO_ACRCY_CD IS NOT NULL AND t2.GEO_ACRCY_CD IS NULL)) OR (t1.ORG_CD <> t2.ORG_CD OR ( t1.ORG_CD IS NULL AND t2.ORG_CD IS NOT NULL) OR (t1.ORG_CD IS NOT NULL AND t2.ORG_CD IS NULL)) OR (t1.BLDG_ID <> t2.BLDG_ID OR ( t1.BLDG_ID IS NULL AND t2.BLDG_ID IS NOT NULL) OR (t1.BLDG_ID IS NOT NULL AND t2.BLDG_ID IS NULL)) OR (t1.SUB_BLDG_ID <> t2.SUB_BLDG_ID OR ( t1.SUB_BLDG_ID IS NULL AND t2.SUB_BLDG_ID IS NOT NULL) OR (t1.SUB_BLDG_ID IS NOT NULL AND t2.SUB_BLDG_ID IS NULL)) OR (t1.PREMS_CD <> t2.PREMS_CD OR ( t1.PREMS_CD IS NULL AND t2.PREMS_CD IS NOT NULL) OR (t1.PREMS_CD IS NOT NULL AND t2.PREMS_CD IS NULL)) OR (t1.Thoroughfare_CD <> t2.Thoroughfare_CD OR ( t1.Thoroughfare_CD IS NULL AND t2.Thoroughfare_CD IS NOT NULL) OR (t1.Thoroughfare_CD IS NOT NULL AND t2.Thoroughfare_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_STREET_ADDR_V', 'INSERT INTO NC_REF_STREET_ADDR_V ( SCENARIO_ID,STREET_ADDR_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STREET_ADDR_ID,t1.ADDR_ID,t1.ADDR_TYPE_CD,t1.ADDR_SUBTYPE_CD,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.ADDR_LINE_4_TXT,t1.ST_OR_PROV_CD,t1.CITY_NAME,t1.COUNTY,t1.CNTRY_CD,t1.POSTL_CD,t1.LAT_MEAS,t1.LNGTD_MEAS,t1.GEO_ACRCY_CD,t1.ORG_CD,t1.BLDG_ID,t1.SUB_BLDG_ID,t1.PREMS_CD,t1.Thoroughfare_CD,''ACTIVATE'',''VALID'' FROM REF_STREET_ADDR_V t1, REF_STREET_ADDR_V t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.STREET_ADDR_ID = t2.STREET_ADDR_ID AND t1.ADDR_ID = t2.ADDR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_TEL_NUM_V', 'INSERT INTO NC_REF_TEL_NUM_V ( SCENARIO_ID,TEL_NUM_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TEL_NUM_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,''INSERT'',''VALID'' FROM REF_TEL_NUM_V t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM REF_TEL_NUM_V t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.TEL_NUM_ID = t2.TEL_NUM_ID AND t1.ADDR_ID = t2.ADDR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('REF_TEL_NUM_V', 'INSERT INTO NC_REF_TEL_NUM_V ( SCENARIO_ID,TEL_NUM_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TEL_NUM_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,''DELETE'',''VALID'' FROM REF_TEL_NUM_V t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM REF_TEL_NUM_V t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.TEL_NUM_ID = t2.TEL_NUM_ID AND t1.ADDR_ID = t2.ADDR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM REF_TEL_NUM_V t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.TEL_NUM_ID = t2.TEL_NUM_ID AND t1.ADDR_ID = t2.ADDR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_TEL_NUM_V', 'INSERT INTO NC_REF_TEL_NUM_V ( SCENARIO_ID,TEL_NUM_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TEL_NUM_ID,t1.ADDR_ID,t1.ADDR_TYPE_CD,t1.ADDR_SUBTYPE_CD,t1.TEL_CTRY_CD_NUM,t1.TEL_AREA_CD_NUM,t1.TEL_EXCH_NUM,t1.TEL_LINE_NUM,t1.TEL_EXTN_NUM,t1.TEL_E164_NUM,t1.TEL_SRC_NUM,t1.TEL_SUB_TYPE_CD,t1.SMS_CPBL_IND,''UPDATE'',''VALID'' FROM REF_TEL_NUM_V t1, REF_TEL_NUM_V t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.TEL_NUM_ID = t2.TEL_NUM_ID AND t1.ADDR_ID = t2.ADDR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TEL_NUM_ID <> t2.TEL_NUM_ID OR ( t1.TEL_NUM_ID IS NULL AND t2.TEL_NUM_ID IS NOT NULL) OR (t1.TEL_NUM_ID IS NOT NULL AND t2.TEL_NUM_ID IS NULL)) OR (t1.ADDR_ID <> t2.ADDR_ID OR ( t1.ADDR_ID IS NULL AND t2.ADDR_ID IS NOT NULL) OR (t1.ADDR_ID IS NOT NULL AND t2.ADDR_ID IS NULL)) OR (t1.ADDR_TYPE_CD <> t2.ADDR_TYPE_CD OR ( t1.ADDR_TYPE_CD IS NULL AND t2.ADDR_TYPE_CD IS NOT NULL) OR (t1.ADDR_TYPE_CD IS NOT NULL AND t2.ADDR_TYPE_CD IS NULL)) OR (t1.ADDR_SUBTYPE_CD <> t2.ADDR_SUBTYPE_CD OR ( t1.ADDR_SUBTYPE_CD IS NULL AND t2.ADDR_SUBTYPE_CD IS NOT NULL) OR (t1.ADDR_SUBTYPE_CD IS NOT NULL AND t2.ADDR_SUBTYPE_CD IS NULL)) OR (t1.TEL_CTRY_CD_NUM <> t2.TEL_CTRY_CD_NUM OR ( t1.TEL_CTRY_CD_NUM IS NULL AND t2.TEL_CTRY_CD_NUM IS NOT NULL) OR (t1.TEL_CTRY_CD_NUM IS NOT NULL AND t2.TEL_CTRY_CD_NUM IS NULL)) OR (t1.TEL_AREA_CD_NUM <> t2.TEL_AREA_CD_NUM OR ( t1.TEL_AREA_CD_NUM IS NULL AND t2.TEL_AREA_CD_NUM IS NOT NULL) OR (t1.TEL_AREA_CD_NUM IS NOT NULL AND t2.TEL_AREA_CD_NUM IS NULL)) OR (t1.TEL_EXCH_NUM <> t2.TEL_EXCH_NUM OR ( t1.TEL_EXCH_NUM IS NULL AND t2.TEL_EXCH_NUM IS NOT NULL) OR (t1.TEL_EXCH_NUM IS NOT NULL AND t2.TEL_EXCH_NUM IS NULL)) OR (t1.TEL_LINE_NUM <> t2.TEL_LINE_NUM OR ( t1.TEL_LINE_NUM IS NULL AND t2.TEL_LINE_NUM IS NOT NULL) OR (t1.TEL_LINE_NUM IS NOT NULL AND t2.TEL_LINE_NUM IS NULL)) OR (t1.TEL_EXTN_NUM <> t2.TEL_EXTN_NUM OR ( t1.TEL_EXTN_NUM IS NULL AND t2.TEL_EXTN_NUM IS NOT NULL) OR (t1.TEL_EXTN_NUM IS NOT NULL AND t2.TEL_EXTN_NUM IS NULL)) OR (t1.TEL_E164_NUM <> t2.TEL_E164_NUM OR ( t1.TEL_E164_NUM IS NULL AND t2.TEL_E164_NUM IS NOT NULL) OR (t1.TEL_E164_NUM IS NOT NULL AND t2.TEL_E164_NUM IS NULL)) OR (t1.TEL_SRC_NUM <> t2.TEL_SRC_NUM OR ( t1.TEL_SRC_NUM IS NULL AND t2.TEL_SRC_NUM IS NOT NULL) OR (t1.TEL_SRC_NUM IS NOT NULL AND t2.TEL_SRC_NUM IS NULL)) OR (t1.TEL_SUB_TYPE_CD <> t2.TEL_SUB_TYPE_CD OR ( t1.TEL_SUB_TYPE_CD IS NULL AND t2.TEL_SUB_TYPE_CD IS NOT NULL) OR (t1.TEL_SUB_TYPE_CD IS NOT NULL AND t2.TEL_SUB_TYPE_CD IS NULL)) OR (t1.SMS_CPBL_IND <> t2.SMS_CPBL_IND OR ( t1.SMS_CPBL_IND IS NULL AND t2.SMS_CPBL_IND IS NOT NULL) OR (t1.SMS_CPBL_IND IS NOT NULL AND t2.SMS_CPBL_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('REF_TEL_NUM_V', 'INSERT INTO NC_REF_TEL_NUM_V ( SCENARIO_ID,TEL_NUM_ID,ADDR_ID,ADDR_TYPE_CD,ADDR_SUBTYPE_CD,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TEL_NUM_ID,t1.ADDR_ID,t1.ADDR_TYPE_CD,t1.ADDR_SUBTYPE_CD,t1.TEL_CTRY_CD_NUM,t1.TEL_AREA_CD_NUM,t1.TEL_EXCH_NUM,t1.TEL_LINE_NUM,t1.TEL_EXTN_NUM,t1.TEL_E164_NUM,t1.TEL_SRC_NUM,t1.TEL_SUB_TYPE_CD,t1.SMS_CPBL_IND,''ACTIVATE'',''VALID'' FROM REF_TEL_NUM_V t1, REF_TEL_NUM_V t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ADDR_TYPE_CD = t2.ADDR_TYPE_CD AND t1.TEL_NUM_ID = t2.TEL_NUM_ID AND t1.ADDR_ID = t2.ADDR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_CODE', 'INSERT INTO NC_REFERENCE_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,IS_DEFAULT,SEQUENCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,IS_DEFAULT,SEQUENCE_ID,''INSERT'',''VALID'' FROM IN_REFERENCE_CODE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_CODE', 'INSERT INTO NC_REFERENCE_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,IS_DEFAULT,SEQUENCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,IS_DEFAULT,SEQUENCE_ID,''DELETE'',''VALID'' FROM MST_REFERENCE_CODE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_CODE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_CODE', 'INSERT INTO NC_REFERENCE_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,IS_DEFAULT,SEQUENCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,t1.IS_DEFAULT,t1.SEQUENCE_ID,''UPDATE'',''VALID'' FROM IN_REFERENCE_CODE t1, MST_REFERENCE_CODE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.VALUE_ID <> t2.VALUE_ID OR ( t1.VALUE_ID IS NULL AND t2.VALUE_ID IS NOT NULL) OR (t1.VALUE_ID IS NOT NULL AND t2.VALUE_ID IS NULL)) OR (t1.Parent_EDW_Code <> t2.Parent_EDW_Code OR ( t1.Parent_EDW_Code IS NULL AND t2.Parent_EDW_Code IS NOT NULL) OR (t1.Parent_EDW_Code IS NOT NULL AND t2.Parent_EDW_Code IS NULL)) OR (t1.Parent_Code_Set_Id <> t2.Parent_Code_Set_Id OR ( t1.Parent_Code_Set_Id IS NULL AND t2.Parent_Code_Set_Id IS NOT NULL) OR (t1.Parent_Code_Set_Id IS NOT NULL AND t2.Parent_Code_Set_Id IS NULL)) OR (t1.Parent_VALUE_ID <> t2.Parent_VALUE_ID OR ( t1.Parent_VALUE_ID IS NULL AND t2.Parent_VALUE_ID IS NOT NULL) OR (t1.Parent_VALUE_ID IS NOT NULL AND t2.Parent_VALUE_ID IS NULL)) OR (t1.Code_Name <> t2.Code_Name OR ( t1.Code_Name IS NULL AND t2.Code_Name IS NOT NULL) OR (t1.Code_Name IS NOT NULL AND t2.Code_Name IS NULL)) OR (t1.Parent_Code_Name <> t2.Parent_Code_Name OR ( t1.Parent_Code_Name IS NULL AND t2.Parent_Code_Name IS NOT NULL) OR (t1.Parent_Code_Name IS NOT NULL AND t2.Parent_Code_Name IS NULL)) OR (t1.Is_Default <> t2.Is_Default OR ( t1.Is_Default IS NULL AND t2.Is_Default IS NOT NULL) OR (t1.Is_Default IS NOT NULL AND t2.Is_Default IS NULL)) OR (t1.SEQUENCE_ID <> t2.SEQUENCE_ID OR ( t1.SEQUENCE_ID IS NULL AND t2.SEQUENCE_ID IS NOT NULL) OR (t1.SEQUENCE_ID IS NOT NULL AND t2.SEQUENCE_ID IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_CODE', 'INSERT INTO NC_REFERENCE_CODE ( SCENARIO_ID,EDW_Code,Code_Set_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,VALUE_ID,PARENT_EDW_CODE,PARENT_CODE_SET_ID,PARENT_VALUE_ID,CODE_NAME,PARENT_CODE_NAME,IS_DEFAULT,SEQUENCE_ID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.VALUE_ID,t1.PARENT_EDW_CODE,t1.PARENT_CODE_SET_ID,t1.PARENT_VALUE_ID,t1.CODE_NAME,t1.PARENT_CODE_NAME,t1.IS_DEFAULT,t1.SEQUENCE_ID,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_CODE t1, MST_REFERENCE_CODE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_DESCRIPTION', 'INSERT INTO NC_REFERENCE_DESCRIPTION ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_REFERENCE_DESCRIPTION t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REFERENCE_DESCRIPTION t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_DESCRIPTION', 'INSERT INTO NC_REFERENCE_DESCRIPTION ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_REFERENCE_DESCRIPTION t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REFERENCE_DESCRIPTION t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REFERENCE_DESCRIPTION t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_DESCRIPTION', 'INSERT INTO NC_REFERENCE_DESCRIPTION ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_REFERENCE_DESCRIPTION t1, MST_REFERENCE_DESCRIPTION t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REFERENCE_DESCRIPTION', 'INSERT INTO NC_REFERENCE_DESCRIPTION ( SCENARIO_ID,EDW_Code,Code_Set_Id,Language_Id,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.EDW_Code,t1.Code_Set_Id,t1.Language_Id,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_REFERENCE_DESCRIPTION t1, MST_REFERENCE_DESCRIPTION t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.EDW_Code = t2.EDW_Code AND t1.Language_Id = t2.Language_Id AND t1.Start_Date = t2.Start_Date AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_KEY_DESC', 'INSERT INTO NC_REL_OBJ_KEY_DESC ( SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,''INSERT'',''VALID'' FROM HM_IN_REL_OBJ_KEY_DESC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM HM_MST_REL_OBJ_KEY_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RokdId = t2.RokdId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_KEY_DESC', 'INSERT INTO NC_REL_OBJ_KEY_DESC ( SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,''DELETE'',''VALID'' FROM HM_MST_REL_OBJ_KEY_DESC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_IN_REL_OBJ_KEY_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RokdId = t2.RokdId ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_ERR_REL_OBJ_KEY_DESC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RokdId = t2.RokdId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_KEY_DESC', 'INSERT INTO NC_REL_OBJ_KEY_DESC ( SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROKD_ID,t1.ROKT_ID,t1.KEY_COL_LOG_NAME,t1.KEY_COL_PHY_NAME,t1.KEY_DATA_TYPE,t1.DATA_TYPE_LENGTH,t1.DATA_TYPE_PRECISION,t1.KEY_COL_SEQUENCE,''UPDATE'',''VALID'' FROM HM_IN_REL_OBJ_KEY_DESC t1, HM_MST_REL_OBJ_KEY_DESC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RokdId = t2.RokdId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RokdId <> t2.RokdId OR ( t1.RokdId IS NULL AND t2.RokdId IS NOT NULL) OR (t1.RokdId IS NOT NULL AND t2.RokdId IS NULL)) OR (t1.RoktId <> t2.RoktId OR ( t1.RoktId IS NULL AND t2.RoktId IS NOT NULL) OR (t1.RoktId IS NOT NULL AND t2.RoktId IS NULL)) OR (t1.KeyColumnLogicalName <> t2.KeyColumnLogicalName OR ( t1.KeyColumnLogicalName IS NULL AND t2.KeyColumnLogicalName IS NOT NULL) OR (t1.KeyColumnLogicalName IS NOT NULL AND t2.KeyColumnLogicalName IS NULL)) OR (t1.KeyColumnPhysicalName <> t2.KeyColumnPhysicalName OR ( t1.KeyColumnPhysicalName IS NULL AND t2.KeyColumnPhysicalName IS NOT NULL) OR (t1.KeyColumnPhysicalName IS NOT NULL AND t2.KeyColumnPhysicalName IS NULL)) OR (t1.KeyDataType <> t2.KeyDataType OR ( t1.KeyDataType IS NULL AND t2.KeyDataType IS NOT NULL) OR (t1.KeyDataType IS NOT NULL AND t2.KeyDataType IS NULL)) OR (t1.DataTypeLength <> t2.DataTypeLength OR ( t1.DataTypeLength IS NULL AND t2.DataTypeLength IS NOT NULL) OR (t1.DataTypeLength IS NOT NULL AND t2.DataTypeLength IS NULL)) OR (t1.DataTypePrecision <> t2.DataTypePrecision OR ( t1.DataTypePrecision IS NULL AND t2.DataTypePrecision IS NOT NULL) OR (t1.DataTypePrecision IS NOT NULL AND t2.DataTypePrecision IS NULL)) OR (t1.KeyColumnSequence <> t2.KeyColumnSequence OR ( t1.KeyColumnSequence IS NULL AND t2.KeyColumnSequence IS NOT NULL) OR (t1.KeyColumnSequence IS NOT NULL AND t2.KeyColumnSequence IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_KEY_DESC', 'INSERT INTO NC_REL_OBJ_KEY_DESC ( SCENARIO_ID,ROKD_ID,ROKT_ID,KEY_COL_LOG_NAME,KEY_COL_PHY_NAME,KEY_DATA_TYPE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,KEY_COL_SEQUENCE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROKD_ID,t1.ROKT_ID,t1.KEY_COL_LOG_NAME,t1.KEY_COL_PHY_NAME,t1.KEY_DATA_TYPE,t1.DATA_TYPE_LENGTH,t1.DATA_TYPE_PRECISION,t1.KEY_COL_SEQUENCE,''ACTIVATE'',''VALID'' FROM HM_IN_REL_OBJ_KEY_DESC t1, HM_MST_REL_OBJ_KEY_DESC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RokdId = t2.RokdId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_PROPERTIES', 'INSERT INTO NC_REL_OBJ_PROPERTIES ( SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,''INSERT'',''VALID'' FROM HM_IN_REL_OBJ_PROPERTIES t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM HM_MST_REL_OBJ_PROPERTIES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RopId = t2.RopId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_PROPERTIES', 'INSERT INTO NC_REL_OBJ_PROPERTIES ( SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,''DELETE'',''VALID'' FROM HM_MST_REL_OBJ_PROPERTIES t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_IN_REL_OBJ_PROPERTIES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RopId = t2.RopId ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_ERR_REL_OBJ_PROPERTIES t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RopId = t2.RopId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_PROPERTIES', 'INSERT INTO NC_REL_OBJ_PROPERTIES ( SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROP_ID,t1.ROM_ID,t1.NAME,t1.DISPLAY_NAME,t1.DATA_TYPE,t1.NULLABLE,t1.DATA_TYPE_LENGTH,t1.DATA_TYPE_PRECISION,t1.RODV_COL_NAME,t1.DEFAULT_VALUE,''UPDATE'',''VALID'' FROM HM_IN_REL_OBJ_PROPERTIES t1, HM_MST_REL_OBJ_PROPERTIES t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RopId = t2.RopId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RopId <> t2.RopId OR ( t1.RopId IS NULL AND t2.RopId IS NOT NULL) OR (t1.RopId IS NOT NULL AND t2.RopId IS NULL)) OR (t1.RomId <> t2.RomId OR ( t1.RomId IS NULL AND t2.RomId IS NOT NULL) OR (t1.RomId IS NOT NULL AND t2.RomId IS NULL)) OR (t1.Name <> t2.Name OR ( t1.Name IS NULL AND t2.Name IS NOT NULL) OR (t1.Name IS NOT NULL AND t2.Name IS NULL)) OR (t1.DisplayName <> t2.DisplayName OR ( t1.DisplayName IS NULL AND t2.DisplayName IS NOT NULL) OR (t1.DisplayName IS NOT NULL AND t2.DisplayName IS NULL)) OR (t1.DataType <> t2.DataType OR ( t1.DataType IS NULL AND t2.DataType IS NOT NULL) OR (t1.DataType IS NOT NULL AND t2.DataType IS NULL)) OR (t1.Nullable <> t2.Nullable OR ( t1.Nullable IS NULL AND t2.Nullable IS NOT NULL) OR (t1.Nullable IS NOT NULL AND t2.Nullable IS NULL)) OR (t1.DataTypeLength <> t2.DataTypeLength OR ( t1.DataTypeLength IS NULL AND t2.DataTypeLength IS NOT NULL) OR (t1.DataTypeLength IS NOT NULL AND t2.DataTypeLength IS NULL)) OR (t1.DataTypePrecision <> t2.DataTypePrecision OR ( t1.DataTypePrecision IS NULL AND t2.DataTypePrecision IS NOT NULL) OR (t1.DataTypePrecision IS NOT NULL AND t2.DataTypePrecision IS NULL)) OR (t1.RelObjDataValColName <> t2.RelObjDataValColName OR ( t1.RelObjDataValColName IS NULL AND t2.RelObjDataValColName IS NOT NULL) OR (t1.RelObjDataValColName IS NOT NULL AND t2.RelObjDataValColName IS NULL)) OR (t1.DefaultValue <> t2.DefaultValue OR ( t1.DefaultValue IS NULL AND t2.DefaultValue IS NOT NULL) OR (t1.DefaultValue IS NOT NULL AND t2.DefaultValue IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_PROPERTIES', 'INSERT INTO NC_REL_OBJ_PROPERTIES ( SCENARIO_ID,ROP_ID,ROM_ID,NAME,DISPLAY_NAME,DATA_TYPE,NULLABLE,DATA_TYPE_LENGTH,DATA_TYPE_PRECISION,RODV_COL_NAME,DEFAULT_VALUE,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROP_ID,t1.ROM_ID,t1.NAME,t1.DISPLAY_NAME,t1.DATA_TYPE,t1.NULLABLE,t1.DATA_TYPE_LENGTH,t1.DATA_TYPE_PRECISION,t1.RODV_COL_NAME,t1.DEFAULT_VALUE,''ACTIVATE'',''VALID'' FROM HM_IN_REL_OBJ_PROPERTIES t1, HM_MST_REL_OBJ_PROPERTIES t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RopId = t2.RopId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_RELATIONAL_OBJECT', 'INSERT INTO NC_RELATIONAL_OBJECT ( SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,DISPLAY_ICON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,DISPLAY_ICON,''INSERT'',''VALID'' FROM HM_IN_RELATIONAL_OBJECT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM HM_MST_RELATIONAL_OBJECT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoId = t2.RoId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_RELATIONAL_OBJECT', 'INSERT INTO NC_RELATIONAL_OBJECT ( SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,DISPLAY_ICON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,DISPLAY_ICON,''DELETE'',''VALID'' FROM HM_MST_RELATIONAL_OBJECT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_IN_RELATIONAL_OBJECT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoId = t2.RoId ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_ERR_RELATIONAL_OBJECT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoId = t2.RoId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_RELATIONAL_OBJECT', 'INSERT INTO NC_RELATIONAL_OBJECT ( SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,DISPLAY_ICON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RO_ID,t1.MST_TBL_LOG_NAME,t1.MST_TBL_PHY_NAME,t1.NAME,t1.DESCRIPTION,t1.MST_VIEW_NAME,t1.DISPLAY_NAME,t1.MASTER_DATA_URL,t1.URL_PARAMETER,t1.SORT_COLUMNS_NAME,t1.DISPLAY_COLUMNS_NAME_LOG,t1.SORT_COLUMNS_NAME_LOG,t1.DISPLAY_COL_LOG_HOVER,t1.VER_DISPLAY_NAME,t1.VER_SORT_COLUMNS_NAME,t1.VER_MASTER_DATA_URL,t1.VER_TBL_PHY_NAME,t1.VER_VIEW_NAME,t1.VER_TBL_LOG_NAME,t1.VER_DISPLAY_COL_LOG_HOVER,t1.IS_NON_MDM,t1.IS_TEMPORAL,t1.TOOLTIP_COLUMN_LOG_NAME,t1.TOOLTIP_COLUMNS,t1.VER_TOOLTIP_COLUMNS,t1.TOOLTIP_DISPLAY_NAME,t1.VER_TOOLTIP_DISPLAY_NAME,t1.DISPLAY_ICON,''UPDATE'',''VALID'' FROM HM_IN_RELATIONAL_OBJECT t1, HM_MST_RELATIONAL_OBJECT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoId = t2.RoId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RoId <> t2.RoId OR ( t1.RoId IS NULL AND t2.RoId IS NOT NULL) OR (t1.RoId IS NOT NULL AND t2.RoId IS NULL)) OR (t1.LogicalTableName <> t2.LogicalTableName OR ( t1.LogicalTableName IS NULL AND t2.LogicalTableName IS NOT NULL) OR (t1.LogicalTableName IS NOT NULL AND t2.LogicalTableName IS NULL)) OR (t1.PhysicalTableName <> t2.PhysicalTableName OR ( t1.PhysicalTableName IS NULL AND t2.PhysicalTableName IS NOT NULL) OR (t1.PhysicalTableName IS NOT NULL AND t2.PhysicalTableName IS NULL)) OR (t1.ObjectName <> t2.ObjectName OR ( t1.ObjectName IS NULL AND t2.ObjectName IS NOT NULL) OR (t1.ObjectName IS NOT NULL AND t2.ObjectName IS NULL)) OR (t1.ObjectDescription <> t2.ObjectDescription OR ( t1.ObjectDescription IS NULL AND t2.ObjectDescription IS NOT NULL) OR (t1.ObjectDescription IS NOT NULL AND t2.ObjectDescription IS NULL)) OR (t1.PhysicalViewName <> t2.PhysicalViewName OR ( t1.PhysicalViewName IS NULL AND t2.PhysicalViewName IS NOT NULL) OR (t1.PhysicalViewName IS NOT NULL AND t2.PhysicalViewName IS NULL)) OR (t1.DisplayColumnNames <> t2.DisplayColumnNames OR ( t1.DisplayColumnNames IS NULL AND t2.DisplayColumnNames IS NOT NULL) OR (t1.DisplayColumnNames IS NOT NULL AND t2.DisplayColumnNames IS NULL)) OR (t1.Url <> t2.Url OR ( t1.Url IS NULL AND t2.Url IS NOT NULL) OR (t1.Url IS NOT NULL AND t2.Url IS NULL)) OR (t1.UrlParam <> t2.UrlParam OR ( t1.UrlParam IS NULL AND t2.UrlParam IS NOT NULL) OR (t1.UrlParam IS NOT NULL AND t2.UrlParam IS NULL)) OR (t1.SortColumnNames <> t2.SortColumnNames OR ( t1.SortColumnNames IS NULL AND t2.SortColumnNames IS NOT NULL) OR (t1.SortColumnNames IS NOT NULL AND t2.SortColumnNames IS NULL)) OR (t1.DisplayColumnLogicalNames <> t2.DisplayColumnLogicalNames OR ( t1.DisplayColumnLogicalNames IS NULL AND t2.DisplayColumnLogicalNames IS NOT NULL) OR (t1.DisplayColumnLogicalNames IS NOT NULL AND t2.DisplayColumnLogicalNames IS NULL)) OR (t1.SortColumnLogicalNames <> t2.SortColumnLogicalNames OR ( t1.SortColumnLogicalNames IS NULL AND t2.SortColumnLogicalNames IS NOT NULL) OR (t1.SortColumnLogicalNames IS NOT NULL AND t2.SortColumnLogicalNames IS NULL)) OR (t1.DisplayColumnLogicalHover <> t2.DisplayColumnLogicalHover OR ( t1.DisplayColumnLogicalHover IS NULL AND t2.DisplayColumnLogicalHover IS NOT NULL) OR (t1.DisplayColumnLogicalHover IS NOT NULL AND t2.DisplayColumnLogicalHover IS NULL)) OR (t1.DisplayColumnsVersion <> t2.DisplayColumnsVersion OR ( t1.DisplayColumnsVersion IS NULL AND t2.DisplayColumnsVersion IS NOT NULL) OR (t1.DisplayColumnsVersion IS NOT NULL AND t2.DisplayColumnsVersion IS NULL)) OR (t1.SortColumnVersion <> t2.SortColumnVersion OR ( t1.SortColumnVersion IS NULL AND t2.SortColumnVersion IS NOT NULL) OR (t1.SortColumnVersion IS NOT NULL AND t2.SortColumnVersion IS NULL)) OR (t1.MasterDataURLVersion <> t2.MasterDataURLVersion OR ( t1.MasterDataURLVersion IS NULL AND t2.MasterDataURLVersion IS NOT NULL) OR (t1.MasterDataURLVersion IS NOT NULL AND t2.MasterDataURLVersion IS NULL)) OR (t1.PhysicalTableNameVersion <> t2.PhysicalTableNameVersion OR ( t1.PhysicalTableNameVersion IS NULL AND t2.PhysicalTableNameVersion IS NOT NULL) OR (t1.PhysicalTableNameVersion IS NOT NULL AND t2.PhysicalTableNameVersion IS NULL)) OR (t1.PhysicalViewNameVersion <> t2.PhysicalViewNameVersion OR ( t1.PhysicalViewNameVersion IS NULL AND t2.PhysicalViewNameVersion IS NOT NULL) OR (t1.PhysicalViewNameVersion IS NOT NULL AND t2.PhysicalViewNameVersion IS NULL)) OR (t1.LogicalTableNameVersion <> t2.LogicalTableNameVersion OR ( t1.LogicalTableNameVersion IS NULL AND t2.LogicalTableNameVersion IS NOT NULL) OR (t1.LogicalTableNameVersion IS NOT NULL AND t2.LogicalTableNameVersion IS NULL)) OR (t1.DisplayColLogHoverVersion <> t2.DisplayColLogHoverVersion OR ( t1.DisplayColLogHoverVersion IS NULL AND t2.DisplayColLogHoverVersion IS NOT NULL) OR (t1.DisplayColLogHoverVersion IS NOT NULL AND t2.DisplayColLogHoverVersion IS NULL)) OR (t1.IsNonMdm <> t2.IsNonMdm OR ( t1.IsNonMdm IS NULL AND t2.IsNonMdm IS NOT NULL) OR (t1.IsNonMdm IS NOT NULL AND t2.IsNonMdm IS NULL)) OR (t1.IsTemporal <> t2.IsTemporal OR ( t1.IsTemporal IS NULL AND t2.IsTemporal IS NOT NULL) OR (t1.IsTemporal IS NOT NULL AND t2.IsTemporal IS NULL)) OR (t1.TooltipLogicalColumnNames <> t2.TooltipLogicalColumnNames OR ( t1.TooltipLogicalColumnNames IS NULL AND t2.TooltipLogicalColumnNames IS NOT NULL) OR (t1.TooltipLogicalColumnNames IS NOT NULL AND t2.TooltipLogicalColumnNames IS NULL)) OR (t1.TooltipColumns <> t2.TooltipColumns OR ( t1.TooltipColumns IS NULL AND t2.TooltipColumns IS NOT NULL) OR (t1.TooltipColumns IS NOT NULL AND t2.TooltipColumns IS NULL)) OR (t1.TooltipVersionColumns <> t2.TooltipVersionColumns OR ( t1.TooltipVersionColumns IS NULL AND t2.TooltipVersionColumns IS NOT NULL) OR (t1.TooltipVersionColumns IS NOT NULL AND t2.TooltipVersionColumns IS NULL)) OR (t1.TooltipDisplayName <> t2.TooltipDisplayName OR ( t1.TooltipDisplayName IS NULL AND t2.TooltipDisplayName IS NOT NULL) OR (t1.TooltipDisplayName IS NOT NULL AND t2.TooltipDisplayName IS NULL)) OR (t1.TooltipDisplayNameVersion <> t2.TooltipDisplayNameVersion OR ( t1.TooltipDisplayNameVersion IS NULL AND t2.TooltipDisplayNameVersion IS NOT NULL) OR (t1.TooltipDisplayNameVersion IS NOT NULL AND t2.TooltipDisplayNameVersion IS NULL)) OR (t1.DisplayIcon <> t2.DisplayIcon OR ( t1.DisplayIcon IS NULL AND t2.DisplayIcon IS NOT NULL) OR (t1.DisplayIcon IS NOT NULL AND t2.DisplayIcon IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_RELATIONAL_OBJECT', 'INSERT INTO NC_RELATIONAL_OBJECT ( SCENARIO_ID,RO_ID,MST_TBL_LOG_NAME,MST_TBL_PHY_NAME,NAME,DESCRIPTION,MST_VIEW_NAME,DISPLAY_NAME,MASTER_DATA_URL,URL_PARAMETER,SORT_COLUMNS_NAME,DISPLAY_COLUMNS_NAME_LOG,SORT_COLUMNS_NAME_LOG,DISPLAY_COL_LOG_HOVER,VER_DISPLAY_NAME,VER_SORT_COLUMNS_NAME,VER_MASTER_DATA_URL,VER_TBL_PHY_NAME,VER_VIEW_NAME,VER_TBL_LOG_NAME,VER_DISPLAY_COL_LOG_HOVER,IS_NON_MDM,IS_TEMPORAL,TOOLTIP_COLUMN_LOG_NAME,TOOLTIP_COLUMNS,VER_TOOLTIP_COLUMNS,TOOLTIP_DISPLAY_NAME,VER_TOOLTIP_DISPLAY_NAME,DISPLAY_ICON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RO_ID,t1.MST_TBL_LOG_NAME,t1.MST_TBL_PHY_NAME,t1.NAME,t1.DESCRIPTION,t1.MST_VIEW_NAME,t1.DISPLAY_NAME,t1.MASTER_DATA_URL,t1.URL_PARAMETER,t1.SORT_COLUMNS_NAME,t1.DISPLAY_COLUMNS_NAME_LOG,t1.SORT_COLUMNS_NAME_LOG,t1.DISPLAY_COL_LOG_HOVER,t1.VER_DISPLAY_NAME,t1.VER_SORT_COLUMNS_NAME,t1.VER_MASTER_DATA_URL,t1.VER_TBL_PHY_NAME,t1.VER_VIEW_NAME,t1.VER_TBL_LOG_NAME,t1.VER_DISPLAY_COL_LOG_HOVER,t1.IS_NON_MDM,t1.IS_TEMPORAL,t1.TOOLTIP_COLUMN_LOG_NAME,t1.TOOLTIP_COLUMNS,t1.VER_TOOLTIP_COLUMNS,t1.TOOLTIP_DISPLAY_NAME,t1.VER_TOOLTIP_DISPLAY_NAME,t1.DISPLAY_ICON,''ACTIVATE'',''VALID'' FROM HM_IN_RELATIONAL_OBJECT t1, HM_MST_RELATIONAL_OBJECT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoId = t2.RoId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_DATA_VAL', 'INSERT INTO NC_REL_CLM_OBJ_DATA_VAL ( SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,''INSERT'',''VALID'' FROM IN_REL_CLM_OBJ_DATA_VAL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REL_CLM_OBJ_DATA_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRodvId = t2.ColumnRodvId AND t1.Xref_uuid = t2.Xref_uuid )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_DATA_VAL', 'INSERT INTO NC_REL_CLM_OBJ_DATA_VAL ( SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,''DELETE'',''VALID'' FROM MST_REL_CLM_OBJ_DATA_VAL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REL_CLM_OBJ_DATA_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRodvId = t2.ColumnRodvId AND t1.Xref_uuid = t2.Xref_uuid ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REL_CLM_OBJ_DATA_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRodvId = t2.ColumnRodvId AND t1.Xref_uuid = t2.Xref_uuid));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_DATA_VAL', 'INSERT INTO NC_REL_CLM_OBJ_DATA_VAL ( SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CLM_RODV_ID,t1.CLM_ROM_ID,t1.PARENT_ROKD_VAL1,t1.PARENT_ROKD_VAL2,t1.PARENT_ROKD_VAL3,t1.PARENT_ROKD_VAL4,t1.PARENT_ROKD_VAL5,t1.PARENT_ROKD_VAL6,t1.PARENT_ROKD_VAL7,t1.PARENT_ROKD_VAL8,t1.PARENT_ROKD_VAL9,t1.PARENT_ROKD_VAL10,t1.CHILD_ROKD_VAL1,t1.CHILD_ROKD_VAL2,t1.CHILD_ROKD_VAL3,t1.CHILD_ROKD_VAL4,t1.CHILD_ROKD_VAL5,t1.CHILD_ROKD_VAL6,t1.CHILD_ROKD_VAL7,t1.CHILD_ROKD_VAL8,t1.CHILD_ROKD_VAL9,t1.CHILD_ROKD_VAL10,t1.CHILD_VALUE,t1.WORKFLOW_NAME,t1.WORKFLOW_INSTANCE_ID,t1.START_DATE,t1.END_DATE,t1.APPROVED_BY,t1.null,t1.STATUS,t1.APPROVED_DATE,t1.XREF_UUID,''UPDATE'',''VALID'' FROM IN_REL_CLM_OBJ_DATA_VAL t1, MST_REL_CLM_OBJ_DATA_VAL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRodvId = t2.ColumnRodvId AND t1.Xref_uuid = t2.Xref_uuid AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ColumnRodvId <> t2.ColumnRodvId OR ( t1.ColumnRodvId IS NULL AND t2.ColumnRodvId IS NOT NULL) OR (t1.ColumnRodvId IS NOT NULL AND t2.ColumnRodvId IS NULL)) OR (t1.ColumnRomId <> t2.ColumnRomId OR ( t1.ColumnRomId IS NULL AND t2.ColumnRomId IS NOT NULL) OR (t1.ColumnRomId IS NOT NULL AND t2.ColumnRomId IS NULL)) OR (t1.ParentRokdVal1 <> t2.ParentRokdVal1 OR ( t1.ParentRokdVal1 IS NULL AND t2.ParentRokdVal1 IS NOT NULL) OR (t1.ParentRokdVal1 IS NOT NULL AND t2.ParentRokdVal1 IS NULL)) OR (t1.ParentRokdVal2 <> t2.ParentRokdVal2 OR ( t1.ParentRokdVal2 IS NULL AND t2.ParentRokdVal2 IS NOT NULL) OR (t1.ParentRokdVal2 IS NOT NULL AND t2.ParentRokdVal2 IS NULL)) OR (t1.ParentRokdVal3 <> t2.ParentRokdVal3 OR ( t1.ParentRokdVal3 IS NULL AND t2.ParentRokdVal3 IS NOT NULL) OR (t1.ParentRokdVal3 IS NOT NULL AND t2.ParentRokdVal3 IS NULL)) OR (t1.ParentRokdVal4 <> t2.ParentRokdVal4 OR ( t1.ParentRokdVal4 IS NULL AND t2.ParentRokdVal4 IS NOT NULL) OR (t1.ParentRokdVal4 IS NOT NULL AND t2.ParentRokdVal4 IS NULL)) OR (t1.ParentRokdVal5 <> t2.ParentRokdVal5 OR ( t1.ParentRokdVal5 IS NULL AND t2.ParentRokdVal5 IS NOT NULL) OR (t1.ParentRokdVal5 IS NOT NULL AND t2.ParentRokdVal5 IS NULL)) OR (t1.ParentRokdVal6 <> t2.ParentRokdVal6 OR ( t1.ParentRokdVal6 IS NULL AND t2.ParentRokdVal6 IS NOT NULL) OR (t1.ParentRokdVal6 IS NOT NULL AND t2.ParentRokdVal6 IS NULL)) OR (t1.ParentRokdVal7 <> t2.ParentRokdVal7 OR ( t1.ParentRokdVal7 IS NULL AND t2.ParentRokdVal7 IS NOT NULL) OR (t1.ParentRokdVal7 IS NOT NULL AND t2.ParentRokdVal7 IS NULL)) OR (t1.ParentRokdVal8 <> t2.ParentRokdVal8 OR ( t1.ParentRokdVal8 IS NULL AND t2.ParentRokdVal8 IS NOT NULL) OR (t1.ParentRokdVal8 IS NOT NULL AND t2.ParentRokdVal8 IS NULL)) OR (t1.ParentRokdVal9 <> t2.ParentRokdVal9 OR ( t1.ParentRokdVal9 IS NULL AND t2.ParentRokdVal9 IS NOT NULL) OR (t1.ParentRokdVal9 IS NOT NULL AND t2.ParentRokdVal9 IS NULL)) OR (t1.ParentRokdVal10 <> t2.ParentRokdVal10 OR ( t1.ParentRokdVal10 IS NULL AND t2.ParentRokdVal10 IS NOT NULL) OR (t1.ParentRokdVal10 IS NOT NULL AND t2.ParentRokdVal10 IS NULL)) OR (t1.ChildRokdVal1 <> t2.ChildRokdVal1 OR ( t1.ChildRokdVal1 IS NULL AND t2.ChildRokdVal1 IS NOT NULL) OR (t1.ChildRokdVal1 IS NOT NULL AND t2.ChildRokdVal1 IS NULL)) OR (t1.ChildRokdVal2 <> t2.ChildRokdVal2 OR ( t1.ChildRokdVal2 IS NULL AND t2.ChildRokdVal2 IS NOT NULL) OR (t1.ChildRokdVal2 IS NOT NULL AND t2.ChildRokdVal2 IS NULL)) OR (t1.ChildRokdVal3 <> t2.ChildRokdVal3 OR ( t1.ChildRokdVal3 IS NULL AND t2.ChildRokdVal3 IS NOT NULL) OR (t1.ChildRokdVal3 IS NOT NULL AND t2.ChildRokdVal3 IS NULL)) OR (t1.ChildRokdVal4 <> t2.ChildRokdVal4 OR ( t1.ChildRokdVal4 IS NULL AND t2.ChildRokdVal4 IS NOT NULL) OR (t1.ChildRokdVal4 IS NOT NULL AND t2.ChildRokdVal4 IS NULL)) OR (t1.ChildRokdVal5 <> t2.ChildRokdVal5 OR ( t1.ChildRokdVal5 IS NULL AND t2.ChildRokdVal5 IS NOT NULL) OR (t1.ChildRokdVal5 IS NOT NULL AND t2.ChildRokdVal5 IS NULL)) OR (t1.ChildRokdVal6 <> t2.ChildRokdVal6 OR ( t1.ChildRokdVal6 IS NULL AND t2.ChildRokdVal6 IS NOT NULL) OR (t1.ChildRokdVal6 IS NOT NULL AND t2.ChildRokdVal6 IS NULL)) OR (t1.ChildRokdVal7 <> t2.ChildRokdVal7 OR ( t1.ChildRokdVal7 IS NULL AND t2.ChildRokdVal7 IS NOT NULL) OR (t1.ChildRokdVal7 IS NOT NULL AND t2.ChildRokdVal7 IS NULL)) OR (t1.ChildRokdVal8 <> t2.ChildRokdVal8 OR ( t1.ChildRokdVal8 IS NULL AND t2.ChildRokdVal8 IS NOT NULL) OR (t1.ChildRokdVal8 IS NOT NULL AND t2.ChildRokdVal8 IS NULL)) OR (t1.ChildRokdVal9 <> t2.ChildRokdVal9 OR ( t1.ChildRokdVal9 IS NULL AND t2.ChildRokdVal9 IS NOT NULL) OR (t1.ChildRokdVal9 IS NOT NULL AND t2.ChildRokdVal9 IS NULL)) OR (t1.ChildRokdVal10 <> t2.ChildRokdVal10 OR ( t1.ChildRokdVal10 IS NULL AND t2.ChildRokdVal10 IS NOT NULL) OR (t1.ChildRokdVal10 IS NOT NULL AND t2.ChildRokdVal10 IS NULL)) OR (t1.ChildValue <> t2.ChildValue OR ( t1.ChildValue IS NULL AND t2.ChildValue IS NOT NULL) OR (t1.ChildValue IS NOT NULL AND t2.ChildValue IS NULL)) OR (t1.WorkflowName <> t2.WorkflowName OR ( t1.WorkflowName IS NULL AND t2.WorkflowName IS NOT NULL) OR (t1.WorkflowName IS NOT NULL AND t2.WorkflowName IS NULL)) OR (t1.WorkflowInstanceId <> t2.WorkflowInstanceId OR ( t1.WorkflowInstanceId IS NULL AND t2.WorkflowInstanceId IS NOT NULL) OR (t1.WorkflowInstanceId IS NOT NULL AND t2.WorkflowInstanceId IS NULL)) OR (t1.StartDate <> t2.StartDate OR ( t1.StartDate IS NULL AND t2.StartDate IS NOT NULL) OR (t1.StartDate IS NOT NULL AND t2.StartDate IS NULL)) OR (t1.EndDate <> t2.EndDate OR ( t1.EndDate IS NULL AND t2.EndDate IS NOT NULL) OR (t1.EndDate IS NOT NULL AND t2.EndDate IS NULL)) OR (t1.ApprovedBy <> t2.ApprovedBy OR ( t1.ApprovedBy IS NULL AND t2.ApprovedBy IS NOT NULL) OR (t1.ApprovedBy IS NOT NULL AND t2.ApprovedBy IS NULL)) OR (t1.Comments <> t2.Comments OR ( t1.Comments IS NULL AND t2.Comments IS NOT NULL) OR (t1.Comments IS NOT NULL AND t2.Comments IS NULL)) OR (t1.Status <> t2.Status OR ( t1.Status IS NULL AND t2.Status IS NOT NULL) OR (t1.Status IS NOT NULL AND t2.Status IS NULL)) OR (t1.ApprovedDate <> t2.ApprovedDate OR ( t1.ApprovedDate IS NULL AND t2.ApprovedDate IS NOT NULL) OR (t1.ApprovedDate IS NOT NULL AND t2.ApprovedDate IS NULL)) OR (t1.Xref_uuid <> t2.Xref_uuid OR ( t1.Xref_uuid IS NULL AND t2.Xref_uuid IS NOT NULL) OR (t1.Xref_uuid IS NOT NULL AND t2.Xref_uuid IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_DATA_VAL', 'INSERT INTO NC_REL_CLM_OBJ_DATA_VAL ( SCENARIO_ID,CLM_RODV_ID,CLM_ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,CHILD_VALUE,WORKFLOW_NAME,WORKFLOW_INSTANCE_ID,START_DATE,END_DATE,APPROVED_BY,null,STATUS,APPROVED_DATE,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CLM_RODV_ID,t1.CLM_ROM_ID,t1.PARENT_ROKD_VAL1,t1.PARENT_ROKD_VAL2,t1.PARENT_ROKD_VAL3,t1.PARENT_ROKD_VAL4,t1.PARENT_ROKD_VAL5,t1.PARENT_ROKD_VAL6,t1.PARENT_ROKD_VAL7,t1.PARENT_ROKD_VAL8,t1.PARENT_ROKD_VAL9,t1.PARENT_ROKD_VAL10,t1.CHILD_ROKD_VAL1,t1.CHILD_ROKD_VAL2,t1.CHILD_ROKD_VAL3,t1.CHILD_ROKD_VAL4,t1.CHILD_ROKD_VAL5,t1.CHILD_ROKD_VAL6,t1.CHILD_ROKD_VAL7,t1.CHILD_ROKD_VAL8,t1.CHILD_ROKD_VAL9,t1.CHILD_ROKD_VAL10,t1.CHILD_VALUE,t1.WORKFLOW_NAME,t1.WORKFLOW_INSTANCE_ID,t1.START_DATE,t1.END_DATE,t1.APPROVED_BY,t1.null,t1.STATUS,t1.APPROVED_DATE,t1.XREF_UUID,''ACTIVATE'',''VALID'' FROM IN_REL_CLM_OBJ_DATA_VAL t1, MST_REL_CLM_OBJ_DATA_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRodvId = t2.ColumnRodvId AND t1.Xref_uuid = t2.Xref_uuid AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_MAP', 'INSERT INTO NC_REL_CLM_OBJ_MAP ( SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,''INSERT'',''VALID'' FROM IN_REL_CLM_OBJ_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_REL_CLM_OBJ_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRomId = t2.ColumnRomId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_MAP', 'INSERT INTO NC_REL_CLM_OBJ_MAP ( SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,''DELETE'',''VALID'' FROM MST_REL_CLM_OBJ_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_REL_CLM_OBJ_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRomId = t2.ColumnRomId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_REL_CLM_OBJ_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRomId = t2.ColumnRomId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_MAP', 'INSERT INTO NC_REL_CLM_OBJ_MAP ( SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CLM_ROM_ID,t1.CLM_REL_NAME,t1.CLM_REL_TYPE,t1.PARENT_RO_ID,t1.CHILD_RO_ID,t1.PARENT_ROKT_ID,t1.CHILD_ROKT_ID,t1.TGT_TBL_RO_ID,t1.MAPPING_ID,t1.TARGET_TABLE,t1.CROSS_REF_ROM_ID,t1.SOURCE_SERVICE,t1.SOURCE_DB,t1.SOURCE_TABLE,t1.TARGET_COLUMN,t1.TARGET_COLUMN_PHY,t1.ENABLE_PK_UPDT,t1.COLUMNSEQ,t1.SOURCE_COLUMN,t1.SOURCE_COLUMN_PHY,t1.ATTRB_DETAIL_ID,t1.ATTRB_TYPE,t1.EXT_COL_1,t1.EXT_COL_2,t1.PRIORITY_NO,t1.PRIORITY_START_TM,t1.PRIORITY_END_TM,t1.IS_ALCR_ENABLED,''UPDATE'',''VALID'' FROM IN_REL_CLM_OBJ_MAP t1, MST_REL_CLM_OBJ_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRomId = t2.ColumnRomId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.ColumnRomId <> t2.ColumnRomId OR ( t1.ColumnRomId IS NULL AND t2.ColumnRomId IS NOT NULL) OR (t1.ColumnRomId IS NOT NULL AND t2.ColumnRomId IS NULL)) OR (t1.ColumnRelationName <> t2.ColumnRelationName OR ( t1.ColumnRelationName IS NULL AND t2.ColumnRelationName IS NOT NULL) OR (t1.ColumnRelationName IS NOT NULL AND t2.ColumnRelationName IS NULL)) OR (t1.ColumnRelationType <> t2.ColumnRelationType OR ( t1.ColumnRelationType IS NULL AND t2.ColumnRelationType IS NOT NULL) OR (t1.ColumnRelationType IS NOT NULL AND t2.ColumnRelationType IS NULL)) OR (t1.ParentROId <> t2.ParentROId OR ( t1.ParentROId IS NULL AND t2.ParentROId IS NOT NULL) OR (t1.ParentROId IS NOT NULL AND t2.ParentROId IS NULL)) OR (t1.ChildROId <> t2.ChildROId OR ( t1.ChildROId IS NULL AND t2.ChildROId IS NOT NULL) OR (t1.ChildROId IS NOT NULL AND t2.ChildROId IS NULL)) OR (t1.ParentROKTId <> t2.ParentROKTId OR ( t1.ParentROKTId IS NULL AND t2.ParentROKTId IS NOT NULL) OR (t1.ParentROKTId IS NOT NULL AND t2.ParentROKTId IS NULL)) OR (t1.CHILD_ROKT_ID <> t2.CHILD_ROKT_ID OR ( t1.CHILD_ROKT_ID IS NULL AND t2.CHILD_ROKT_ID IS NOT NULL) OR (t1.CHILD_ROKT_ID IS NOT NULL AND t2.CHILD_ROKT_ID IS NULL)) OR (t1.TargetTableROId <> t2.TargetTableROId OR ( t1.TargetTableROId IS NULL AND t2.TargetTableROId IS NOT NULL) OR (t1.TargetTableROId IS NOT NULL AND t2.TargetTableROId IS NULL)) OR (t1.MappingId <> t2.MappingId OR ( t1.MappingId IS NULL AND t2.MappingId IS NOT NULL) OR (t1.MappingId IS NOT NULL AND t2.MappingId IS NULL)) OR (t1.TargetTable <> t2.TargetTable OR ( t1.TargetTable IS NULL AND t2.TargetTable IS NOT NULL) OR (t1.TargetTable IS NOT NULL AND t2.TargetTable IS NULL)) OR (t1.CrossRefRomId <> t2.CrossRefRomId OR ( t1.CrossRefRomId IS NULL AND t2.CrossRefRomId IS NOT NULL) OR (t1.CrossRefRomId IS NOT NULL AND t2.CrossRefRomId IS NULL)) OR (t1.SourceService <> t2.SourceService OR ( t1.SourceService IS NULL AND t2.SourceService IS NOT NULL) OR (t1.SourceService IS NOT NULL AND t2.SourceService IS NULL)) OR (t1.SourceDB <> t2.SourceDB OR ( t1.SourceDB IS NULL AND t2.SourceDB IS NOT NULL) OR (t1.SourceDB IS NOT NULL AND t2.SourceDB IS NULL)) OR (t1.Source_Table <> t2.Source_Table OR ( t1.Source_Table IS NULL AND t2.Source_Table IS NOT NULL) OR (t1.Source_Table IS NOT NULL AND t2.Source_Table IS NULL)) OR (t1.TargetColumn <> t2.TargetColumn OR ( t1.TargetColumn IS NULL AND t2.TargetColumn IS NOT NULL) OR (t1.TargetColumn IS NOT NULL AND t2.TargetColumn IS NULL)) OR (t1.TargetColumnPhysical <> t2.TargetColumnPhysical OR ( t1.TargetColumnPhysical IS NULL AND t2.TargetColumnPhysical IS NOT NULL) OR (t1.TargetColumnPhysical IS NOT NULL AND t2.TargetColumnPhysical IS NULL)) OR (t1.EnablePkUpdt <> t2.EnablePkUpdt OR ( t1.EnablePkUpdt IS NULL AND t2.EnablePkUpdt IS NOT NULL) OR (t1.EnablePkUpdt IS NOT NULL AND t2.EnablePkUpdt IS NULL)) OR (t1.ColumnSequence <> t2.ColumnSequence OR ( t1.ColumnSequence IS NULL AND t2.ColumnSequence IS NOT NULL) OR (t1.ColumnSequence IS NOT NULL AND t2.ColumnSequence IS NULL)) OR (t1.SourceColumn <> t2.SourceColumn OR ( t1.SourceColumn IS NULL AND t2.SourceColumn IS NOT NULL) OR (t1.SourceColumn IS NOT NULL AND t2.SourceColumn IS NULL)) OR (t1.SourceColumnPhysical <> t2.SourceColumnPhysical OR ( t1.SourceColumnPhysical IS NULL AND t2.SourceColumnPhysical IS NOT NULL) OR (t1.SourceColumnPhysical IS NOT NULL AND t2.SourceColumnPhysical IS NULL)) OR (t1.AttributeDetailId <> t2.AttributeDetailId OR ( t1.AttributeDetailId IS NULL AND t2.AttributeDetailId IS NOT NULL) OR (t1.AttributeDetailId IS NOT NULL AND t2.AttributeDetailId IS NULL)) OR (t1.AttributeType <> t2.AttributeType OR ( t1.AttributeType IS NULL AND t2.AttributeType IS NOT NULL) OR (t1.AttributeType IS NOT NULL AND t2.AttributeType IS NULL)) OR (t1.ExtCol1 <> t2.ExtCol1 OR ( t1.ExtCol1 IS NULL AND t2.ExtCol1 IS NOT NULL) OR (t1.ExtCol1 IS NOT NULL AND t2.ExtCol1 IS NULL)) OR (t1.EctCol2 <> t2.EctCol2 OR ( t1.EctCol2 IS NULL AND t2.EctCol2 IS NOT NULL) OR (t1.EctCol2 IS NOT NULL AND t2.EctCol2 IS NULL)) OR (t1.PriorityNo <> t2.PriorityNo OR ( t1.PriorityNo IS NULL AND t2.PriorityNo IS NOT NULL) OR (t1.PriorityNo IS NOT NULL AND t2.PriorityNo IS NULL)) OR (t1.PriorityStartTime <> t2.PriorityStartTime OR ( t1.PriorityStartTime IS NULL AND t2.PriorityStartTime IS NOT NULL) OR (t1.PriorityStartTime IS NOT NULL AND t2.PriorityStartTime IS NULL)) OR (t1.PriorityEndTime <> t2.PriorityEndTime OR ( t1.PriorityEndTime IS NULL AND t2.PriorityEndTime IS NOT NULL) OR (t1.PriorityEndTime IS NOT NULL AND t2.PriorityEndTime IS NULL)) OR (t1.IsALCREnabled <> t2.IsALCREnabled OR ( t1.IsALCREnabled IS NULL AND t2.IsALCREnabled IS NOT NULL) OR (t1.IsALCREnabled IS NOT NULL AND t2.IsALCREnabled IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_REL_CLM_OBJ_MAP', 'INSERT INTO NC_REL_CLM_OBJ_MAP ( SCENARIO_ID,CLM_ROM_ID,CLM_REL_NAME,CLM_REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAPPING_ID,TARGET_TABLE,CROSS_REF_ROM_ID,SOURCE_SERVICE,SOURCE_DB,SOURCE_TABLE,TARGET_COLUMN,TARGET_COLUMN_PHY,ENABLE_PK_UPDT,COLUMNSEQ,SOURCE_COLUMN,SOURCE_COLUMN_PHY,ATTRB_DETAIL_ID,ATTRB_TYPE,EXT_COL_1,EXT_COL_2,PRIORITY_NO,PRIORITY_START_TM,PRIORITY_END_TM,IS_ALCR_ENABLED,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.CLM_ROM_ID,t1.CLM_REL_NAME,t1.CLM_REL_TYPE,t1.PARENT_RO_ID,t1.CHILD_RO_ID,t1.PARENT_ROKT_ID,t1.CHILD_ROKT_ID,t1.TGT_TBL_RO_ID,t1.MAPPING_ID,t1.TARGET_TABLE,t1.CROSS_REF_ROM_ID,t1.SOURCE_SERVICE,t1.SOURCE_DB,t1.SOURCE_TABLE,t1.TARGET_COLUMN,t1.TARGET_COLUMN_PHY,t1.ENABLE_PK_UPDT,t1.COLUMNSEQ,t1.SOURCE_COLUMN,t1.SOURCE_COLUMN_PHY,t1.ATTRB_DETAIL_ID,t1.ATTRB_TYPE,t1.EXT_COL_1,t1.EXT_COL_2,t1.PRIORITY_NO,t1.PRIORITY_START_TM,t1.PRIORITY_END_TM,t1.IS_ALCR_ENABLED,''ACTIVATE'',''VALID'' FROM IN_REL_CLM_OBJ_MAP t1, MST_REL_CLM_OBJ_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ColumnRomId = t2.ColumnRomId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_DATA_VAL', 'INSERT INTO NC_REL_OBJ_DATA_VAL ( SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,''INSERT'',''VALID'' FROM HM_IN_REL_OBJ_DATA_VAL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM HM_MST_REL_OBJ_DATA_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RovId = t2.RovId AND t1.Xref_uuid = t2.Xref_uuid )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_DATA_VAL', 'INSERT INTO NC_REL_OBJ_DATA_VAL ( SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,''DELETE'',''VALID'' FROM HM_MST_REL_OBJ_DATA_VAL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_IN_REL_OBJ_DATA_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RovId = t2.RovId AND t1.Xref_uuid = t2.Xref_uuid ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_ERR_REL_OBJ_DATA_VAL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RovId = t2.RovId AND t1.Xref_uuid = t2.Xref_uuid));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_DATA_VAL', 'INSERT INTO NC_REL_OBJ_DATA_VAL ( SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RODV_ID,t1.ROM_ID,t1.PARENT_ROKD_VAL1,t1.PARENT_ROKD_VAL2,t1.PARENT_ROKD_VAL3,t1.PARENT_ROKD_VAL4,t1.PARENT_ROKD_VAL5,t1.CHILD_ROKD_VAL1,t1.CHILD_ROKD_VAL2,t1.CHILD_ROKD_VAL3,t1.CHILD_ROKD_VAL4,t1.CHILD_ROKD_VAL5,t1.ROP_VAL1,t1.ROP_VAL2,t1.ROP_VAL3,t1.ROP_VAL4,t1.ROP_VAL5,t1.EFFECTIVE_START_DATE,t1.EFFECTIVE_END_DATE,t1.APPROVED_BY,t1.COMMENTS,t1.STATUS,t1.APPROVED_DATE,t1.PARENT_ROKD_VAL6,t1.PARENT_ROKD_VAL7,t1.PARENT_ROKD_VAL8,t1.PARENT_ROKD_VAL9,t1.PARENT_ROKD_VAL10,t1.CHILD_ROKD_VAL6,t1.CHILD_ROKD_VAL7,t1.CHILD_ROKD_VAL8,t1.CHILD_ROKD_VAL9,t1.CHILD_ROKD_VAL10,t1.XREF_UUID,''UPDATE'',''VALID'' FROM HM_IN_REL_OBJ_DATA_VAL t1, HM_MST_REL_OBJ_DATA_VAL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RovId = t2.RovId AND t1.Xref_uuid = t2.Xref_uuid AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RovId <> t2.RovId OR ( t1.RovId IS NULL AND t2.RovId IS NOT NULL) OR (t1.RovId IS NOT NULL AND t2.RovId IS NULL)) OR (t1.RomId <> t2.RomId OR ( t1.RomId IS NULL AND t2.RomId IS NOT NULL) OR (t1.RomId IS NOT NULL AND t2.RomId IS NULL)) OR (t1.ParentRokdVal1 <> t2.ParentRokdVal1 OR ( t1.ParentRokdVal1 IS NULL AND t2.ParentRokdVal1 IS NOT NULL) OR (t1.ParentRokdVal1 IS NOT NULL AND t2.ParentRokdVal1 IS NULL)) OR (t1.ParentRokdVal2 <> t2.ParentRokdVal2 OR ( t1.ParentRokdVal2 IS NULL AND t2.ParentRokdVal2 IS NOT NULL) OR (t1.ParentRokdVal2 IS NOT NULL AND t2.ParentRokdVal2 IS NULL)) OR (t1.ParentRokdVal3 <> t2.ParentRokdVal3 OR ( t1.ParentRokdVal3 IS NULL AND t2.ParentRokdVal3 IS NOT NULL) OR (t1.ParentRokdVal3 IS NOT NULL AND t2.ParentRokdVal3 IS NULL)) OR (t1.ParentRokdVal4 <> t2.ParentRokdVal4 OR ( t1.ParentRokdVal4 IS NULL AND t2.ParentRokdVal4 IS NOT NULL) OR (t1.ParentRokdVal4 IS NOT NULL AND t2.ParentRokdVal4 IS NULL)) OR (t1.ParentRokdVal5 <> t2.ParentRokdVal5 OR ( t1.ParentRokdVal5 IS NULL AND t2.ParentRokdVal5 IS NOT NULL) OR (t1.ParentRokdVal5 IS NOT NULL AND t2.ParentRokdVal5 IS NULL)) OR (t1.ChildRokdVal1 <> t2.ChildRokdVal1 OR ( t1.ChildRokdVal1 IS NULL AND t2.ChildRokdVal1 IS NOT NULL) OR (t1.ChildRokdVal1 IS NOT NULL AND t2.ChildRokdVal1 IS NULL)) OR (t1.ChildRokdVal2 <> t2.ChildRokdVal2 OR ( t1.ChildRokdVal2 IS NULL AND t2.ChildRokdVal2 IS NOT NULL) OR (t1.ChildRokdVal2 IS NOT NULL AND t2.ChildRokdVal2 IS NULL)) OR (t1.ChildRokdVal3 <> t2.ChildRokdVal3 OR ( t1.ChildRokdVal3 IS NULL AND t2.ChildRokdVal3 IS NOT NULL) OR (t1.ChildRokdVal3 IS NOT NULL AND t2.ChildRokdVal3 IS NULL)) OR (t1.ChildRokdVal4 <> t2.ChildRokdVal4 OR ( t1.ChildRokdVal4 IS NULL AND t2.ChildRokdVal4 IS NOT NULL) OR (t1.ChildRokdVal4 IS NOT NULL AND t2.ChildRokdVal4 IS NULL)) OR (t1.ChildRokdVal5 <> t2.ChildRokdVal5 OR ( t1.ChildRokdVal5 IS NULL AND t2.ChildRokdVal5 IS NOT NULL) OR (t1.ChildRokdVal5 IS NOT NULL AND t2.ChildRokdVal5 IS NULL)) OR (t1.RopValue1 <> t2.RopValue1 OR ( t1.RopValue1 IS NULL AND t2.RopValue1 IS NOT NULL) OR (t1.RopValue1 IS NOT NULL AND t2.RopValue1 IS NULL)) OR (t1.RopValue2 <> t2.RopValue2 OR ( t1.RopValue2 IS NULL AND t2.RopValue2 IS NOT NULL) OR (t1.RopValue2 IS NOT NULL AND t2.RopValue2 IS NULL)) OR (t1.RopValue3 <> t2.RopValue3 OR ( t1.RopValue3 IS NULL AND t2.RopValue3 IS NOT NULL) OR (t1.RopValue3 IS NOT NULL AND t2.RopValue3 IS NULL)) OR (t1.RopValue4 <> t2.RopValue4 OR ( t1.RopValue4 IS NULL AND t2.RopValue4 IS NOT NULL) OR (t1.RopValue4 IS NOT NULL AND t2.RopValue4 IS NULL)) OR (t1.RopValue5 <> t2.RopValue5 OR ( t1.RopValue5 IS NULL AND t2.RopValue5 IS NOT NULL) OR (t1.RopValue5 IS NOT NULL AND t2.RopValue5 IS NULL)) OR (t1.EffectiveStartDate <> t2.EffectiveStartDate OR ( t1.EffectiveStartDate IS NULL AND t2.EffectiveStartDate IS NOT NULL) OR (t1.EffectiveStartDate IS NOT NULL AND t2.EffectiveStartDate IS NULL)) OR (t1.EffectiveEndDate <> t2.EffectiveEndDate OR ( t1.EffectiveEndDate IS NULL AND t2.EffectiveEndDate IS NOT NULL) OR (t1.EffectiveEndDate IS NOT NULL AND t2.EffectiveEndDate IS NULL)) OR (t1.ApprovedBy <> t2.ApprovedBy OR ( t1.ApprovedBy IS NULL AND t2.ApprovedBy IS NOT NULL) OR (t1.ApprovedBy IS NOT NULL AND t2.ApprovedBy IS NULL)) OR (t1.Comments <> t2.Comments OR ( t1.Comments IS NULL AND t2.Comments IS NOT NULL) OR (t1.Comments IS NOT NULL AND t2.Comments IS NULL)) OR (t1.Status <> t2.Status OR ( t1.Status IS NULL AND t2.Status IS NOT NULL) OR (t1.Status IS NOT NULL AND t2.Status IS NULL)) OR (t1.ApprovedDate <> t2.ApprovedDate OR ( t1.ApprovedDate IS NULL AND t2.ApprovedDate IS NOT NULL) OR (t1.ApprovedDate IS NOT NULL AND t2.ApprovedDate IS NULL)) OR (t1.ParentRokdVal6 <> t2.ParentRokdVal6 OR ( t1.ParentRokdVal6 IS NULL AND t2.ParentRokdVal6 IS NOT NULL) OR (t1.ParentRokdVal6 IS NOT NULL AND t2.ParentRokdVal6 IS NULL)) OR (t1.ParentRokdVal7 <> t2.ParentRokdVal7 OR ( t1.ParentRokdVal7 IS NULL AND t2.ParentRokdVal7 IS NOT NULL) OR (t1.ParentRokdVal7 IS NOT NULL AND t2.ParentRokdVal7 IS NULL)) OR (t1.ParentRokdVal8 <> t2.ParentRokdVal8 OR ( t1.ParentRokdVal8 IS NULL AND t2.ParentRokdVal8 IS NOT NULL) OR (t1.ParentRokdVal8 IS NOT NULL AND t2.ParentRokdVal8 IS NULL)) OR (t1.ParentRokdVal9 <> t2.ParentRokdVal9 OR ( t1.ParentRokdVal9 IS NULL AND t2.ParentRokdVal9 IS NOT NULL) OR (t1.ParentRokdVal9 IS NOT NULL AND t2.ParentRokdVal9 IS NULL)) OR (t1.ParentRokdVal10 <> t2.ParentRokdVal10 OR ( t1.ParentRokdVal10 IS NULL AND t2.ParentRokdVal10 IS NOT NULL) OR (t1.ParentRokdVal10 IS NOT NULL AND t2.ParentRokdVal10 IS NULL)) OR (t1.ChildRokdVal6 <> t2.ChildRokdVal6 OR ( t1.ChildRokdVal6 IS NULL AND t2.ChildRokdVal6 IS NOT NULL) OR (t1.ChildRokdVal6 IS NOT NULL AND t2.ChildRokdVal6 IS NULL)) OR (t1.ChildRokdVal7 <> t2.ChildRokdVal7 OR ( t1.ChildRokdVal7 IS NULL AND t2.ChildRokdVal7 IS NOT NULL) OR (t1.ChildRokdVal7 IS NOT NULL AND t2.ChildRokdVal7 IS NULL)) OR (t1.ChildRokdVal8 <> t2.ChildRokdVal8 OR ( t1.ChildRokdVal8 IS NULL AND t2.ChildRokdVal8 IS NOT NULL) OR (t1.ChildRokdVal8 IS NOT NULL AND t2.ChildRokdVal8 IS NULL)) OR (t1.ChildRokdVal9 <> t2.ChildRokdVal9 OR ( t1.ChildRokdVal9 IS NULL AND t2.ChildRokdVal9 IS NOT NULL) OR (t1.ChildRokdVal9 IS NOT NULL AND t2.ChildRokdVal9 IS NULL)) OR (t1.ChildRokdVal10 <> t2.ChildRokdVal10 OR ( t1.ChildRokdVal10 IS NULL AND t2.ChildRokdVal10 IS NOT NULL) OR (t1.ChildRokdVal10 IS NOT NULL AND t2.ChildRokdVal10 IS NULL)) OR (t1.Xref_uuid <> t2.Xref_uuid OR ( t1.Xref_uuid IS NULL AND t2.Xref_uuid IS NOT NULL) OR (t1.Xref_uuid IS NOT NULL AND t2.Xref_uuid IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_DATA_VAL', 'INSERT INTO NC_REL_OBJ_DATA_VAL ( SCENARIO_ID,RODV_ID,ROM_ID,PARENT_ROKD_VAL1,PARENT_ROKD_VAL2,PARENT_ROKD_VAL3,PARENT_ROKD_VAL4,PARENT_ROKD_VAL5,CHILD_ROKD_VAL1,CHILD_ROKD_VAL2,CHILD_ROKD_VAL3,CHILD_ROKD_VAL4,CHILD_ROKD_VAL5,ROP_VAL1,ROP_VAL2,ROP_VAL3,ROP_VAL4,ROP_VAL5,EFFECTIVE_START_DATE,EFFECTIVE_END_DATE,APPROVED_BY,COMMENTS,STATUS,APPROVED_DATE,PARENT_ROKD_VAL6,PARENT_ROKD_VAL7,PARENT_ROKD_VAL8,PARENT_ROKD_VAL9,PARENT_ROKD_VAL10,CHILD_ROKD_VAL6,CHILD_ROKD_VAL7,CHILD_ROKD_VAL8,CHILD_ROKD_VAL9,CHILD_ROKD_VAL10,XREF_UUID,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.RODV_ID,t1.ROM_ID,t1.PARENT_ROKD_VAL1,t1.PARENT_ROKD_VAL2,t1.PARENT_ROKD_VAL3,t1.PARENT_ROKD_VAL4,t1.PARENT_ROKD_VAL5,t1.CHILD_ROKD_VAL1,t1.CHILD_ROKD_VAL2,t1.CHILD_ROKD_VAL3,t1.CHILD_ROKD_VAL4,t1.CHILD_ROKD_VAL5,t1.ROP_VAL1,t1.ROP_VAL2,t1.ROP_VAL3,t1.ROP_VAL4,t1.ROP_VAL5,t1.EFFECTIVE_START_DATE,t1.EFFECTIVE_END_DATE,t1.APPROVED_BY,t1.COMMENTS,t1.STATUS,t1.APPROVED_DATE,t1.PARENT_ROKD_VAL6,t1.PARENT_ROKD_VAL7,t1.PARENT_ROKD_VAL8,t1.PARENT_ROKD_VAL9,t1.PARENT_ROKD_VAL10,t1.CHILD_ROKD_VAL6,t1.CHILD_ROKD_VAL7,t1.CHILD_ROKD_VAL8,t1.CHILD_ROKD_VAL9,t1.CHILD_ROKD_VAL10,t1.XREF_UUID,''ACTIVATE'',''VALID'' FROM HM_IN_REL_OBJ_DATA_VAL t1, HM_MST_REL_OBJ_DATA_VAL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RovId = t2.RovId AND t1.Xref_uuid = t2.Xref_uuid AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_RO_FILTER', 'INSERT INTO NC_RO_FILTER ( SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,''INSERT'',''VALID'' FROM HM_IN_RO_FILTER t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM HM_MST_RO_FILTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FilterId = t2.FilterId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_RO_FILTER', 'INSERT INTO NC_RO_FILTER ( SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,''DELETE'',''VALID'' FROM HM_MST_RO_FILTER t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_IN_RO_FILTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FilterId = t2.FilterId ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_ERR_RO_FILTER t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FilterId = t2.FilterId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_RO_FILTER', 'INSERT INTO NC_RO_FILTER ( SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.FILTER_ID,t1.RO_ID,t1.FILTER_NAME,t1.FILTER_CONDITION_LOG,t1.FILTER_CONDITION,t1.DESCRIPTION,t1.ROM_ID,t1.IS_GLOBAL,t1.MDM_APP_USER_ID_OR_ROLE_ID,t1.IS_ACTIVE,t1.VER_FILTER_CONDITION,''UPDATE'',''VALID'' FROM HM_IN_RO_FILTER t1, HM_MST_RO_FILTER t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FilterId = t2.FilterId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.FilterId <> t2.FilterId OR ( t1.FilterId IS NULL AND t2.FilterId IS NOT NULL) OR (t1.FilterId IS NOT NULL AND t2.FilterId IS NULL)) OR (t1.RoId <> t2.RoId OR ( t1.RoId IS NULL AND t2.RoId IS NOT NULL) OR (t1.RoId IS NOT NULL AND t2.RoId IS NULL)) OR (t1.FilterName <> t2.FilterName OR ( t1.FilterName IS NULL AND t2.FilterName IS NOT NULL) OR (t1.FilterName IS NOT NULL AND t2.FilterName IS NULL)) OR (t1.LogicalFilterCondition <> t2.LogicalFilterCondition OR ( t1.LogicalFilterCondition IS NULL AND t2.LogicalFilterCondition IS NOT NULL) OR (t1.LogicalFilterCondition IS NOT NULL AND t2.LogicalFilterCondition IS NULL)) OR (t1.FilterCondition <> t2.FilterCondition OR ( t1.FilterCondition IS NULL AND t2.FilterCondition IS NOT NULL) OR (t1.FilterCondition IS NOT NULL AND t2.FilterCondition IS NULL)) OR (t1.FilterDescription <> t2.FilterDescription OR ( t1.FilterDescription IS NULL AND t2.FilterDescription IS NOT NULL) OR (t1.FilterDescription IS NOT NULL AND t2.FilterDescription IS NULL)) OR (t1.RomId <> t2.RomId OR ( t1.RomId IS NULL AND t2.RomId IS NOT NULL) OR (t1.RomId IS NOT NULL AND t2.RomId IS NULL)) OR (t1.IsGlobal <> t2.IsGlobal OR ( t1.IsGlobal IS NULL AND t2.IsGlobal IS NOT NULL) OR (t1.IsGlobal IS NOT NULL AND t2.IsGlobal IS NULL)) OR (t1.MdmUserRoleId <> t2.MdmUserRoleId OR ( t1.MdmUserRoleId IS NULL AND t2.MdmUserRoleId IS NOT NULL) OR (t1.MdmUserRoleId IS NOT NULL AND t2.MdmUserRoleId IS NULL)) OR (t1.IsActive <> t2.IsActive OR ( t1.IsActive IS NULL AND t2.IsActive IS NOT NULL) OR (t1.IsActive IS NOT NULL AND t2.IsActive IS NULL)) OR (t1.FilterConditionVersion <> t2.FilterConditionVersion OR ( t1.FilterConditionVersion IS NULL AND t2.FilterConditionVersion IS NOT NULL) OR (t1.FilterConditionVersion IS NOT NULL AND t2.FilterConditionVersion IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_RO_FILTER', 'INSERT INTO NC_RO_FILTER ( SCENARIO_ID,FILTER_ID,RO_ID,FILTER_NAME,FILTER_CONDITION_LOG,FILTER_CONDITION,DESCRIPTION,ROM_ID,IS_GLOBAL,MDM_APP_USER_ID_OR_ROLE_ID,IS_ACTIVE,VER_FILTER_CONDITION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.FILTER_ID,t1.RO_ID,t1.FILTER_NAME,t1.FILTER_CONDITION_LOG,t1.FILTER_CONDITION,t1.DESCRIPTION,t1.ROM_ID,t1.IS_GLOBAL,t1.MDM_APP_USER_ID_OR_ROLE_ID,t1.IS_ACTIVE,t1.VER_FILTER_CONDITION,''ACTIVATE'',''VALID'' FROM HM_IN_RO_FILTER t1, HM_MST_RO_FILTER t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FilterId = t2.FilterId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_KEY_TYPE', 'INSERT INTO NC_REL_OBJ_KEY_TYPE ( SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,''INSERT'',''VALID'' FROM HM_IN_REL_OBJ_KEY_TYPE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM HM_MST_REL_OBJ_KEY_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoktId = t2.RoktId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_KEY_TYPE', 'INSERT INTO NC_REL_OBJ_KEY_TYPE ( SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,''DELETE'',''VALID'' FROM HM_MST_REL_OBJ_KEY_TYPE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_IN_REL_OBJ_KEY_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoktId = t2.RoktId ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_ERR_REL_OBJ_KEY_TYPE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoktId = t2.RoktId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_KEY_TYPE', 'INSERT INTO NC_REL_OBJ_KEY_TYPE ( SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROKT_ID,t1.RO_ID,t1.KEY_TYPE,t1.NAME,t1.DESCRIPTION,''UPDATE'',''VALID'' FROM HM_IN_REL_OBJ_KEY_TYPE t1, HM_MST_REL_OBJ_KEY_TYPE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoktId = t2.RoktId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RoktId <> t2.RoktId OR ( t1.RoktId IS NULL AND t2.RoktId IS NOT NULL) OR (t1.RoktId IS NOT NULL AND t2.RoktId IS NULL)) OR (t1.RoId <> t2.RoId OR ( t1.RoId IS NULL AND t2.RoId IS NOT NULL) OR (t1.RoId IS NOT NULL AND t2.RoId IS NULL)) OR (t1.KeyType <> t2.KeyType OR ( t1.KeyType IS NULL AND t2.KeyType IS NOT NULL) OR (t1.KeyType IS NOT NULL AND t2.KeyType IS NULL)) OR (t1.KeyName <> t2.KeyName OR ( t1.KeyName IS NULL AND t2.KeyName IS NOT NULL) OR (t1.KeyName IS NOT NULL AND t2.KeyName IS NULL)) OR (t1.KeyDescription <> t2.KeyDescription OR ( t1.KeyDescription IS NULL AND t2.KeyDescription IS NOT NULL) OR (t1.KeyDescription IS NOT NULL AND t2.KeyDescription IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_KEY_TYPE', 'INSERT INTO NC_REL_OBJ_KEY_TYPE ( SCENARIO_ID,ROKT_ID,RO_ID,KEY_TYPE,NAME,DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROKT_ID,t1.RO_ID,t1.KEY_TYPE,t1.NAME,t1.DESCRIPTION,''ACTIVATE'',''VALID'' FROM HM_IN_REL_OBJ_KEY_TYPE t1, HM_MST_REL_OBJ_KEY_TYPE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RoktId = t2.RoktId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_MAP', 'INSERT INTO NC_REL_OBJ_MAP ( SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,''INSERT'',''VALID'' FROM HM_IN_REL_OBJ_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM HM_MST_REL_OBJ_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_MAP', 'INSERT INTO NC_REL_OBJ_MAP ( SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,''DELETE'',''VALID'' FROM HM_MST_REL_OBJ_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_IN_REL_OBJ_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId ) AND  NOT_EXISTS ( SELECT ''X'' FROM HM_ERR_REL_OBJ_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_MAP', 'INSERT INTO NC_REL_OBJ_MAP ( SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROM_ID,t1.REL_NAME,t1.REL_TYPE,t1.PARENT_RO_ID,t1.CHILD_RO_ID,t1.PARENT_ROKT_ID,t1.CHILD_ROKT_ID,t1.TGT_TBL_RO_ID,t1.MAP_PARENT_COL1,t1.MAP_PARENT_COL2,t1.MAP_PARENT_COL3,t1.MAP_PARENT_COL4,t1.MAP_PARENT_COL5,t1.MAP_CHILD_COL1,t1.MAP_CHILD_COL2,t1.MAP_CHILD_COL3,t1.MAP_CHILD_COL4,t1.MAP_CHILD_COL5,t1.RM_VIEWER_QUERY,t1.DESCRIPTION,t1.MAP_PARENT_LOG_COL1,t1.MAP_PARENT_LOG_COL2,t1.MAP_PARENT_LOG_COL3,t1.MAP_PARENT_LOG_COL4,t1.MAP_PARENT_LOG_COL5,t1.MAP_CHILD_LOG_COL1,t1.MAP_CHILD_LOG_COL2,t1.MAP_CHILD_LOG_COL3,t1.MAP_CHILD_LOG_COL4,t1.MAP_CHILD_LOG_COL5,t1.ROM_ORIGIN,t1.MAP_PARENT_COL6,t1.MAP_PARENT_COL7,t1.MAP_PARENT_COL8,t1.MAP_PARENT_COL9,t1.MAP_PARENT_COL10,t1.MAP_CHILD_COL6,t1.MAP_CHILD_COL7,t1.MAP_CHILD_COL8,t1.MAP_CHILD_COL9,t1.MAP_CHILD_COL10,t1.MAP_PARENT_LOG_COL6,t1.MAP_PARENT_LOG_COL7,t1.MAP_PARENT_LOG_COL8,t1.MAP_PARENT_LOG_COL9,t1.MAP_PARENT_LOG_COL10,t1.MAP_CHILD_LOG_COL6,t1.MAP_CHILD_LOG_COL7,t1.MAP_CHILD_LOG_COL8,t1.MAP_CHILD_LOG_COL9,t1.MAP_CHILD_LOG_COL10,''UPDATE'',''VALID'' FROM HM_IN_REL_OBJ_MAP t1, HM_MST_REL_OBJ_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.RomId <> t2.RomId OR ( t1.RomId IS NULL AND t2.RomId IS NOT NULL) OR (t1.RomId IS NOT NULL AND t2.RomId IS NULL)) OR (t1.RelationName <> t2.RelationName OR ( t1.RelationName IS NULL AND t2.RelationName IS NOT NULL) OR (t1.RelationName IS NOT NULL AND t2.RelationName IS NULL)) OR (t1.RelationType <> t2.RelationType OR ( t1.RelationType IS NULL AND t2.RelationType IS NOT NULL) OR (t1.RelationType IS NOT NULL AND t2.RelationType IS NULL)) OR (t1.ParentROId <> t2.ParentROId OR ( t1.ParentROId IS NULL AND t2.ParentROId IS NOT NULL) OR (t1.ParentROId IS NOT NULL AND t2.ParentROId IS NULL)) OR (t1.ChildROId <> t2.ChildROId OR ( t1.ChildROId IS NULL AND t2.ChildROId IS NOT NULL) OR (t1.ChildROId IS NOT NULL AND t2.ChildROId IS NULL)) OR (t1.ParentROKTId <> t2.ParentROKTId OR ( t1.ParentROKTId IS NULL AND t2.ParentROKTId IS NOT NULL) OR (t1.ParentROKTId IS NOT NULL AND t2.ParentROKTId IS NULL)) OR (t1.ChildROKTId <> t2.ChildROKTId OR ( t1.ChildROKTId IS NULL AND t2.ChildROKTId IS NOT NULL) OR (t1.ChildROKTId IS NOT NULL AND t2.ChildROKTId IS NULL)) OR (t1.TargetTableRelObjId <> t2.TargetTableRelObjId OR ( t1.TargetTableRelObjId IS NULL AND t2.TargetTableRelObjId IS NOT NULL) OR (t1.TargetTableRelObjId IS NOT NULL AND t2.TargetTableRelObjId IS NULL)) OR (t1.MapParentColumn1 <> t2.MapParentColumn1 OR ( t1.MapParentColumn1 IS NULL AND t2.MapParentColumn1 IS NOT NULL) OR (t1.MapParentColumn1 IS NOT NULL AND t2.MapParentColumn1 IS NULL)) OR (t1.MapParentColumn2 <> t2.MapParentColumn2 OR ( t1.MapParentColumn2 IS NULL AND t2.MapParentColumn2 IS NOT NULL) OR (t1.MapParentColumn2 IS NOT NULL AND t2.MapParentColumn2 IS NULL)) OR (t1.MapParentColumn3 <> t2.MapParentColumn3 OR ( t1.MapParentColumn3 IS NULL AND t2.MapParentColumn3 IS NOT NULL) OR (t1.MapParentColumn3 IS NOT NULL AND t2.MapParentColumn3 IS NULL)) OR (t1.MapParentColumn4 <> t2.MapParentColumn4 OR ( t1.MapParentColumn4 IS NULL AND t2.MapParentColumn4 IS NOT NULL) OR (t1.MapParentColumn4 IS NOT NULL AND t2.MapParentColumn4 IS NULL)) OR (t1.MapParentColumn5 <> t2.MapParentColumn5 OR ( t1.MapParentColumn5 IS NULL AND t2.MapParentColumn5 IS NOT NULL) OR (t1.MapParentColumn5 IS NOT NULL AND t2.MapParentColumn5 IS NULL)) OR (t1.MapChildColumn1 <> t2.MapChildColumn1 OR ( t1.MapChildColumn1 IS NULL AND t2.MapChildColumn1 IS NOT NULL) OR (t1.MapChildColumn1 IS NOT NULL AND t2.MapChildColumn1 IS NULL)) OR (t1.MapChildColumn2 <> t2.MapChildColumn2 OR ( t1.MapChildColumn2 IS NULL AND t2.MapChildColumn2 IS NOT NULL) OR (t1.MapChildColumn2 IS NOT NULL AND t2.MapChildColumn2 IS NULL)) OR (t1.MapChildColumn3 <> t2.MapChildColumn3 OR ( t1.MapChildColumn3 IS NULL AND t2.MapChildColumn3 IS NOT NULL) OR (t1.MapChildColumn3 IS NOT NULL AND t2.MapChildColumn3 IS NULL)) OR (t1.MapChildColumn4 <> t2.MapChildColumn4 OR ( t1.MapChildColumn4 IS NULL AND t2.MapChildColumn4 IS NOT NULL) OR (t1.MapChildColumn4 IS NOT NULL AND t2.MapChildColumn4 IS NULL)) OR (t1.MapChildColumn5 <> t2.MapChildColumn5 OR ( t1.MapChildColumn5 IS NULL AND t2.MapChildColumn5 IS NOT NULL) OR (t1.MapChildColumn5 IS NOT NULL AND t2.MapChildColumn5 IS NULL)) OR (t1.ViewerQuery <> t2.ViewerQuery OR ( t1.ViewerQuery IS NULL AND t2.ViewerQuery IS NOT NULL) OR (t1.ViewerQuery IS NOT NULL AND t2.ViewerQuery IS NULL)) OR (t1.RelationDescription <> t2.RelationDescription OR ( t1.RelationDescription IS NULL AND t2.RelationDescription IS NOT NULL) OR (t1.RelationDescription IS NOT NULL AND t2.RelationDescription IS NULL)) OR (t1.MapParentLogColumn1 <> t2.MapParentLogColumn1 OR ( t1.MapParentLogColumn1 IS NULL AND t2.MapParentLogColumn1 IS NOT NULL) OR (t1.MapParentLogColumn1 IS NOT NULL AND t2.MapParentLogColumn1 IS NULL)) OR (t1.MapParentLogColumn2 <> t2.MapParentLogColumn2 OR ( t1.MapParentLogColumn2 IS NULL AND t2.MapParentLogColumn2 IS NOT NULL) OR (t1.MapParentLogColumn2 IS NOT NULL AND t2.MapParentLogColumn2 IS NULL)) OR (t1.MapParentLogColumn3 <> t2.MapParentLogColumn3 OR ( t1.MapParentLogColumn3 IS NULL AND t2.MapParentLogColumn3 IS NOT NULL) OR (t1.MapParentLogColumn3 IS NOT NULL AND t2.MapParentLogColumn3 IS NULL)) OR (t1.MapParentLogColumn4 <> t2.MapParentLogColumn4 OR ( t1.MapParentLogColumn4 IS NULL AND t2.MapParentLogColumn4 IS NOT NULL) OR (t1.MapParentLogColumn4 IS NOT NULL AND t2.MapParentLogColumn4 IS NULL)) OR (t1.MapParentLogColumn5 <> t2.MapParentLogColumn5 OR ( t1.MapParentLogColumn5 IS NULL AND t2.MapParentLogColumn5 IS NOT NULL) OR (t1.MapParentLogColumn5 IS NOT NULL AND t2.MapParentLogColumn5 IS NULL)) OR (t1.MapChildLogColumn1 <> t2.MapChildLogColumn1 OR ( t1.MapChildLogColumn1 IS NULL AND t2.MapChildLogColumn1 IS NOT NULL) OR (t1.MapChildLogColumn1 IS NOT NULL AND t2.MapChildLogColumn1 IS NULL)) OR (t1.MapChildLogColumn2 <> t2.MapChildLogColumn2 OR ( t1.MapChildLogColumn2 IS NULL AND t2.MapChildLogColumn2 IS NOT NULL) OR (t1.MapChildLogColumn2 IS NOT NULL AND t2.MapChildLogColumn2 IS NULL)) OR (t1.MapChildLogColumn3 <> t2.MapChildLogColumn3 OR ( t1.MapChildLogColumn3 IS NULL AND t2.MapChildLogColumn3 IS NOT NULL) OR (t1.MapChildLogColumn3 IS NOT NULL AND t2.MapChildLogColumn3 IS NULL)) OR (t1.MapChildLogColumn4 <> t2.MapChildLogColumn4 OR ( t1.MapChildLogColumn4 IS NULL AND t2.MapChildLogColumn4 IS NOT NULL) OR (t1.MapChildLogColumn4 IS NOT NULL AND t2.MapChildLogColumn4 IS NULL)) OR (t1.MapChildLogColumn5 <> t2.MapChildLogColumn5 OR ( t1.MapChildLogColumn5 IS NULL AND t2.MapChildLogColumn5 IS NOT NULL) OR (t1.MapChildLogColumn5 IS NOT NULL AND t2.MapChildLogColumn5 IS NULL)) OR (t1.RomOrigin <> t2.RomOrigin OR ( t1.RomOrigin IS NULL AND t2.RomOrigin IS NOT NULL) OR (t1.RomOrigin IS NOT NULL AND t2.RomOrigin IS NULL)) OR (t1.MapParentColumn6 <> t2.MapParentColumn6 OR ( t1.MapParentColumn6 IS NULL AND t2.MapParentColumn6 IS NOT NULL) OR (t1.MapParentColumn6 IS NOT NULL AND t2.MapParentColumn6 IS NULL)) OR (t1.MapParentColumn7 <> t2.MapParentColumn7 OR ( t1.MapParentColumn7 IS NULL AND t2.MapParentColumn7 IS NOT NULL) OR (t1.MapParentColumn7 IS NOT NULL AND t2.MapParentColumn7 IS NULL)) OR (t1.MapParentColumn8 <> t2.MapParentColumn8 OR ( t1.MapParentColumn8 IS NULL AND t2.MapParentColumn8 IS NOT NULL) OR (t1.MapParentColumn8 IS NOT NULL AND t2.MapParentColumn8 IS NULL)) OR (t1.MapParentColumn9 <> t2.MapParentColumn9 OR ( t1.MapParentColumn9 IS NULL AND t2.MapParentColumn9 IS NOT NULL) OR (t1.MapParentColumn9 IS NOT NULL AND t2.MapParentColumn9 IS NULL)) OR (t1.MapParentColumn10 <> t2.MapParentColumn10 OR ( t1.MapParentColumn10 IS NULL AND t2.MapParentColumn10 IS NOT NULL) OR (t1.MapParentColumn10 IS NOT NULL AND t2.MapParentColumn10 IS NULL)) OR (t1.MapChildColumn6 <> t2.MapChildColumn6 OR ( t1.MapChildColumn6 IS NULL AND t2.MapChildColumn6 IS NOT NULL) OR (t1.MapChildColumn6 IS NOT NULL AND t2.MapChildColumn6 IS NULL)) OR (t1.MapChildColumn7 <> t2.MapChildColumn7 OR ( t1.MapChildColumn7 IS NULL AND t2.MapChildColumn7 IS NOT NULL) OR (t1.MapChildColumn7 IS NOT NULL AND t2.MapChildColumn7 IS NULL)) OR (t1.MapChildColumn8 <> t2.MapChildColumn8 OR ( t1.MapChildColumn8 IS NULL AND t2.MapChildColumn8 IS NOT NULL) OR (t1.MapChildColumn8 IS NOT NULL AND t2.MapChildColumn8 IS NULL)) OR (t1.MapChildColumn9 <> t2.MapChildColumn9 OR ( t1.MapChildColumn9 IS NULL AND t2.MapChildColumn9 IS NOT NULL) OR (t1.MapChildColumn9 IS NOT NULL AND t2.MapChildColumn9 IS NULL)) OR (t1.MapChildColumn10 <> t2.MapChildColumn10 OR ( t1.MapChildColumn10 IS NULL AND t2.MapChildColumn10 IS NOT NULL) OR (t1.MapChildColumn10 IS NOT NULL AND t2.MapChildColumn10 IS NULL)) OR (t1.MapParentLogColumn6 <> t2.MapParentLogColumn6 OR ( t1.MapParentLogColumn6 IS NULL AND t2.MapParentLogColumn6 IS NOT NULL) OR (t1.MapParentLogColumn6 IS NOT NULL AND t2.MapParentLogColumn6 IS NULL)) OR (t1.MapParentLogColumn7 <> t2.MapParentLogColumn7 OR ( t1.MapParentLogColumn7 IS NULL AND t2.MapParentLogColumn7 IS NOT NULL) OR (t1.MapParentLogColumn7 IS NOT NULL AND t2.MapParentLogColumn7 IS NULL)) OR (t1.MapParentLogColumn8 <> t2.MapParentLogColumn8 OR ( t1.MapParentLogColumn8 IS NULL AND t2.MapParentLogColumn8 IS NOT NULL) OR (t1.MapParentLogColumn8 IS NOT NULL AND t2.MapParentLogColumn8 IS NULL)) OR (t1.MapParentLogColumn9 <> t2.MapParentLogColumn9 OR ( t1.MapParentLogColumn9 IS NULL AND t2.MapParentLogColumn9 IS NOT NULL) OR (t1.MapParentLogColumn9 IS NOT NULL AND t2.MapParentLogColumn9 IS NULL)) OR (t1.MapParentLogColumn10 <> t2.MapParentLogColumn10 OR ( t1.MapParentLogColumn10 IS NULL AND t2.MapParentLogColumn10 IS NOT NULL) OR (t1.MapParentLogColumn10 IS NOT NULL AND t2.MapParentLogColumn10 IS NULL)) OR (t1.MapChildLogColumn6 <> t2.MapChildLogColumn6 OR ( t1.MapChildLogColumn6 IS NULL AND t2.MapChildLogColumn6 IS NOT NULL) OR (t1.MapChildLogColumn6 IS NOT NULL AND t2.MapChildLogColumn6 IS NULL)) OR (t1.MapChildLogColumn7 <> t2.MapChildLogColumn7 OR ( t1.MapChildLogColumn7 IS NULL AND t2.MapChildLogColumn7 IS NOT NULL) OR (t1.MapChildLogColumn7 IS NOT NULL AND t2.MapChildLogColumn7 IS NULL)) OR (t1.MapChildLogColumn8 <> t2.MapChildLogColumn8 OR ( t1.MapChildLogColumn8 IS NULL AND t2.MapChildLogColumn8 IS NOT NULL) OR (t1.MapChildLogColumn8 IS NOT NULL AND t2.MapChildLogColumn8 IS NULL)) OR (t1.MapChildLogColumn9 <> t2.MapChildLogColumn9 OR ( t1.MapChildLogColumn9 IS NULL AND t2.MapChildLogColumn9 IS NOT NULL) OR (t1.MapChildLogColumn9 IS NOT NULL AND t2.MapChildLogColumn9 IS NULL)) OR (t1.MapChildLogColumn10 <> t2.MapChildLogColumn10 OR ( t1.MapChildLogColumn10 IS NULL AND t2.MapChildLogColumn10 IS NOT NULL) OR (t1.MapChildLogColumn10 IS NOT NULL AND t2.MapChildLogColumn10 IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('HM_IN_REL_OBJ_MAP', 'INSERT INTO NC_REL_OBJ_MAP ( SCENARIO_ID,ROM_ID,REL_NAME,REL_TYPE,PARENT_RO_ID,CHILD_RO_ID,PARENT_ROKT_ID,CHILD_ROKT_ID,TGT_TBL_RO_ID,MAP_PARENT_COL1,MAP_PARENT_COL2,MAP_PARENT_COL3,MAP_PARENT_COL4,MAP_PARENT_COL5,MAP_CHILD_COL1,MAP_CHILD_COL2,MAP_CHILD_COL3,MAP_CHILD_COL4,MAP_CHILD_COL5,RM_VIEWER_QUERY,DESCRIPTION,MAP_PARENT_LOG_COL1,MAP_PARENT_LOG_COL2,MAP_PARENT_LOG_COL3,MAP_PARENT_LOG_COL4,MAP_PARENT_LOG_COL5,MAP_CHILD_LOG_COL1,MAP_CHILD_LOG_COL2,MAP_CHILD_LOG_COL3,MAP_CHILD_LOG_COL4,MAP_CHILD_LOG_COL5,ROM_ORIGIN,MAP_PARENT_COL6,MAP_PARENT_COL7,MAP_PARENT_COL8,MAP_PARENT_COL9,MAP_PARENT_COL10,MAP_CHILD_COL6,MAP_CHILD_COL7,MAP_CHILD_COL8,MAP_CHILD_COL9,MAP_CHILD_COL10,MAP_PARENT_LOG_COL6,MAP_PARENT_LOG_COL7,MAP_PARENT_LOG_COL8,MAP_PARENT_LOG_COL9,MAP_PARENT_LOG_COL10,MAP_CHILD_LOG_COL6,MAP_CHILD_LOG_COL7,MAP_CHILD_LOG_COL8,MAP_CHILD_LOG_COL9,MAP_CHILD_LOG_COL10,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.ROM_ID,t1.REL_NAME,t1.REL_TYPE,t1.PARENT_RO_ID,t1.CHILD_RO_ID,t1.PARENT_ROKT_ID,t1.CHILD_ROKT_ID,t1.TGT_TBL_RO_ID,t1.MAP_PARENT_COL1,t1.MAP_PARENT_COL2,t1.MAP_PARENT_COL3,t1.MAP_PARENT_COL4,t1.MAP_PARENT_COL5,t1.MAP_CHILD_COL1,t1.MAP_CHILD_COL2,t1.MAP_CHILD_COL3,t1.MAP_CHILD_COL4,t1.MAP_CHILD_COL5,t1.RM_VIEWER_QUERY,t1.DESCRIPTION,t1.MAP_PARENT_LOG_COL1,t1.MAP_PARENT_LOG_COL2,t1.MAP_PARENT_LOG_COL3,t1.MAP_PARENT_LOG_COL4,t1.MAP_PARENT_LOG_COL5,t1.MAP_CHILD_LOG_COL1,t1.MAP_CHILD_LOG_COL2,t1.MAP_CHILD_LOG_COL3,t1.MAP_CHILD_LOG_COL4,t1.MAP_CHILD_LOG_COL5,t1.ROM_ORIGIN,t1.MAP_PARENT_COL6,t1.MAP_PARENT_COL7,t1.MAP_PARENT_COL8,t1.MAP_PARENT_COL9,t1.MAP_PARENT_COL10,t1.MAP_CHILD_COL6,t1.MAP_CHILD_COL7,t1.MAP_CHILD_COL8,t1.MAP_CHILD_COL9,t1.MAP_CHILD_COL10,t1.MAP_PARENT_LOG_COL6,t1.MAP_PARENT_LOG_COL7,t1.MAP_PARENT_LOG_COL8,t1.MAP_PARENT_LOG_COL9,t1.MAP_PARENT_LOG_COL10,t1.MAP_CHILD_LOG_COL6,t1.MAP_CHILD_LOG_COL7,t1.MAP_CHILD_LOG_COL8,t1.MAP_CHILD_LOG_COL9,t1.MAP_CHILD_LOG_COL10,''ACTIVATE'',''VALID'' FROM HM_IN_REL_OBJ_MAP t1, HM_MST_REL_OBJ_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.RomId = t2.RomId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOC_GRP_CUST', 'INSERT INTO NC_SOC_GRP_CUST ( SCENARIO_ID,SOC_GRP_CUST_ID,SOC_GRP_CUST_NAME,SOC_GRP_type_CD,SOC_GRP_CUST_CNT,SOC_GRP_CUST_CHLD_CNT,SOC_GRP_CUST_Pet_CNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOC_GRP_CUST_ID,SOC_GRP_CUST_NAME,SOC_GRP_type_CD,SOC_GRP_CUST_CNT,SOC_GRP_CUST_CHLD_CNT,SOC_GRP_CUST_Pet_CNT,''INSERT'',''VALID'' FROM IN_SOC_GRP_CUST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_SOC_GRP_CUST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SOC_GRP_CUST_ID = t2.SOC_GRP_CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOC_GRP_CUST', 'INSERT INTO NC_SOC_GRP_CUST ( SCENARIO_ID,SOC_GRP_CUST_ID,SOC_GRP_CUST_NAME,SOC_GRP_type_CD,SOC_GRP_CUST_CNT,SOC_GRP_CUST_CHLD_CNT,SOC_GRP_CUST_Pet_CNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOC_GRP_CUST_ID,SOC_GRP_CUST_NAME,SOC_GRP_type_CD,SOC_GRP_CUST_CNT,SOC_GRP_CUST_CHLD_CNT,SOC_GRP_CUST_Pet_CNT,''DELETE'',''VALID'' FROM M_SOC_GRP_CUST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_SOC_GRP_CUST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SOC_GRP_CUST_ID = t2.SOC_GRP_CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_SOC_GRP_CUST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SOC_GRP_CUST_ID = t2.SOC_GRP_CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOC_GRP_CUST', 'INSERT INTO NC_SOC_GRP_CUST ( SCENARIO_ID,SOC_GRP_CUST_ID,SOC_GRP_CUST_NAME,SOC_GRP_type_CD,SOC_GRP_CUST_CNT,SOC_GRP_CUST_CHLD_CNT,SOC_GRP_CUST_Pet_CNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOC_GRP_CUST_ID,t1.SOC_GRP_CUST_NAME,t1.SOC_GRP_type_CD,t1.SOC_GRP_CUST_CNT,t1.SOC_GRP_CUST_CHLD_CNT,t1.SOC_GRP_CUST_Pet_CNT,''UPDATE'',''VALID'' FROM IN_SOC_GRP_CUST t1, M_SOC_GRP_CUST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SOC_GRP_CUST_ID = t2.SOC_GRP_CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SOC_GRP_CUST_ID <> t2.SOC_GRP_CUST_ID OR ( t1.SOC_GRP_CUST_ID IS NULL AND t2.SOC_GRP_CUST_ID IS NOT NULL) OR (t1.SOC_GRP_CUST_ID IS NOT NULL AND t2.SOC_GRP_CUST_ID IS NULL)) OR (t1.SOC_GRP_CUST_NAME <> t2.SOC_GRP_CUST_NAME OR ( t1.SOC_GRP_CUST_NAME IS NULL AND t2.SOC_GRP_CUST_NAME IS NOT NULL) OR (t1.SOC_GRP_CUST_NAME IS NOT NULL AND t2.SOC_GRP_CUST_NAME IS NULL)) OR (t1.SOC_GRP_type_CD <> t2.SOC_GRP_type_CD OR ( t1.SOC_GRP_type_CD IS NULL AND t2.SOC_GRP_type_CD IS NOT NULL) OR (t1.SOC_GRP_type_CD IS NOT NULL AND t2.SOC_GRP_type_CD IS NULL)) OR (t1.SOC_GRP_CUST_CNT <> t2.SOC_GRP_CUST_CNT OR ( t1.SOC_GRP_CUST_CNT IS NULL AND t2.SOC_GRP_CUST_CNT IS NOT NULL) OR (t1.SOC_GRP_CUST_CNT IS NOT NULL AND t2.SOC_GRP_CUST_CNT IS NULL)) OR (t1.SOC_GRP_CUST_CHLD_CNT <> t2.SOC_GRP_CUST_CHLD_CNT OR ( t1.SOC_GRP_CUST_CHLD_CNT IS NULL AND t2.SOC_GRP_CUST_CHLD_CNT IS NOT NULL) OR (t1.SOC_GRP_CUST_CHLD_CNT IS NOT NULL AND t2.SOC_GRP_CUST_CHLD_CNT IS NULL)) OR (t1.SOC_GRP_CUST_Pet_CNT <> t2.SOC_GRP_CUST_Pet_CNT OR ( t1.SOC_GRP_CUST_Pet_CNT IS NULL AND t2.SOC_GRP_CUST_Pet_CNT IS NOT NULL) OR (t1.SOC_GRP_CUST_Pet_CNT IS NOT NULL AND t2.SOC_GRP_CUST_Pet_CNT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOC_GRP_CUST', 'INSERT INTO NC_SOC_GRP_CUST ( SCENARIO_ID,SOC_GRP_CUST_ID,SOC_GRP_CUST_NAME,SOC_GRP_type_CD,SOC_GRP_CUST_CNT,SOC_GRP_CUST_CHLD_CNT,SOC_GRP_CUST_Pet_CNT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOC_GRP_CUST_ID,t1.SOC_GRP_CUST_NAME,t1.SOC_GRP_type_CD,t1.SOC_GRP_CUST_CNT,t1.SOC_GRP_CUST_CHLD_CNT,t1.SOC_GRP_CUST_Pet_CNT,''ACTIVATE'',''VALID'' FROM IN_SOC_GRP_CUST t1, M_SOC_GRP_CUST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SOC_GRP_CUST_ID = t2.SOC_GRP_CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOURCE_FILE', 'INSERT INTO NC_SOURCE_FILE ( SCENARIO_ID,FILE_IDENTIFIER,SOURCE_INTAKE_ID,FILE_NAME,FILE_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,FILE_IDENTIFIER,SOURCE_INTAKE_ID,FILE_NAME,FILE_DESCRIPTION,''INSERT'',''VALID'' FROM IN_SOURCE_FILE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_SOURCE_FILE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOURCE_FILE', 'INSERT INTO NC_SOURCE_FILE ( SCENARIO_ID,FILE_IDENTIFIER,SOURCE_INTAKE_ID,FILE_NAME,FILE_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,FILE_IDENTIFIER,SOURCE_INTAKE_ID,FILE_NAME,FILE_DESCRIPTION,''DELETE'',''VALID'' FROM M_SOURCE_FILE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_SOURCE_FILE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_SOURCE_FILE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOURCE_FILE', 'INSERT INTO NC_SOURCE_FILE ( SCENARIO_ID,FILE_IDENTIFIER,SOURCE_INTAKE_ID,FILE_NAME,FILE_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.FILE_IDENTIFIER,t1.SOURCE_INTAKE_ID,t1.FILE_NAME,t1.FILE_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_SOURCE_FILE t1, M_SOURCE_FILE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.FILE_IDENTIFIER <> t2.FILE_IDENTIFIER OR ( t1.FILE_IDENTIFIER IS NULL AND t2.FILE_IDENTIFIER IS NOT NULL) OR (t1.FILE_IDENTIFIER IS NOT NULL AND t2.FILE_IDENTIFIER IS NULL)) OR (t1.SOURCE_INTAKE_ID <> t2.SOURCE_INTAKE_ID OR ( t1.SOURCE_INTAKE_ID IS NULL AND t2.SOURCE_INTAKE_ID IS NOT NULL) OR (t1.SOURCE_INTAKE_ID IS NOT NULL AND t2.SOURCE_INTAKE_ID IS NULL)) OR (t1.FILE_NAME <> t2.FILE_NAME OR ( t1.FILE_NAME IS NULL AND t2.FILE_NAME IS NOT NULL) OR (t1.FILE_NAME IS NOT NULL AND t2.FILE_NAME IS NULL)) OR (t1.FILE_DESCRIPTION <> t2.FILE_DESCRIPTION OR ( t1.FILE_DESCRIPTION IS NULL AND t2.FILE_DESCRIPTION IS NOT NULL) OR (t1.FILE_DESCRIPTION IS NOT NULL AND t2.FILE_DESCRIPTION IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOURCE_FILE', 'INSERT INTO NC_SOURCE_FILE ( SCENARIO_ID,FILE_IDENTIFIER,SOURCE_INTAKE_ID,FILE_NAME,FILE_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.FILE_IDENTIFIER,t1.SOURCE_INTAKE_ID,t1.FILE_NAME,t1.FILE_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_SOURCE_FILE t1, M_SOURCE_FILE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOURCE_INTAKE', 'INSERT INTO NC_SOURCE_INTAKE ( SCENARIO_ID,SOURCE_INTAKE_ID,SOURCE_TYPE_CD,SOURCE_TYPE_DESC,SOURCE_TYPE_NAME,SOURCE_PROVIDER_CD,SOURCE_FOLDER_TXT,SFTP_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOURCE_INTAKE_ID,SOURCE_TYPE_CD,SOURCE_TYPE_DESC,SOURCE_TYPE_NAME,SOURCE_PROVIDER_CD,SOURCE_FOLDER_TXT,SFTP_FLAG,''INSERT'',''VALID'' FROM IN_SOURCE_INTAKE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_SOURCE_INTAKE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SOURCE_INTAKE_ID = t2.SOURCE_INTAKE_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOURCE_INTAKE', 'INSERT INTO NC_SOURCE_INTAKE ( SCENARIO_ID,SOURCE_INTAKE_ID,SOURCE_TYPE_CD,SOURCE_TYPE_DESC,SOURCE_TYPE_NAME,SOURCE_PROVIDER_CD,SOURCE_FOLDER_TXT,SFTP_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SOURCE_INTAKE_ID,SOURCE_TYPE_CD,SOURCE_TYPE_DESC,SOURCE_TYPE_NAME,SOURCE_PROVIDER_CD,SOURCE_FOLDER_TXT,SFTP_FLAG,''DELETE'',''VALID'' FROM M_SOURCE_INTAKE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_SOURCE_INTAKE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SOURCE_INTAKE_ID = t2.SOURCE_INTAKE_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_SOURCE_INTAKE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SOURCE_INTAKE_ID = t2.SOURCE_INTAKE_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOURCE_INTAKE', 'INSERT INTO NC_SOURCE_INTAKE ( SCENARIO_ID,SOURCE_INTAKE_ID,SOURCE_TYPE_CD,SOURCE_TYPE_DESC,SOURCE_TYPE_NAME,SOURCE_PROVIDER_CD,SOURCE_FOLDER_TXT,SFTP_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOURCE_INTAKE_ID,t1.SOURCE_TYPE_CD,t1.SOURCE_TYPE_DESC,t1.SOURCE_TYPE_NAME,t1.SOURCE_PROVIDER_CD,t1.SOURCE_FOLDER_TXT,t1.SFTP_FLAG,''UPDATE'',''VALID'' FROM IN_SOURCE_INTAKE t1, M_SOURCE_INTAKE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SOURCE_INTAKE_ID = t2.SOURCE_INTAKE_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SOURCE_INTAKE_ID <> t2.SOURCE_INTAKE_ID OR ( t1.SOURCE_INTAKE_ID IS NULL AND t2.SOURCE_INTAKE_ID IS NOT NULL) OR (t1.SOURCE_INTAKE_ID IS NOT NULL AND t2.SOURCE_INTAKE_ID IS NULL)) OR (t1.SOURCE_TYPE_CD <> t2.SOURCE_TYPE_CD OR ( t1.SOURCE_TYPE_CD IS NULL AND t2.SOURCE_TYPE_CD IS NOT NULL) OR (t1.SOURCE_TYPE_CD IS NOT NULL AND t2.SOURCE_TYPE_CD IS NULL)) OR (t1.SOURCE_TYPE_DESC <> t2.SOURCE_TYPE_DESC OR ( t1.SOURCE_TYPE_DESC IS NULL AND t2.SOURCE_TYPE_DESC IS NOT NULL) OR (t1.SOURCE_TYPE_DESC IS NOT NULL AND t2.SOURCE_TYPE_DESC IS NULL)) OR (t1.SOURCE_TYPE_NAME <> t2.SOURCE_TYPE_NAME OR ( t1.SOURCE_TYPE_NAME IS NULL AND t2.SOURCE_TYPE_NAME IS NOT NULL) OR (t1.SOURCE_TYPE_NAME IS NOT NULL AND t2.SOURCE_TYPE_NAME IS NULL)) OR (t1.SOURCE_PROVIDER_CD <> t2.SOURCE_PROVIDER_CD OR ( t1.SOURCE_PROVIDER_CD IS NULL AND t2.SOURCE_PROVIDER_CD IS NOT NULL) OR (t1.SOURCE_PROVIDER_CD IS NOT NULL AND t2.SOURCE_PROVIDER_CD IS NULL)) OR (t1.SOURCE_FOLDER_TXT <> t2.SOURCE_FOLDER_TXT OR ( t1.SOURCE_FOLDER_TXT IS NULL AND t2.SOURCE_FOLDER_TXT IS NOT NULL) OR (t1.SOURCE_FOLDER_TXT IS NOT NULL AND t2.SOURCE_FOLDER_TXT IS NULL)) OR (t1.SFTP_FLAG <> t2.SFTP_FLAG OR ( t1.SFTP_FLAG IS NULL AND t2.SFTP_FLAG IS NOT NULL) OR (t1.SFTP_FLAG IS NOT NULL AND t2.SFTP_FLAG IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SOURCE_INTAKE', 'INSERT INTO NC_SOURCE_INTAKE ( SCENARIO_ID,SOURCE_INTAKE_ID,SOURCE_TYPE_CD,SOURCE_TYPE_DESC,SOURCE_TYPE_NAME,SOURCE_PROVIDER_CD,SOURCE_FOLDER_TXT,SFTP_FLAG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SOURCE_INTAKE_ID,t1.SOURCE_TYPE_CD,t1.SOURCE_TYPE_DESC,t1.SOURCE_TYPE_NAME,t1.SOURCE_PROVIDER_CD,t1.SOURCE_FOLDER_TXT,t1.SFTP_FLAG,''ACTIVATE'',''VALID'' FROM IN_SOURCE_INTAKE t1, M_SOURCE_INTAKE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SOURCE_INTAKE_ID = t2.SOURCE_INTAKE_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SRC_INTAKE', 'INSERT INTO NC_SRC_INTAKE ( SCENARIO_ID,SRC_Intake_ID,SRC_type_CD,SRC_type_DESC,SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SRC_Intake_ID,SRC_type_CD,SRC_type_DESC,SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,''INSERT'',''VALID'' FROM IN_SRC_INTAKE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_SRC_INTAKE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SRC_Intake_ID = t2.SRC_Intake_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SRC_INTAKE', 'INSERT INTO NC_SRC_INTAKE ( SCENARIO_ID,SRC_Intake_ID,SRC_type_CD,SRC_type_DESC,SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,SRC_Intake_ID,SRC_type_CD,SRC_type_DESC,SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,''DELETE'',''VALID'' FROM M_SRC_INTAKE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_SRC_INTAKE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SRC_Intake_ID = t2.SRC_Intake_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_SRC_INTAKE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SRC_Intake_ID = t2.SRC_Intake_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SRC_INTAKE', 'INSERT INTO NC_SRC_INTAKE ( SCENARIO_ID,SRC_Intake_ID,SRC_type_CD,SRC_type_DESC,SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SRC_Intake_ID,t1.SRC_type_CD,t1.SRC_type_DESC,t1.SRC_type_NAME,t1.SRC_PRVDR_CD,t1.SRC_FLDR_TXT,t1.SFTP_FLG,''UPDATE'',''VALID'' FROM IN_SRC_INTAKE t1, M_SRC_INTAKE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SRC_Intake_ID = t2.SRC_Intake_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.SRC_Intake_ID <> t2.SRC_Intake_ID OR ( t1.SRC_Intake_ID IS NULL AND t2.SRC_Intake_ID IS NOT NULL) OR (t1.SRC_Intake_ID IS NOT NULL AND t2.SRC_Intake_ID IS NULL)) OR (t1.SRC_type_CD <> t2.SRC_type_CD OR ( t1.SRC_type_CD IS NULL AND t2.SRC_type_CD IS NOT NULL) OR (t1.SRC_type_CD IS NOT NULL AND t2.SRC_type_CD IS NULL)) OR (t1.SRC_type_DESC <> t2.SRC_type_DESC OR ( t1.SRC_type_DESC IS NULL AND t2.SRC_type_DESC IS NOT NULL) OR (t1.SRC_type_DESC IS NOT NULL AND t2.SRC_type_DESC IS NULL)) OR (t1.SRC_type_NAME <> t2.SRC_type_NAME OR ( t1.SRC_type_NAME IS NULL AND t2.SRC_type_NAME IS NOT NULL) OR (t1.SRC_type_NAME IS NOT NULL AND t2.SRC_type_NAME IS NULL)) OR (t1.SRC_PRVDR_CD <> t2.SRC_PRVDR_CD OR ( t1.SRC_PRVDR_CD IS NULL AND t2.SRC_PRVDR_CD IS NOT NULL) OR (t1.SRC_PRVDR_CD IS NOT NULL AND t2.SRC_PRVDR_CD IS NULL)) OR (t1.SRC_FLDR_TXT <> t2.SRC_FLDR_TXT OR ( t1.SRC_FLDR_TXT IS NULL AND t2.SRC_FLDR_TXT IS NOT NULL) OR (t1.SRC_FLDR_TXT IS NOT NULL AND t2.SRC_FLDR_TXT IS NULL)) OR (t1.SFTP_FLG <> t2.SFTP_FLG OR ( t1.SFTP_FLG IS NULL AND t2.SFTP_FLG IS NOT NULL) OR (t1.SFTP_FLG IS NOT NULL AND t2.SFTP_FLG IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_SRC_INTAKE', 'INSERT INTO NC_SRC_INTAKE ( SCENARIO_ID,SRC_Intake_ID,SRC_type_CD,SRC_type_DESC,SRC_type_NAME,SRC_PRVDR_CD,SRC_FLDR_TXT,SFTP_FLG,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.SRC_Intake_ID,t1.SRC_type_CD,t1.SRC_type_DESC,t1.SRC_type_NAME,t1.SRC_PRVDR_CD,t1.SRC_FLDR_TXT,t1.SFTP_FLG,''ACTIVATE'',''VALID'' FROM IN_SRC_INTAKE t1, M_SRC_INTAKE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.SRC_Intake_ID = t2.SRC_Intake_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STATUS', 'INSERT INTO NC_STATUS ( SCENARIO_ID,STATUS_ID,STATUS_NM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STATUS_ID,STATUS_NM,''INSERT'',''VALID'' FROM IN_STATUS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STATUS_ID = t2.STATUS_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STATUS', 'INSERT INTO NC_STATUS ( SCENARIO_ID,STATUS_ID,STATUS_NM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STATUS_ID,STATUS_NM,''DELETE'',''VALID'' FROM M_STATUS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STATUS_ID = t2.STATUS_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_STATUS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STATUS_ID = t2.STATUS_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STATUS', 'INSERT INTO NC_STATUS ( SCENARIO_ID,STATUS_ID,STATUS_NM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STATUS_ID,t1.STATUS_NM,''UPDATE'',''VALID'' FROM IN_STATUS t1, M_STATUS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STATUS_ID = t2.STATUS_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.STATUS_ID <> t2.STATUS_ID OR ( t1.STATUS_ID IS NULL AND t2.STATUS_ID IS NOT NULL) OR (t1.STATUS_ID IS NOT NULL AND t2.STATUS_ID IS NULL)) OR (t1.STATUS_NM <> t2.STATUS_NM OR ( t1.STATUS_NM IS NULL AND t2.STATUS_NM IS NOT NULL) OR (t1.STATUS_NM IS NOT NULL AND t2.STATUS_NM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STATUS', 'INSERT INTO NC_STATUS ( SCENARIO_ID,STATUS_ID,STATUS_NM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STATUS_ID,t1.STATUS_NM,''ACTIVATE'',''VALID'' FROM IN_STATUS t1, M_STATUS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STATUS_ID = t2.STATUS_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR', 'INSERT INTO NC_STREET_ADDR ( SCENARIO_ID,STREET_ADDR_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STREET_ADDR_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,''INSERT'',''VALID'' FROM IN_STREET_ADDR t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_STREET_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_ID = t2.STREET_ADDR_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR', 'INSERT INTO NC_STREET_ADDR ( SCENARIO_ID,STREET_ADDR_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STREET_ADDR_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,''DELETE'',''VALID'' FROM M_STREET_ADDR t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STREET_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_ID = t2.STREET_ADDR_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_STREET_ADDR t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_ID = t2.STREET_ADDR_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR', 'INSERT INTO NC_STREET_ADDR ( SCENARIO_ID,STREET_ADDR_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STREET_ADDR_ID,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.ADDR_LINE_4_TXT,t1.ST_OR_PROV_CD,t1.CITY_NAME,t1.COUNTY,t1.CNTRY_CD,t1.POSTL_CD,t1.LAT_MEAS,t1.LNGTD_MEAS,t1.GEO_ACRCY_CD,t1.ORG_CD,t1.BLDG_ID,t1.SUB_BLDG_ID,t1.PREMS_CD,t1.Thoroughfare_CD,''UPDATE'',''VALID'' FROM IN_STREET_ADDR t1, M_STREET_ADDR t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_ID = t2.STREET_ADDR_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.STREET_ADDR_ID <> t2.STREET_ADDR_ID OR ( t1.STREET_ADDR_ID IS NULL AND t2.STREET_ADDR_ID IS NOT NULL) OR (t1.STREET_ADDR_ID IS NOT NULL AND t2.STREET_ADDR_ID IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.ADDR_LINE_4_TXT <> t2.ADDR_LINE_4_TXT OR ( t1.ADDR_LINE_4_TXT IS NULL AND t2.ADDR_LINE_4_TXT IS NOT NULL) OR (t1.ADDR_LINE_4_TXT IS NOT NULL AND t2.ADDR_LINE_4_TXT IS NULL)) OR (t1.ST_OR_PROV_CD <> t2.ST_OR_PROV_CD OR ( t1.ST_OR_PROV_CD IS NULL AND t2.ST_OR_PROV_CD IS NOT NULL) OR (t1.ST_OR_PROV_CD IS NOT NULL AND t2.ST_OR_PROV_CD IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.COUNTY <> t2.COUNTY OR ( t1.COUNTY IS NULL AND t2.COUNTY IS NOT NULL) OR (t1.COUNTY IS NOT NULL AND t2.COUNTY IS NULL)) OR (t1.CNTRY_CD <> t2.CNTRY_CD OR ( t1.CNTRY_CD IS NULL AND t2.CNTRY_CD IS NOT NULL) OR (t1.CNTRY_CD IS NOT NULL AND t2.CNTRY_CD IS NULL)) OR (t1.POSTL_CD <> t2.POSTL_CD OR ( t1.POSTL_CD IS NULL AND t2.POSTL_CD IS NOT NULL) OR (t1.POSTL_CD IS NOT NULL AND t2.POSTL_CD IS NULL)) OR (t1.LAT_MEAS <> t2.LAT_MEAS OR ( t1.LAT_MEAS IS NULL AND t2.LAT_MEAS IS NOT NULL) OR (t1.LAT_MEAS IS NOT NULL AND t2.LAT_MEAS IS NULL)) OR (t1.LNGTD_MEAS <> t2.LNGTD_MEAS OR ( t1.LNGTD_MEAS IS NULL AND t2.LNGTD_MEAS IS NOT NULL) OR (t1.LNGTD_MEAS IS NOT NULL AND t2.LNGTD_MEAS IS NULL)) OR (t1.GEO_ACRCY_CD <> t2.GEO_ACRCY_CD OR ( t1.GEO_ACRCY_CD IS NULL AND t2.GEO_ACRCY_CD IS NOT NULL) OR (t1.GEO_ACRCY_CD IS NOT NULL AND t2.GEO_ACRCY_CD IS NULL)) OR (t1.ORG_CD <> t2.ORG_CD OR ( t1.ORG_CD IS NULL AND t2.ORG_CD IS NOT NULL) OR (t1.ORG_CD IS NOT NULL AND t2.ORG_CD IS NULL)) OR (t1.BLDG_ID <> t2.BLDG_ID OR ( t1.BLDG_ID IS NULL AND t2.BLDG_ID IS NOT NULL) OR (t1.BLDG_ID IS NOT NULL AND t2.BLDG_ID IS NULL)) OR (t1.SUB_BLDG_ID <> t2.SUB_BLDG_ID OR ( t1.SUB_BLDG_ID IS NULL AND t2.SUB_BLDG_ID IS NOT NULL) OR (t1.SUB_BLDG_ID IS NOT NULL AND t2.SUB_BLDG_ID IS NULL)) OR (t1.PREMS_CD <> t2.PREMS_CD OR ( t1.PREMS_CD IS NULL AND t2.PREMS_CD IS NOT NULL) OR (t1.PREMS_CD IS NOT NULL AND t2.PREMS_CD IS NULL)) OR (t1.Thoroughfare_CD <> t2.Thoroughfare_CD OR ( t1.Thoroughfare_CD IS NULL AND t2.Thoroughfare_CD IS NOT NULL) OR (t1.Thoroughfare_CD IS NOT NULL AND t2.Thoroughfare_CD IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR', 'INSERT INTO NC_STREET_ADDR ( SCENARIO_ID,STREET_ADDR_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,COUNTY,CNTRY_CD,POSTL_CD,LAT_MEAS,LNGTD_MEAS,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,Thoroughfare_CD,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STREET_ADDR_ID,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.ADDR_LINE_4_TXT,t1.ST_OR_PROV_CD,t1.CITY_NAME,t1.COUNTY,t1.CNTRY_CD,t1.POSTL_CD,t1.LAT_MEAS,t1.LNGTD_MEAS,t1.GEO_ACRCY_CD,t1.ORG_CD,t1.BLDG_ID,t1.SUB_BLDG_ID,t1.PREMS_CD,t1.Thoroughfare_CD,''ACTIVATE'',''VALID'' FROM IN_STREET_ADDR t1, M_STREET_ADDR t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_ID = t2.STREET_ADDR_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR_RQST', 'INSERT INTO NC_STREET_ADDR_RQST ( SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,''INSERT'',''VALID'' FROM IN_STREET_ADDR_RQST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM STREET_ADDR_RQST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_RQST_ID = t2.STREET_ADDR_RQST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR_RQST', 'INSERT INTO NC_STREET_ADDR_RQST ( SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,''DELETE'',''VALID'' FROM STREET_ADDR_RQST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STREET_ADDR_RQST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_RQST_ID = t2.STREET_ADDR_RQST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_STREET_ADDR_RQST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_RQST_ID = t2.STREET_ADDR_RQST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR_RQST', 'INSERT INTO NC_STREET_ADDR_RQST ( SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STREET_ADDR_RQST_ID,t1.PRSNA_ID,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.ADDR_LINE_4_TXT,t1.ST_OR_PROV_CD,t1.CITY_NAME,t1.POSTL_CD,t1.LAT_MEAS,t1.LNGTD_MEAS,t1.CNTRY_CD,t1.GEO_ACRCY_CD,t1.ORG_CD,t1.BLDG_ID,t1.SUB_BLDG_ID,t1.PREMS_CD,t1.THOROUGHFARE_CD,t1.LOB_NUM,t1.DSTRCT_NAME,t1.CNTY_NAME,t1.ZIP_EXTN,''UPDATE'',''VALID'' FROM IN_STREET_ADDR_RQST t1, STREET_ADDR_RQST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_RQST_ID = t2.STREET_ADDR_RQST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.STREET_ADDR_RQST_ID <> t2.STREET_ADDR_RQST_ID OR ( t1.STREET_ADDR_RQST_ID IS NULL AND t2.STREET_ADDR_RQST_ID IS NOT NULL) OR (t1.STREET_ADDR_RQST_ID IS NOT NULL AND t2.STREET_ADDR_RQST_ID IS NULL)) OR (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.ADDR_LINE_4_TXT <> t2.ADDR_LINE_4_TXT OR ( t1.ADDR_LINE_4_TXT IS NULL AND t2.ADDR_LINE_4_TXT IS NOT NULL) OR (t1.ADDR_LINE_4_TXT IS NOT NULL AND t2.ADDR_LINE_4_TXT IS NULL)) OR (t1.ST_OR_PROV_CD <> t2.ST_OR_PROV_CD OR ( t1.ST_OR_PROV_CD IS NULL AND t2.ST_OR_PROV_CD IS NOT NULL) OR (t1.ST_OR_PROV_CD IS NOT NULL AND t2.ST_OR_PROV_CD IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.POSTL_CD <> t2.POSTL_CD OR ( t1.POSTL_CD IS NULL AND t2.POSTL_CD IS NOT NULL) OR (t1.POSTL_CD IS NOT NULL AND t2.POSTL_CD IS NULL)) OR (t1.LAT_MEAS <> t2.LAT_MEAS OR ( t1.LAT_MEAS IS NULL AND t2.LAT_MEAS IS NOT NULL) OR (t1.LAT_MEAS IS NOT NULL AND t2.LAT_MEAS IS NULL)) OR (t1.LNGTD_MEAS <> t2.LNGTD_MEAS OR ( t1.LNGTD_MEAS IS NULL AND t2.LNGTD_MEAS IS NOT NULL) OR (t1.LNGTD_MEAS IS NOT NULL AND t2.LNGTD_MEAS IS NULL)) OR (t1.CNTRY_CD <> t2.CNTRY_CD OR ( t1.CNTRY_CD IS NULL AND t2.CNTRY_CD IS NOT NULL) OR (t1.CNTRY_CD IS NOT NULL AND t2.CNTRY_CD IS NULL)) OR (t1.GEO_ACRCY_CD <> t2.GEO_ACRCY_CD OR ( t1.GEO_ACRCY_CD IS NULL AND t2.GEO_ACRCY_CD IS NOT NULL) OR (t1.GEO_ACRCY_CD IS NOT NULL AND t2.GEO_ACRCY_CD IS NULL)) OR (t1.ORG_CD <> t2.ORG_CD OR ( t1.ORG_CD IS NULL AND t2.ORG_CD IS NOT NULL) OR (t1.ORG_CD IS NOT NULL AND t2.ORG_CD IS NULL)) OR (t1.BLDG_ID <> t2.BLDG_ID OR ( t1.BLDG_ID IS NULL AND t2.BLDG_ID IS NOT NULL) OR (t1.BLDG_ID IS NOT NULL AND t2.BLDG_ID IS NULL)) OR (t1.SUB_BLDG_ID <> t2.SUB_BLDG_ID OR ( t1.SUB_BLDG_ID IS NULL AND t2.SUB_BLDG_ID IS NOT NULL) OR (t1.SUB_BLDG_ID IS NOT NULL AND t2.SUB_BLDG_ID IS NULL)) OR (t1.PREMS_CD <> t2.PREMS_CD OR ( t1.PREMS_CD IS NULL AND t2.PREMS_CD IS NOT NULL) OR (t1.PREMS_CD IS NOT NULL AND t2.PREMS_CD IS NULL)) OR (t1.THOROUGHFARE_CD <> t2.THOROUGHFARE_CD OR ( t1.THOROUGHFARE_CD IS NULL AND t2.THOROUGHFARE_CD IS NOT NULL) OR (t1.THOROUGHFARE_CD IS NOT NULL AND t2.THOROUGHFARE_CD IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.DSTRCT_NAME <> t2.DSTRCT_NAME OR ( t1.DSTRCT_NAME IS NULL AND t2.DSTRCT_NAME IS NOT NULL) OR (t1.DSTRCT_NAME IS NOT NULL AND t2.DSTRCT_NAME IS NULL)) OR (t1.CNTY_NAME <> t2.CNTY_NAME OR ( t1.CNTY_NAME IS NULL AND t2.CNTY_NAME IS NOT NULL) OR (t1.CNTY_NAME IS NOT NULL AND t2.CNTY_NAME IS NULL)) OR (t1.ZIP_EXTN <> t2.ZIP_EXTN OR ( t1.ZIP_EXTN IS NULL AND t2.ZIP_EXTN IS NOT NULL) OR (t1.ZIP_EXTN IS NOT NULL AND t2.ZIP_EXTN IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR_RQST', 'INSERT INTO NC_STREET_ADDR_RQST ( SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STREET_ADDR_RQST_ID,t1.PRSNA_ID,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.ADDR_LINE_4_TXT,t1.ST_OR_PROV_CD,t1.CITY_NAME,t1.POSTL_CD,t1.LAT_MEAS,t1.LNGTD_MEAS,t1.CNTRY_CD,t1.GEO_ACRCY_CD,t1.ORG_CD,t1.BLDG_ID,t1.SUB_BLDG_ID,t1.PREMS_CD,t1.THOROUGHFARE_CD,t1.LOB_NUM,t1.DSTRCT_NAME,t1.CNTY_NAME,t1.ZIP_EXTN,''ACTIVATE'',''VALID'' FROM IN_STREET_ADDR_RQST t1, STREET_ADDR_RQST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_RQST_ID = t2.STREET_ADDR_RQST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR_RSULT', 'INSERT INTO NC_STREET_ADDR_RSULT ( SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,ADDR_RSULT_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,ADDR_RSULT_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,''INSERT'',''VALID'' FROM IN_STREET_ADDR_RSULT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM STREET_ADDR_RSULT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_RQST_ID = t2.STREET_ADDR_RQST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR_RSULT', 'INSERT INTO NC_STREET_ADDR_RSULT ( SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,ADDR_RSULT_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,ADDR_RSULT_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,''DELETE'',''VALID'' FROM STREET_ADDR_RSULT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STREET_ADDR_RSULT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_RQST_ID = t2.STREET_ADDR_RQST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_STREET_ADDR_RSULT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_RQST_ID = t2.STREET_ADDR_RQST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR_RSULT', 'INSERT INTO NC_STREET_ADDR_RSULT ( SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,ADDR_RSULT_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STREET_ADDR_RQST_ID,t1.PRSNA_ID,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.ADDR_LINE_4_TXT,t1.ST_OR_PROV_CD,t1.CITY_NAME,t1.POSTL_CD,t1.LAT_MEAS,t1.LNGTD_MEAS,t1.CNTRY_CD,t1.GEO_ACRCY_CD,t1.ORG_CD,t1.BLDG_ID,t1.SUB_BLDG_ID,t1.PREMS_CD,t1.THOROUGHFARE_CD,t1.ADDR_RSULT_CD,t1.LOB_NUM,t1.DSTRCT_NAME,t1.CNTY_NAME,t1.ZIP_EXTN,''UPDATE'',''VALID'' FROM IN_STREET_ADDR_RSULT t1, STREET_ADDR_RSULT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_RQST_ID = t2.STREET_ADDR_RQST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.STREET_ADDR_RQST_ID <> t2.STREET_ADDR_RQST_ID OR ( t1.STREET_ADDR_RQST_ID IS NULL AND t2.STREET_ADDR_RQST_ID IS NOT NULL) OR (t1.STREET_ADDR_RQST_ID IS NOT NULL AND t2.STREET_ADDR_RQST_ID IS NULL)) OR (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.ADDR_LINE_1_TXT <> t2.ADDR_LINE_1_TXT OR ( t1.ADDR_LINE_1_TXT IS NULL AND t2.ADDR_LINE_1_TXT IS NOT NULL) OR (t1.ADDR_LINE_1_TXT IS NOT NULL AND t2.ADDR_LINE_1_TXT IS NULL)) OR (t1.ADDR_LINE_2_TXT <> t2.ADDR_LINE_2_TXT OR ( t1.ADDR_LINE_2_TXT IS NULL AND t2.ADDR_LINE_2_TXT IS NOT NULL) OR (t1.ADDR_LINE_2_TXT IS NOT NULL AND t2.ADDR_LINE_2_TXT IS NULL)) OR (t1.ADDR_LINE_3_TXT <> t2.ADDR_LINE_3_TXT OR ( t1.ADDR_LINE_3_TXT IS NULL AND t2.ADDR_LINE_3_TXT IS NOT NULL) OR (t1.ADDR_LINE_3_TXT IS NOT NULL AND t2.ADDR_LINE_3_TXT IS NULL)) OR (t1.ADDR_LINE_4_TXT <> t2.ADDR_LINE_4_TXT OR ( t1.ADDR_LINE_4_TXT IS NULL AND t2.ADDR_LINE_4_TXT IS NOT NULL) OR (t1.ADDR_LINE_4_TXT IS NOT NULL AND t2.ADDR_LINE_4_TXT IS NULL)) OR (t1.ST_OR_PROV_CD <> t2.ST_OR_PROV_CD OR ( t1.ST_OR_PROV_CD IS NULL AND t2.ST_OR_PROV_CD IS NOT NULL) OR (t1.ST_OR_PROV_CD IS NOT NULL AND t2.ST_OR_PROV_CD IS NULL)) OR (t1.CITY_NAME <> t2.CITY_NAME OR ( t1.CITY_NAME IS NULL AND t2.CITY_NAME IS NOT NULL) OR (t1.CITY_NAME IS NOT NULL AND t2.CITY_NAME IS NULL)) OR (t1.POSTL_CD <> t2.POSTL_CD OR ( t1.POSTL_CD IS NULL AND t2.POSTL_CD IS NOT NULL) OR (t1.POSTL_CD IS NOT NULL AND t2.POSTL_CD IS NULL)) OR (t1.LAT_MEAS <> t2.LAT_MEAS OR ( t1.LAT_MEAS IS NULL AND t2.LAT_MEAS IS NOT NULL) OR (t1.LAT_MEAS IS NOT NULL AND t2.LAT_MEAS IS NULL)) OR (t1.LNGTD_MEAS <> t2.LNGTD_MEAS OR ( t1.LNGTD_MEAS IS NULL AND t2.LNGTD_MEAS IS NOT NULL) OR (t1.LNGTD_MEAS IS NOT NULL AND t2.LNGTD_MEAS IS NULL)) OR (t1.CNTRY_CD <> t2.CNTRY_CD OR ( t1.CNTRY_CD IS NULL AND t2.CNTRY_CD IS NOT NULL) OR (t1.CNTRY_CD IS NOT NULL AND t2.CNTRY_CD IS NULL)) OR (t1.GEO_ACRCY_CD <> t2.GEO_ACRCY_CD OR ( t1.GEO_ACRCY_CD IS NULL AND t2.GEO_ACRCY_CD IS NOT NULL) OR (t1.GEO_ACRCY_CD IS NOT NULL AND t2.GEO_ACRCY_CD IS NULL)) OR (t1.ORG_CD <> t2.ORG_CD OR ( t1.ORG_CD IS NULL AND t2.ORG_CD IS NOT NULL) OR (t1.ORG_CD IS NOT NULL AND t2.ORG_CD IS NULL)) OR (t1.BLDG_ID <> t2.BLDG_ID OR ( t1.BLDG_ID IS NULL AND t2.BLDG_ID IS NOT NULL) OR (t1.BLDG_ID IS NOT NULL AND t2.BLDG_ID IS NULL)) OR (t1.SUB_BLDG_ID <> t2.SUB_BLDG_ID OR ( t1.SUB_BLDG_ID IS NULL AND t2.SUB_BLDG_ID IS NOT NULL) OR (t1.SUB_BLDG_ID IS NOT NULL AND t2.SUB_BLDG_ID IS NULL)) OR (t1.PREMS_CD <> t2.PREMS_CD OR ( t1.PREMS_CD IS NULL AND t2.PREMS_CD IS NOT NULL) OR (t1.PREMS_CD IS NOT NULL AND t2.PREMS_CD IS NULL)) OR (t1.THOROUGHFARE_CD <> t2.THOROUGHFARE_CD OR ( t1.THOROUGHFARE_CD IS NULL AND t2.THOROUGHFARE_CD IS NOT NULL) OR (t1.THOROUGHFARE_CD IS NOT NULL AND t2.THOROUGHFARE_CD IS NULL)) OR (t1.ADDR_RSULT_CD <> t2.ADDR_RSULT_CD OR ( t1.ADDR_RSULT_CD IS NULL AND t2.ADDR_RSULT_CD IS NOT NULL) OR (t1.ADDR_RSULT_CD IS NOT NULL AND t2.ADDR_RSULT_CD IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.DSTRCT_NAME <> t2.DSTRCT_NAME OR ( t1.DSTRCT_NAME IS NULL AND t2.DSTRCT_NAME IS NOT NULL) OR (t1.DSTRCT_NAME IS NOT NULL AND t2.DSTRCT_NAME IS NULL)) OR (t1.CNTY_NAME <> t2.CNTY_NAME OR ( t1.CNTY_NAME IS NULL AND t2.CNTY_NAME IS NOT NULL) OR (t1.CNTY_NAME IS NOT NULL AND t2.CNTY_NAME IS NULL)) OR (t1.ZIP_EXTN <> t2.ZIP_EXTN OR ( t1.ZIP_EXTN IS NULL AND t2.ZIP_EXTN IS NOT NULL) OR (t1.ZIP_EXTN IS NOT NULL AND t2.ZIP_EXTN IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STREET_ADDR_RSULT', 'INSERT INTO NC_STREET_ADDR_RSULT ( SCENARIO_ID,STREET_ADDR_RQST_ID,PRSNA_ID,ADDR_LINE_1_TXT,ADDR_LINE_2_TXT,ADDR_LINE_3_TXT,ADDR_LINE_4_TXT,ST_OR_PROV_CD,CITY_NAME,POSTL_CD,LAT_MEAS,LNGTD_MEAS,CNTRY_CD,GEO_ACRCY_CD,ORG_CD,BLDG_ID,SUB_BLDG_ID,PREMS_CD,THOROUGHFARE_CD,ADDR_RSULT_CD,LOB_NUM,DSTRCT_NAME,CNTY_NAME,ZIP_EXTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.STREET_ADDR_RQST_ID,t1.PRSNA_ID,t1.ADDR_LINE_1_TXT,t1.ADDR_LINE_2_TXT,t1.ADDR_LINE_3_TXT,t1.ADDR_LINE_4_TXT,t1.ST_OR_PROV_CD,t1.CITY_NAME,t1.POSTL_CD,t1.LAT_MEAS,t1.LNGTD_MEAS,t1.CNTRY_CD,t1.GEO_ACRCY_CD,t1.ORG_CD,t1.BLDG_ID,t1.SUB_BLDG_ID,t1.PREMS_CD,t1.THOROUGHFARE_CD,t1.ADDR_RSULT_CD,t1.LOB_NUM,t1.DSTRCT_NAME,t1.CNTY_NAME,t1.ZIP_EXTN,''ACTIVATE'',''VALID'' FROM IN_STREET_ADDR_RSULT t1, STREET_ADDR_RSULT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.STREET_ADDR_RQST_ID = t2.STREET_ADDR_RQST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_MAP', 'INSERT INTO NC_STANDARD_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''INSERT'',''VALID'' FROM IN_STANDARD_MAP t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_STANDARD_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_MAP', 'INSERT INTO NC_STANDARD_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,''DELETE'',''VALID'' FROM MST_STANDARD_MAP t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_STANDARD_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_STANDARD_MAP t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_MAP', 'INSERT INTO NC_STANDARD_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''UPDATE'',''VALID'' FROM IN_STANDARD_MAP t1, MST_STANDARD_MAP t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Source_Code <> t2.Source_Code OR ( t1.Source_Code IS NULL AND t2.Source_Code IS NOT NULL) OR (t1.Source_Code IS NOT NULL AND t2.Source_Code IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Domain_Id <> t2.Domain_Id OR ( t1.Domain_Id IS NULL AND t2.Domain_Id IS NOT NULL) OR (t1.Domain_Id IS NOT NULL AND t2.Domain_Id IS NULL)) OR (t1.Code_Set_Id <> t2.Code_Set_Id OR ( t1.Code_Set_Id IS NULL AND t2.Code_Set_Id IS NOT NULL) OR (t1.Code_Set_Id IS NOT NULL AND t2.Code_Set_Id IS NULL)) OR (t1.EDW_Code <> t2.EDW_Code OR ( t1.EDW_Code IS NULL AND t2.EDW_Code IS NOT NULL) OR (t1.EDW_Code IS NOT NULL AND t2.EDW_Code IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) OR (t1.Source_Code_Value_Id <> t2.Source_Code_Value_Id OR ( t1.Source_Code_Value_Id IS NULL AND t2.Source_Code_Value_Id IS NOT NULL) OR (t1.Source_Code_Value_Id IS NOT NULL AND t2.Source_Code_Value_Id IS NULL)) OR (t1.Other_Description <> t2.Other_Description OR ( t1.Other_Description IS NULL AND t2.Other_Description IS NOT NULL) OR (t1.Other_Description IS NOT NULL AND t2.Other_Description IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_STANDARD_MAP', 'INSERT INTO NC_STANDARD_MAP ( SCENARIO_ID,Source_Code,Ctl_Id,Domain_Id,Code_Set_Id,EDW_Code,Description,Start_Date,End_Date,Record_Deleted_Flag,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,Source_Code_Value_Id,OTHER_DESCRIPTION,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Source_Code,t1.Ctl_Id,t1.Domain_Id,t1.Code_Set_Id,t1.EDW_Code,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,t1.Source_Code_Value_Id,t1.OTHER_DESCRIPTION,''ACTIVATE'',''VALID'' FROM IN_STANDARD_MAP t1, MST_STANDARD_MAP t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Ctl_Id = t2.Ctl_Id AND t1.Code_Set_Id = t2.Code_Set_Id AND t1.Source_Code = t2.Source_Code AND t1.EDW_Code = t2.EDW_Code AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM', 'INSERT INTO NC_TEL_NUM ( SCENARIO_ID,TEL_NUM_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TEL_NUM_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,''INSERT'',''VALID'' FROM IN_TEL_NUM t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_TEL_NUM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TEL_NUM_ID = t2.TEL_NUM_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM', 'INSERT INTO NC_TEL_NUM ( SCENARIO_ID,TEL_NUM_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TEL_NUM_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,''DELETE'',''VALID'' FROM M_TEL_NUM t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TEL_NUM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TEL_NUM_ID = t2.TEL_NUM_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_TEL_NUM t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TEL_NUM_ID = t2.TEL_NUM_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM', 'INSERT INTO NC_TEL_NUM ( SCENARIO_ID,TEL_NUM_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TEL_NUM_ID,t1.TEL_CTRY_CD_NUM,t1.TEL_AREA_CD_NUM,t1.TEL_EXCH_NUM,t1.TEL_LINE_NUM,t1.TEL_EXTN_NUM,t1.TEL_E164_NUM,t1.TEL_SRC_NUM,t1.TEL_SUB_TYPE_CD,t1.SMS_CPBL_IND,''UPDATE'',''VALID'' FROM IN_TEL_NUM t1, M_TEL_NUM t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TEL_NUM_ID = t2.TEL_NUM_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TEL_NUM_ID <> t2.TEL_NUM_ID OR ( t1.TEL_NUM_ID IS NULL AND t2.TEL_NUM_ID IS NOT NULL) OR (t1.TEL_NUM_ID IS NOT NULL AND t2.TEL_NUM_ID IS NULL)) OR (t1.TEL_CTRY_CD_NUM <> t2.TEL_CTRY_CD_NUM OR ( t1.TEL_CTRY_CD_NUM IS NULL AND t2.TEL_CTRY_CD_NUM IS NOT NULL) OR (t1.TEL_CTRY_CD_NUM IS NOT NULL AND t2.TEL_CTRY_CD_NUM IS NULL)) OR (t1.TEL_AREA_CD_NUM <> t2.TEL_AREA_CD_NUM OR ( t1.TEL_AREA_CD_NUM IS NULL AND t2.TEL_AREA_CD_NUM IS NOT NULL) OR (t1.TEL_AREA_CD_NUM IS NOT NULL AND t2.TEL_AREA_CD_NUM IS NULL)) OR (t1.TEL_EXCH_NUM <> t2.TEL_EXCH_NUM OR ( t1.TEL_EXCH_NUM IS NULL AND t2.TEL_EXCH_NUM IS NOT NULL) OR (t1.TEL_EXCH_NUM IS NOT NULL AND t2.TEL_EXCH_NUM IS NULL)) OR (t1.TEL_LINE_NUM <> t2.TEL_LINE_NUM OR ( t1.TEL_LINE_NUM IS NULL AND t2.TEL_LINE_NUM IS NOT NULL) OR (t1.TEL_LINE_NUM IS NOT NULL AND t2.TEL_LINE_NUM IS NULL)) OR (t1.TEL_EXTN_NUM <> t2.TEL_EXTN_NUM OR ( t1.TEL_EXTN_NUM IS NULL AND t2.TEL_EXTN_NUM IS NOT NULL) OR (t1.TEL_EXTN_NUM IS NOT NULL AND t2.TEL_EXTN_NUM IS NULL)) OR (t1.TEL_E164_NUM <> t2.TEL_E164_NUM OR ( t1.TEL_E164_NUM IS NULL AND t2.TEL_E164_NUM IS NOT NULL) OR (t1.TEL_E164_NUM IS NOT NULL AND t2.TEL_E164_NUM IS NULL)) OR (t1.TEL_SRC_NUM <> t2.TEL_SRC_NUM OR ( t1.TEL_SRC_NUM IS NULL AND t2.TEL_SRC_NUM IS NOT NULL) OR (t1.TEL_SRC_NUM IS NOT NULL AND t2.TEL_SRC_NUM IS NULL)) OR (t1.TEL_SUB_TYPE_CD <> t2.TEL_SUB_TYPE_CD OR ( t1.TEL_SUB_TYPE_CD IS NULL AND t2.TEL_SUB_TYPE_CD IS NOT NULL) OR (t1.TEL_SUB_TYPE_CD IS NOT NULL AND t2.TEL_SUB_TYPE_CD IS NULL)) OR (t1.SMS_CPBL_IND <> t2.SMS_CPBL_IND OR ( t1.SMS_CPBL_IND IS NULL AND t2.SMS_CPBL_IND IS NOT NULL) OR (t1.SMS_CPBL_IND IS NOT NULL AND t2.SMS_CPBL_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM', 'INSERT INTO NC_TEL_NUM ( SCENARIO_ID,TEL_NUM_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,SMS_CPBL_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TEL_NUM_ID,t1.TEL_CTRY_CD_NUM,t1.TEL_AREA_CD_NUM,t1.TEL_EXCH_NUM,t1.TEL_LINE_NUM,t1.TEL_EXTN_NUM,t1.TEL_E164_NUM,t1.TEL_SRC_NUM,t1.TEL_SUB_TYPE_CD,t1.SMS_CPBL_IND,''ACTIVATE'',''VALID'' FROM IN_TEL_NUM t1, M_TEL_NUM t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TEL_NUM_ID = t2.TEL_NUM_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM_RQST', 'INSERT INTO NC_TEL_NUM_RQST ( SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,LOB_NUM,''INSERT'',''VALID'' FROM IN_TEL_NUM_RQST t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM TEL_NUM_RQST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TEL_NUM_RQST_ID = t2.TEL_NUM_RQST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM_RQST', 'INSERT INTO NC_TEL_NUM_RQST ( SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,LOB_NUM,''DELETE'',''VALID'' FROM TEL_NUM_RQST t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TEL_NUM_RQST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TEL_NUM_RQST_ID = t2.TEL_NUM_RQST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_TEL_NUM_RQST t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TEL_NUM_RQST_ID = t2.TEL_NUM_RQST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM_RQST', 'INSERT INTO NC_TEL_NUM_RQST ( SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TEL_NUM_RQST_ID,t1.PRSNA_ID,t1.TEL_CTRY_CD_NUM,t1.TEL_AREA_CD_NUM,t1.TEL_EXCH_NUM,t1.TEL_LINE_NUM,t1.TEL_EXTN_NUM,t1.TEL_E164_NUM,t1.TEL_SRC_NUM,t1.TEL_SUB_TYPE_CD,t1.LOB_NUM,''UPDATE'',''VALID'' FROM IN_TEL_NUM_RQST t1, TEL_NUM_RQST t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TEL_NUM_RQST_ID = t2.TEL_NUM_RQST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TEL_NUM_RQST_ID <> t2.TEL_NUM_RQST_ID OR ( t1.TEL_NUM_RQST_ID IS NULL AND t2.TEL_NUM_RQST_ID IS NOT NULL) OR (t1.TEL_NUM_RQST_ID IS NOT NULL AND t2.TEL_NUM_RQST_ID IS NULL)) OR (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.TEL_CTRY_CD_NUM <> t2.TEL_CTRY_CD_NUM OR ( t1.TEL_CTRY_CD_NUM IS NULL AND t2.TEL_CTRY_CD_NUM IS NOT NULL) OR (t1.TEL_CTRY_CD_NUM IS NOT NULL AND t2.TEL_CTRY_CD_NUM IS NULL)) OR (t1.TEL_AREA_CD_NUM <> t2.TEL_AREA_CD_NUM OR ( t1.TEL_AREA_CD_NUM IS NULL AND t2.TEL_AREA_CD_NUM IS NOT NULL) OR (t1.TEL_AREA_CD_NUM IS NOT NULL AND t2.TEL_AREA_CD_NUM IS NULL)) OR (t1.TEL_EXCH_NUM <> t2.TEL_EXCH_NUM OR ( t1.TEL_EXCH_NUM IS NULL AND t2.TEL_EXCH_NUM IS NOT NULL) OR (t1.TEL_EXCH_NUM IS NOT NULL AND t2.TEL_EXCH_NUM IS NULL)) OR (t1.TEL_LINE_NUM <> t2.TEL_LINE_NUM OR ( t1.TEL_LINE_NUM IS NULL AND t2.TEL_LINE_NUM IS NOT NULL) OR (t1.TEL_LINE_NUM IS NOT NULL AND t2.TEL_LINE_NUM IS NULL)) OR (t1.TEL_EXTN_NUM <> t2.TEL_EXTN_NUM OR ( t1.TEL_EXTN_NUM IS NULL AND t2.TEL_EXTN_NUM IS NOT NULL) OR (t1.TEL_EXTN_NUM IS NOT NULL AND t2.TEL_EXTN_NUM IS NULL)) OR (t1.TEL_E164_NUM <> t2.TEL_E164_NUM OR ( t1.TEL_E164_NUM IS NULL AND t2.TEL_E164_NUM IS NOT NULL) OR (t1.TEL_E164_NUM IS NOT NULL AND t2.TEL_E164_NUM IS NULL)) OR (t1.TEL_SRC_NUM <> t2.TEL_SRC_NUM OR ( t1.TEL_SRC_NUM IS NULL AND t2.TEL_SRC_NUM IS NOT NULL) OR (t1.TEL_SRC_NUM IS NOT NULL AND t2.TEL_SRC_NUM IS NULL)) OR (t1.TEL_SUB_TYPE_CD <> t2.TEL_SUB_TYPE_CD OR ( t1.TEL_SUB_TYPE_CD IS NULL AND t2.TEL_SUB_TYPE_CD IS NOT NULL) OR (t1.TEL_SUB_TYPE_CD IS NOT NULL AND t2.TEL_SUB_TYPE_CD IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM_RQST', 'INSERT INTO NC_TEL_NUM_RQST ( SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TEL_NUM_RQST_ID,t1.PRSNA_ID,t1.TEL_CTRY_CD_NUM,t1.TEL_AREA_CD_NUM,t1.TEL_EXCH_NUM,t1.TEL_LINE_NUM,t1.TEL_EXTN_NUM,t1.TEL_E164_NUM,t1.TEL_SRC_NUM,t1.TEL_SUB_TYPE_CD,t1.LOB_NUM,''ACTIVATE'',''VALID'' FROM IN_TEL_NUM_RQST t1, TEL_NUM_RQST t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.TEL_NUM_RQST_ID = t2.TEL_NUM_RQST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM_RSULT', 'INSERT INTO NC_TEL_NUM_RSULT ( SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,ADDR_RSULT_CD,TEL_NATL_FMT_NUM,TEL_TM_ZN_CD,TEL_OFFLN_GEOCODE_LOC_CD,TEL_INTRNATL_FMT_NUM,US_OUT_OF_CTRY_FMT_NUM,CH_OUT_OF_CTRY_FMT_NUM,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,ADDR_RSULT_CD,TEL_NATL_FMT_NUM,TEL_TM_ZN_CD,TEL_OFFLN_GEOCODE_LOC_CD,TEL_INTRNATL_FMT_NUM,US_OUT_OF_CTRY_FMT_NUM,CH_OUT_OF_CTRY_FMT_NUM,LOB_NUM,''INSERT'',''VALID'' FROM IN_TEL_NUM_RSULT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM TEL_NUM_RSULT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM_RSULT', 'INSERT INTO NC_TEL_NUM_RSULT ( SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,ADDR_RSULT_CD,TEL_NATL_FMT_NUM,TEL_TM_ZN_CD,TEL_OFFLN_GEOCODE_LOC_CD,TEL_INTRNATL_FMT_NUM,US_OUT_OF_CTRY_FMT_NUM,CH_OUT_OF_CTRY_FMT_NUM,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,ADDR_RSULT_CD,TEL_NATL_FMT_NUM,TEL_TM_ZN_CD,TEL_OFFLN_GEOCODE_LOC_CD,TEL_INTRNATL_FMT_NUM,US_OUT_OF_CTRY_FMT_NUM,CH_OUT_OF_CTRY_FMT_NUM,LOB_NUM,''DELETE'',''VALID'' FROM TEL_NUM_RSULT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TEL_NUM_RSULT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_TEL_NUM_RSULT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID ));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM_RSULT', 'INSERT INTO NC_TEL_NUM_RSULT ( SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,ADDR_RSULT_CD,TEL_NATL_FMT_NUM,TEL_TM_ZN_CD,TEL_OFFLN_GEOCODE_LOC_CD,TEL_INTRNATL_FMT_NUM,US_OUT_OF_CTRY_FMT_NUM,CH_OUT_OF_CTRY_FMT_NUM,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TEL_NUM_RQST_ID,t1.PRSNA_ID,t1.TEL_CTRY_CD_NUM,t1.TEL_AREA_CD_NUM,t1.TEL_EXCH_NUM,t1.TEL_LINE_NUM,t1.TEL_EXTN_NUM,t1.TEL_E164_NUM,t1.TEL_SRC_NUM,t1.TEL_SUB_TYPE_CD,t1.ADDR_RSULT_CD,t1.TEL_NATL_FMT_NUM,t1.TEL_TM_ZN_CD,t1.TEL_OFFLN_GEOCODE_LOC_CD,t1.TEL_INTRNATL_FMT_NUM,t1.US_OUT_OF_CTRY_FMT_NUM,t1.CH_OUT_OF_CTRY_FMT_NUM,t1.LOB_NUM,''UPDATE'',''VALID'' FROM IN_TEL_NUM_RSULT t1, TEL_NUM_RSULT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.TEL_NUM_RQST_ID <> t2.TEL_NUM_RQST_ID OR ( t1.TEL_NUM_RQST_ID IS NULL AND t2.TEL_NUM_RQST_ID IS NOT NULL) OR (t1.TEL_NUM_RQST_ID IS NOT NULL AND t2.TEL_NUM_RQST_ID IS NULL)) OR (t1.PRSNA_ID <> t2.PRSNA_ID OR ( t1.PRSNA_ID IS NULL AND t2.PRSNA_ID IS NOT NULL) OR (t1.PRSNA_ID IS NOT NULL AND t2.PRSNA_ID IS NULL)) OR (t1.TEL_CTRY_CD_NUM <> t2.TEL_CTRY_CD_NUM OR ( t1.TEL_CTRY_CD_NUM IS NULL AND t2.TEL_CTRY_CD_NUM IS NOT NULL) OR (t1.TEL_CTRY_CD_NUM IS NOT NULL AND t2.TEL_CTRY_CD_NUM IS NULL)) OR (t1.TEL_AREA_CD_NUM <> t2.TEL_AREA_CD_NUM OR ( t1.TEL_AREA_CD_NUM IS NULL AND t2.TEL_AREA_CD_NUM IS NOT NULL) OR (t1.TEL_AREA_CD_NUM IS NOT NULL AND t2.TEL_AREA_CD_NUM IS NULL)) OR (t1.TEL_EXCH_NUM <> t2.TEL_EXCH_NUM OR ( t1.TEL_EXCH_NUM IS NULL AND t2.TEL_EXCH_NUM IS NOT NULL) OR (t1.TEL_EXCH_NUM IS NOT NULL AND t2.TEL_EXCH_NUM IS NULL)) OR (t1.TEL_LINE_NUM <> t2.TEL_LINE_NUM OR ( t1.TEL_LINE_NUM IS NULL AND t2.TEL_LINE_NUM IS NOT NULL) OR (t1.TEL_LINE_NUM IS NOT NULL AND t2.TEL_LINE_NUM IS NULL)) OR (t1.TEL_EXTN_NUM <> t2.TEL_EXTN_NUM OR ( t1.TEL_EXTN_NUM IS NULL AND t2.TEL_EXTN_NUM IS NOT NULL) OR (t1.TEL_EXTN_NUM IS NOT NULL AND t2.TEL_EXTN_NUM IS NULL)) OR (t1.TEL_E164_NUM <> t2.TEL_E164_NUM OR ( t1.TEL_E164_NUM IS NULL AND t2.TEL_E164_NUM IS NOT NULL) OR (t1.TEL_E164_NUM IS NOT NULL AND t2.TEL_E164_NUM IS NULL)) OR (t1.TEL_SRC_NUM <> t2.TEL_SRC_NUM OR ( t1.TEL_SRC_NUM IS NULL AND t2.TEL_SRC_NUM IS NOT NULL) OR (t1.TEL_SRC_NUM IS NOT NULL AND t2.TEL_SRC_NUM IS NULL)) OR (t1.TEL_SUB_TYPE_CD <> t2.TEL_SUB_TYPE_CD OR ( t1.TEL_SUB_TYPE_CD IS NULL AND t2.TEL_SUB_TYPE_CD IS NOT NULL) OR (t1.TEL_SUB_TYPE_CD IS NOT NULL AND t2.TEL_SUB_TYPE_CD IS NULL)) OR (t1.ADDR_RSULT_CD <> t2.ADDR_RSULT_CD OR ( t1.ADDR_RSULT_CD IS NULL AND t2.ADDR_RSULT_CD IS NOT NULL) OR (t1.ADDR_RSULT_CD IS NOT NULL AND t2.ADDR_RSULT_CD IS NULL)) OR (t1.TEL_NATL_FMT_NUM <> t2.TEL_NATL_FMT_NUM OR ( t1.TEL_NATL_FMT_NUM IS NULL AND t2.TEL_NATL_FMT_NUM IS NOT NULL) OR (t1.TEL_NATL_FMT_NUM IS NOT NULL AND t2.TEL_NATL_FMT_NUM IS NULL)) OR (t1.TEL_TM_ZN_CD <> t2.TEL_TM_ZN_CD OR ( t1.TEL_TM_ZN_CD IS NULL AND t2.TEL_TM_ZN_CD IS NOT NULL) OR (t1.TEL_TM_ZN_CD IS NOT NULL AND t2.TEL_TM_ZN_CD IS NULL)) OR (t1.TEL_OFFLN_GEOCODE_LOC_CD <> t2.TEL_OFFLN_GEOCODE_LOC_CD OR ( t1.TEL_OFFLN_GEOCODE_LOC_CD IS NULL AND t2.TEL_OFFLN_GEOCODE_LOC_CD IS NOT NULL) OR (t1.TEL_OFFLN_GEOCODE_LOC_CD IS NOT NULL AND t2.TEL_OFFLN_GEOCODE_LOC_CD IS NULL)) OR (t1.TEL_INTRNATL_FMT_NUM <> t2.TEL_INTRNATL_FMT_NUM OR ( t1.TEL_INTRNATL_FMT_NUM IS NULL AND t2.TEL_INTRNATL_FMT_NUM IS NOT NULL) OR (t1.TEL_INTRNATL_FMT_NUM IS NOT NULL AND t2.TEL_INTRNATL_FMT_NUM IS NULL)) OR (t1.US_OUT_OF_CTRY_FMT_NUM <> t2.US_OUT_OF_CTRY_FMT_NUM OR ( t1.US_OUT_OF_CTRY_FMT_NUM IS NULL AND t2.US_OUT_OF_CTRY_FMT_NUM IS NOT NULL) OR (t1.US_OUT_OF_CTRY_FMT_NUM IS NOT NULL AND t2.US_OUT_OF_CTRY_FMT_NUM IS NULL)) OR (t1.CH_OUT_OF_CTRY_FMT_NUM <> t2.CH_OUT_OF_CTRY_FMT_NUM OR ( t1.CH_OUT_OF_CTRY_FMT_NUM IS NULL AND t2.CH_OUT_OF_CTRY_FMT_NUM IS NOT NULL) OR (t1.CH_OUT_OF_CTRY_FMT_NUM IS NOT NULL AND t2.CH_OUT_OF_CTRY_FMT_NUM IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TEL_NUM_RSULT', 'INSERT INTO NC_TEL_NUM_RSULT ( SCENARIO_ID,TEL_NUM_RQST_ID,PRSNA_ID,TEL_CTRY_CD_NUM,TEL_AREA_CD_NUM,TEL_EXCH_NUM,TEL_LINE_NUM,TEL_EXTN_NUM,TEL_E164_NUM,TEL_SRC_NUM,TEL_SUB_TYPE_CD,ADDR_RSULT_CD,TEL_NATL_FMT_NUM,TEL_TM_ZN_CD,TEL_OFFLN_GEOCODE_LOC_CD,TEL_INTRNATL_FMT_NUM,US_OUT_OF_CTRY_FMT_NUM,CH_OUT_OF_CTRY_FMT_NUM,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.TEL_NUM_RQST_ID,t1.PRSNA_ID,t1.TEL_CTRY_CD_NUM,t1.TEL_AREA_CD_NUM,t1.TEL_EXCH_NUM,t1.TEL_LINE_NUM,t1.TEL_EXTN_NUM,t1.TEL_E164_NUM,t1.TEL_SRC_NUM,t1.TEL_SUB_TYPE_CD,t1.ADDR_RSULT_CD,t1.TEL_NATL_FMT_NUM,t1.TEL_TM_ZN_CD,t1.TEL_OFFLN_GEOCODE_LOC_CD,t1.TEL_INTRNATL_FMT_NUM,t1.US_OUT_OF_CTRY_FMT_NUM,t1.CH_OUT_OF_CTRY_FMT_NUM,t1.LOB_NUM,''ACTIVATE'',''VALID'' FROM IN_TEL_NUM_RSULT t1, TEL_NUM_RSULT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TMAT_ACCT_VEH', 'INSERT INTO NC_TMAT_ACCT_VEH ( SCENARIO_ID,VEH_ID,ACCT_ID,CUST_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,ACCT_VEH_EFF_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,FRST_OWNR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,ACCT_ID,CUST_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,ACCT_VEH_EFF_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,FRST_OWNR_IND,''INSERT'',''VALID'' FROM IN_TMAT_ACCT_VEH t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_TMAT_ACCT_VEH t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_VEH_EFF_STRT_DT = t2.ACCT_VEH_EFF_STRT_DT AND t1.VEH_ID = t2.VEH_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TMAT_ACCT_VEH', 'INSERT INTO NC_TMAT_ACCT_VEH ( SCENARIO_ID,VEH_ID,ACCT_ID,CUST_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,ACCT_VEH_EFF_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,FRST_OWNR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,ACCT_ID,CUST_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,ACCT_VEH_EFF_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,FRST_OWNR_IND,''DELETE'',''VALID'' FROM M_TMAT_ACCT_VEH t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_TMAT_ACCT_VEH t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_VEH_EFF_STRT_DT = t2.ACCT_VEH_EFF_STRT_DT AND t1.VEH_ID = t2.VEH_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_TMAT_ACCT_VEH t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_VEH_EFF_STRT_DT = t2.ACCT_VEH_EFF_STRT_DT AND t1.VEH_ID = t2.VEH_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TMAT_ACCT_VEH', 'INSERT INTO NC_TMAT_ACCT_VEH ( SCENARIO_ID,VEH_ID,ACCT_ID,CUST_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,ACCT_VEH_EFF_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,FRST_OWNR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.ACCT_ID,t1.CUST_ID,t1.LOB_NUM,t1.ACCT_VEH_EFF_STRT_DT,t1.ACCT_VEH_EFF_END_DT,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.FRST_OWNR_IND,''UPDATE'',''VALID'' FROM IN_TMAT_ACCT_VEH t1, M_TMAT_ACCT_VEH t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_VEH_EFF_STRT_DT = t2.ACCT_VEH_EFF_STRT_DT AND t1.VEH_ID = t2.VEH_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.VEH_ID <> t2.VEH_ID OR ( t1.VEH_ID IS NULL AND t2.VEH_ID IS NOT NULL) OR (t1.VEH_ID IS NOT NULL AND t2.VEH_ID IS NULL)) OR (t1.ACCT_ID <> t2.ACCT_ID OR ( t1.ACCT_ID IS NULL AND t2.ACCT_ID IS NOT NULL) OR (t1.ACCT_ID IS NOT NULL AND t2.ACCT_ID IS NULL)) OR (t1.CUST_ID <> t2.CUST_ID OR ( t1.CUST_ID IS NULL AND t2.CUST_ID IS NOT NULL) OR (t1.CUST_ID IS NOT NULL AND t2.CUST_ID IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) OR (t1.ACCT_VEH_EFF_STRT_DT <> t2.ACCT_VEH_EFF_STRT_DT OR ( t1.ACCT_VEH_EFF_STRT_DT IS NULL AND t2.ACCT_VEH_EFF_STRT_DT IS NOT NULL) OR (t1.ACCT_VEH_EFF_STRT_DT IS NOT NULL AND t2.ACCT_VEH_EFF_STRT_DT IS NULL)) OR (t1.ACCT_VEH_EFF_END_DT <> t2.ACCT_VEH_EFF_END_DT OR ( t1.ACCT_VEH_EFF_END_DT IS NULL AND t2.ACCT_VEH_EFF_END_DT IS NOT NULL) OR (t1.ACCT_VEH_EFF_END_DT IS NOT NULL AND t2.ACCT_VEH_EFF_END_DT IS NULL)) OR (t1.CURR_PREV_IND <> t2.CURR_PREV_IND OR ( t1.CURR_PREV_IND IS NULL AND t2.CURR_PREV_IND IS NOT NULL) OR (t1.CURR_PREV_IND IS NOT NULL AND t2.CURR_PREV_IND IS NULL)) OR (t1.CNTL_EFF_DT <> t2.CNTL_EFF_DT OR ( t1.CNTL_EFF_DT IS NULL AND t2.CNTL_EFF_DT IS NOT NULL) OR (t1.CNTL_EFF_DT IS NOT NULL AND t2.CNTL_EFF_DT IS NULL)) OR (t1.CNTL_EXP_DT <> t2.CNTL_EXP_DT OR ( t1.CNTL_EXP_DT IS NULL AND t2.CNTL_EXP_DT IS NOT NULL) OR (t1.CNTL_EXP_DT IS NOT NULL AND t2.CNTL_EXP_DT IS NULL)) OR (t1.FRST_OWNR_IND <> t2.FRST_OWNR_IND OR ( t1.FRST_OWNR_IND IS NULL AND t2.FRST_OWNR_IND IS NOT NULL) OR (t1.FRST_OWNR_IND IS NOT NULL AND t2.FRST_OWNR_IND IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_TMAT_ACCT_VEH', 'INSERT INTO NC_TMAT_ACCT_VEH ( SCENARIO_ID,VEH_ID,ACCT_ID,CUST_ID,LOB_NUM,ACCT_VEH_EFF_STRT_DT,ACCT_VEH_EFF_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,FRST_OWNR_IND,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.ACCT_ID,t1.CUST_ID,t1.LOB_NUM,t1.ACCT_VEH_EFF_STRT_DT,t1.ACCT_VEH_EFF_END_DT,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.FRST_OWNR_IND,''ACTIVATE'',''VALID'' FROM IN_TMAT_ACCT_VEH t1, M_TMAT_ACCT_VEH t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.ACCT_VEH_EFF_STRT_DT = t2.ACCT_VEH_EFF_STRT_DT AND t1.VEH_ID = t2.VEH_ID AND t1.ACCT_ID = t2.ACCT_ID AND t1.CUST_ID = t2.CUST_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH', 'INSERT INTO NC_VEH ( SCENARIO_ID,VEH_ID,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VEH_YR,VEH_COLOR,MODL_Trim,SHPG_DT,ORIGNL_SLS_DT,MFGNG_DT,EURO_FIN,BODY_STYL_CD,OEM_MODL_NAME,ENGN_CD,DOOR_STYL_CD,FUEL_type_CD,NVGTN_CD,Telematics_CD,HD_UNIT_type_CD,HD_UNIT_SER_NUM,XMISN_type_CD,HD_UNIT_MODL_NUM,VEH_CTGY_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VEH_YR,VEH_COLOR,MODL_Trim,SHPG_DT,ORIGNL_SLS_DT,MFGNG_DT,EURO_FIN,BODY_STYL_CD,OEM_MODL_NAME,ENGN_CD,DOOR_STYL_CD,FUEL_type_CD,NVGTN_CD,Telematics_CD,HD_UNIT_type_CD,HD_UNIT_SER_NUM,XMISN_type_CD,HD_UNIT_MODL_NUM,VEH_CTGY_CD,LOB_NUM,''INSERT'',''VALID'' FROM IN_VEH t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_VEH t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH', 'INSERT INTO NC_VEH ( SCENARIO_ID,VEH_ID,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VEH_YR,VEH_COLOR,MODL_Trim,SHPG_DT,ORIGNL_SLS_DT,MFGNG_DT,EURO_FIN,BODY_STYL_CD,OEM_MODL_NAME,ENGN_CD,DOOR_STYL_CD,FUEL_type_CD,NVGTN_CD,Telematics_CD,HD_UNIT_type_CD,HD_UNIT_SER_NUM,XMISN_type_CD,HD_UNIT_MODL_NUM,VEH_CTGY_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VEH_YR,VEH_COLOR,MODL_Trim,SHPG_DT,ORIGNL_SLS_DT,MFGNG_DT,EURO_FIN,BODY_STYL_CD,OEM_MODL_NAME,ENGN_CD,DOOR_STYL_CD,FUEL_type_CD,NVGTN_CD,Telematics_CD,HD_UNIT_type_CD,HD_UNIT_SER_NUM,XMISN_type_CD,HD_UNIT_MODL_NUM,VEH_CTGY_CD,LOB_NUM,''DELETE'',''VALID'' FROM M_VEH t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VEH t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_VEH t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH', 'INSERT INTO NC_VEH ( SCENARIO_ID,VEH_ID,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VEH_YR,VEH_COLOR,MODL_Trim,SHPG_DT,ORIGNL_SLS_DT,MFGNG_DT,EURO_FIN,BODY_STYL_CD,OEM_MODL_NAME,ENGN_CD,DOOR_STYL_CD,FUEL_type_CD,NVGTN_CD,Telematics_CD,HD_UNIT_type_CD,HD_UNIT_SER_NUM,XMISN_type_CD,HD_UNIT_MODL_NUM,VEH_CTGY_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.VEH_YR,t1.VEH_COLOR,t1.MODL_Trim,t1.SHPG_DT,t1.ORIGNL_SLS_DT,t1.MFGNG_DT,t1.EURO_FIN,t1.BODY_STYL_CD,t1.OEM_MODL_NAME,t1.ENGN_CD,t1.DOOR_STYL_CD,t1.FUEL_type_CD,t1.NVGTN_CD,t1.Telematics_CD,t1.HD_UNIT_type_CD,t1.HD_UNIT_SER_NUM,t1.XMISN_type_CD,t1.HD_UNIT_MODL_NUM,t1.VEH_CTGY_CD,t1.LOB_NUM,''UPDATE'',''VALID'' FROM IN_VEH t1, M_VEH t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.VEH_ID <> t2.VEH_ID OR ( t1.VEH_ID IS NULL AND t2.VEH_ID IS NOT NULL) OR (t1.VEH_ID IS NOT NULL AND t2.VEH_ID IS NULL)) OR (t1.CURR_PREV_IND <> t2.CURR_PREV_IND OR ( t1.CURR_PREV_IND IS NULL AND t2.CURR_PREV_IND IS NOT NULL) OR (t1.CURR_PREV_IND IS NOT NULL AND t2.CURR_PREV_IND IS NULL)) OR (t1.CNTL_EFF_DT <> t2.CNTL_EFF_DT OR ( t1.CNTL_EFF_DT IS NULL AND t2.CNTL_EFF_DT IS NOT NULL) OR (t1.CNTL_EFF_DT IS NOT NULL AND t2.CNTL_EFF_DT IS NULL)) OR (t1.CNTL_EXP_DT <> t2.CNTL_EXP_DT OR ( t1.CNTL_EXP_DT IS NULL AND t2.CNTL_EXP_DT IS NOT NULL) OR (t1.CNTL_EXP_DT IS NOT NULL AND t2.CNTL_EXP_DT IS NULL)) OR (t1.VEH_YR <> t2.VEH_YR OR ( t1.VEH_YR IS NULL AND t2.VEH_YR IS NOT NULL) OR (t1.VEH_YR IS NOT NULL AND t2.VEH_YR IS NULL)) OR (t1.VEH_COLOR <> t2.VEH_COLOR OR ( t1.VEH_COLOR IS NULL AND t2.VEH_COLOR IS NOT NULL) OR (t1.VEH_COLOR IS NOT NULL AND t2.VEH_COLOR IS NULL)) OR (t1.MODL_Trim <> t2.MODL_Trim OR ( t1.MODL_Trim IS NULL AND t2.MODL_Trim IS NOT NULL) OR (t1.MODL_Trim IS NOT NULL AND t2.MODL_Trim IS NULL)) OR (t1.SHPG_DT <> t2.SHPG_DT OR ( t1.SHPG_DT IS NULL AND t2.SHPG_DT IS NOT NULL) OR (t1.SHPG_DT IS NOT NULL AND t2.SHPG_DT IS NULL)) OR (t1.ORIGNL_SLS_DT <> t2.ORIGNL_SLS_DT OR ( t1.ORIGNL_SLS_DT IS NULL AND t2.ORIGNL_SLS_DT IS NOT NULL) OR (t1.ORIGNL_SLS_DT IS NOT NULL AND t2.ORIGNL_SLS_DT IS NULL)) OR (t1.MFGNG_DT <> t2.MFGNG_DT OR ( t1.MFGNG_DT IS NULL AND t2.MFGNG_DT IS NOT NULL) OR (t1.MFGNG_DT IS NOT NULL AND t2.MFGNG_DT IS NULL)) OR (t1.EURO_FIN <> t2.EURO_FIN OR ( t1.EURO_FIN IS NULL AND t2.EURO_FIN IS NOT NULL) OR (t1.EURO_FIN IS NOT NULL AND t2.EURO_FIN IS NULL)) OR (t1.BODY_STYL_CD <> t2.BODY_STYL_CD OR ( t1.BODY_STYL_CD IS NULL AND t2.BODY_STYL_CD IS NOT NULL) OR (t1.BODY_STYL_CD IS NOT NULL AND t2.BODY_STYL_CD IS NULL)) OR (t1.OEM_MODL_NAME <> t2.OEM_MODL_NAME OR ( t1.OEM_MODL_NAME IS NULL AND t2.OEM_MODL_NAME IS NOT NULL) OR (t1.OEM_MODL_NAME IS NOT NULL AND t2.OEM_MODL_NAME IS NULL)) OR (t1.ENGN_CD <> t2.ENGN_CD OR ( t1.ENGN_CD IS NULL AND t2.ENGN_CD IS NOT NULL) OR (t1.ENGN_CD IS NOT NULL AND t2.ENGN_CD IS NULL)) OR (t1.DOOR_STYL_CD <> t2.DOOR_STYL_CD OR ( t1.DOOR_STYL_CD IS NULL AND t2.DOOR_STYL_CD IS NOT NULL) OR (t1.DOOR_STYL_CD IS NOT NULL AND t2.DOOR_STYL_CD IS NULL)) OR (t1.FUEL_type_CD <> t2.FUEL_type_CD OR ( t1.FUEL_type_CD IS NULL AND t2.FUEL_type_CD IS NOT NULL) OR (t1.FUEL_type_CD IS NOT NULL AND t2.FUEL_type_CD IS NULL)) OR (t1.NVGTN_CD <> t2.NVGTN_CD OR ( t1.NVGTN_CD IS NULL AND t2.NVGTN_CD IS NOT NULL) OR (t1.NVGTN_CD IS NOT NULL AND t2.NVGTN_CD IS NULL)) OR (t1.Telematics_CD <> t2.Telematics_CD OR ( t1.Telematics_CD IS NULL AND t2.Telematics_CD IS NOT NULL) OR (t1.Telematics_CD IS NOT NULL AND t2.Telematics_CD IS NULL)) OR (t1.HD_UNIT_type_CD <> t2.HD_UNIT_type_CD OR ( t1.HD_UNIT_type_CD IS NULL AND t2.HD_UNIT_type_CD IS NOT NULL) OR (t1.HD_UNIT_type_CD IS NOT NULL AND t2.HD_UNIT_type_CD IS NULL)) OR (t1.HD_UNIT_SER_NUM <> t2.HD_UNIT_SER_NUM OR ( t1.HD_UNIT_SER_NUM IS NULL AND t2.HD_UNIT_SER_NUM IS NOT NULL) OR (t1.HD_UNIT_SER_NUM IS NOT NULL AND t2.HD_UNIT_SER_NUM IS NULL)) OR (t1.XMISN_type_CD <> t2.XMISN_type_CD OR ( t1.XMISN_type_CD IS NULL AND t2.XMISN_type_CD IS NOT NULL) OR (t1.XMISN_type_CD IS NOT NULL AND t2.XMISN_type_CD IS NULL)) OR (t1.HD_UNIT_MODL_NUM <> t2.HD_UNIT_MODL_NUM OR ( t1.HD_UNIT_MODL_NUM IS NULL AND t2.HD_UNIT_MODL_NUM IS NOT NULL) OR (t1.HD_UNIT_MODL_NUM IS NOT NULL AND t2.HD_UNIT_MODL_NUM IS NULL)) OR (t1.VEH_CTGY_CD <> t2.VEH_CTGY_CD OR ( t1.VEH_CTGY_CD IS NULL AND t2.VEH_CTGY_CD IS NOT NULL) OR (t1.VEH_CTGY_CD IS NOT NULL AND t2.VEH_CTGY_CD IS NULL)) OR (t1.LOB_NUM <> t2.LOB_NUM OR ( t1.LOB_NUM IS NULL AND t2.LOB_NUM IS NOT NULL) OR (t1.LOB_NUM IS NOT NULL AND t2.LOB_NUM IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH', 'INSERT INTO NC_VEH ( SCENARIO_ID,VEH_ID,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VEH_YR,VEH_COLOR,MODL_Trim,SHPG_DT,ORIGNL_SLS_DT,MFGNG_DT,EURO_FIN,BODY_STYL_CD,OEM_MODL_NAME,ENGN_CD,DOOR_STYL_CD,FUEL_type_CD,NVGTN_CD,Telematics_CD,HD_UNIT_type_CD,HD_UNIT_SER_NUM,XMISN_type_CD,HD_UNIT_MODL_NUM,VEH_CTGY_CD,LOB_NUM,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.VEH_YR,t1.VEH_COLOR,t1.MODL_Trim,t1.SHPG_DT,t1.ORIGNL_SLS_DT,t1.MFGNG_DT,t1.EURO_FIN,t1.BODY_STYL_CD,t1.OEM_MODL_NAME,t1.ENGN_CD,t1.DOOR_STYL_CD,t1.FUEL_type_CD,t1.NVGTN_CD,t1.Telematics_CD,t1.HD_UNIT_type_CD,t1.HD_UNIT_SER_NUM,t1.XMISN_type_CD,t1.HD_UNIT_MODL_NUM,t1.VEH_CTGY_CD,t1.LOB_NUM,''ACTIVATE'',''VALID'' FROM IN_VEH t1, M_VEH t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_ADDITIONAL_SPEC', 'INSERT INTO NC_VEH_ADDITIONAL_SPEC ( SCENARIO_ID,VEH_ID,VEH_SPEC_TYPE,VEH_SPEC_MEAS_CD,VEH_SPEC_VAL,VEH_SPEC_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,VEH_SPEC_TYPE,VEH_SPEC_MEAS_CD,VEH_SPEC_VAL,VEH_SPEC_DESC,''INSERT'',''VALID'' FROM IN_VEH_ADDITIONAL_SPEC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_VEH_ADDITIONAL_SPEC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND t1.VEH_SPEC_TYPE = t2.VEH_SPEC_TYPE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_ADDITIONAL_SPEC', 'INSERT INTO NC_VEH_ADDITIONAL_SPEC ( SCENARIO_ID,VEH_ID,VEH_SPEC_TYPE,VEH_SPEC_MEAS_CD,VEH_SPEC_VAL,VEH_SPEC_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,VEH_SPEC_TYPE,VEH_SPEC_MEAS_CD,VEH_SPEC_VAL,VEH_SPEC_DESC,''DELETE'',''VALID'' FROM M_VEH_ADDITIONAL_SPEC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VEH_ADDITIONAL_SPEC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND t1.VEH_SPEC_TYPE = t2.VEH_SPEC_TYPE ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_VEH_ADDITIONAL_SPEC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND t1.VEH_SPEC_TYPE = t2.VEH_SPEC_TYPE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_ADDITIONAL_SPEC', 'INSERT INTO NC_VEH_ADDITIONAL_SPEC ( SCENARIO_ID,VEH_ID,VEH_SPEC_TYPE,VEH_SPEC_MEAS_CD,VEH_SPEC_VAL,VEH_SPEC_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.VEH_SPEC_TYPE,t1.VEH_SPEC_MEAS_CD,t1.VEH_SPEC_VAL,t1.VEH_SPEC_DESC,''UPDATE'',''VALID'' FROM IN_VEH_ADDITIONAL_SPEC t1, M_VEH_ADDITIONAL_SPEC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND t1.VEH_SPEC_TYPE = t2.VEH_SPEC_TYPE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.VEH_ID <> t2.VEH_ID OR ( t1.VEH_ID IS NULL AND t2.VEH_ID IS NOT NULL) OR (t1.VEH_ID IS NOT NULL AND t2.VEH_ID IS NULL)) OR (t1.VEH_SPEC_TYPE <> t2.VEH_SPEC_TYPE OR ( t1.VEH_SPEC_TYPE IS NULL AND t2.VEH_SPEC_TYPE IS NOT NULL) OR (t1.VEH_SPEC_TYPE IS NOT NULL AND t2.VEH_SPEC_TYPE IS NULL)) OR (t1.VEH_SPEC_MEAS_CD <> t2.VEH_SPEC_MEAS_CD OR ( t1.VEH_SPEC_MEAS_CD IS NULL AND t2.VEH_SPEC_MEAS_CD IS NOT NULL) OR (t1.VEH_SPEC_MEAS_CD IS NOT NULL AND t2.VEH_SPEC_MEAS_CD IS NULL)) OR (t1.VEH_SPEC_VAL <> t2.VEH_SPEC_VAL OR ( t1.VEH_SPEC_VAL IS NULL AND t2.VEH_SPEC_VAL IS NOT NULL) OR (t1.VEH_SPEC_VAL IS NOT NULL AND t2.VEH_SPEC_VAL IS NULL)) OR (t1.VEH_SPEC_DESC <> t2.VEH_SPEC_DESC OR ( t1.VEH_SPEC_DESC IS NULL AND t2.VEH_SPEC_DESC IS NOT NULL) OR (t1.VEH_SPEC_DESC IS NOT NULL AND t2.VEH_SPEC_DESC IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_ADDITIONAL_SPEC', 'INSERT INTO NC_VEH_ADDITIONAL_SPEC ( SCENARIO_ID,VEH_ID,VEH_SPEC_TYPE,VEH_SPEC_MEAS_CD,VEH_SPEC_VAL,VEH_SPEC_DESC,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.VEH_SPEC_TYPE,t1.VEH_SPEC_MEAS_CD,t1.VEH_SPEC_VAL,t1.VEH_SPEC_DESC,''ACTIVATE'',''VALID'' FROM IN_VEH_ADDITIONAL_SPEC t1, M_VEH_ADDITIONAL_SPEC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND t1.VEH_SPEC_TYPE = t2.VEH_SPEC_TYPE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_BASE_SPEC', 'INSERT INTO NC_VEH_BASE_SPEC ( SCENARIO_ID,VEH_ID,ENGN_NAME,ENGN_BLCK_CD,ENGN_CYLINDERS,ENGN_Valves,ENGN_INDUCTN,ENGN_SIZE,WHEL_BASE,GRS_WT_RNG_LOW_VAL,GRS_WT_RNG_HIGH_VAL,RSTRNT_type,BRAK_SYS,DRV_type_CD,Rear_AXLE,BODY_SUB_TYPE,BD_LGTH,XMISN_SPEED_LOW_VAL,MFGR_PKG_CD,MFGNG_CTRY,PLT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,ENGN_NAME,ENGN_BLCK_CD,ENGN_CYLINDERS,ENGN_Valves,ENGN_INDUCTN,ENGN_SIZE,WHEL_BASE,GRS_WT_RNG_LOW_VAL,GRS_WT_RNG_HIGH_VAL,RSTRNT_type,BRAK_SYS,DRV_type_CD,Rear_AXLE,BODY_SUB_TYPE,BD_LGTH,XMISN_SPEED_LOW_VAL,MFGR_PKG_CD,MFGNG_CTRY,PLT_NAME,''INSERT'',''VALID'' FROM IN_VEH_BASE_SPEC t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_VEH_BASE_SPEC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_BASE_SPEC', 'INSERT INTO NC_VEH_BASE_SPEC ( SCENARIO_ID,VEH_ID,ENGN_NAME,ENGN_BLCK_CD,ENGN_CYLINDERS,ENGN_Valves,ENGN_INDUCTN,ENGN_SIZE,WHEL_BASE,GRS_WT_RNG_LOW_VAL,GRS_WT_RNG_HIGH_VAL,RSTRNT_type,BRAK_SYS,DRV_type_CD,Rear_AXLE,BODY_SUB_TYPE,BD_LGTH,XMISN_SPEED_LOW_VAL,MFGR_PKG_CD,MFGNG_CTRY,PLT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,ENGN_NAME,ENGN_BLCK_CD,ENGN_CYLINDERS,ENGN_Valves,ENGN_INDUCTN,ENGN_SIZE,WHEL_BASE,GRS_WT_RNG_LOW_VAL,GRS_WT_RNG_HIGH_VAL,RSTRNT_type,BRAK_SYS,DRV_type_CD,Rear_AXLE,BODY_SUB_TYPE,BD_LGTH,XMISN_SPEED_LOW_VAL,MFGR_PKG_CD,MFGNG_CTRY,PLT_NAME,''DELETE'',''VALID'' FROM M_VEH_BASE_SPEC t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VEH_BASE_SPEC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_VEH_BASE_SPEC t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_BASE_SPEC', 'INSERT INTO NC_VEH_BASE_SPEC ( SCENARIO_ID,VEH_ID,ENGN_NAME,ENGN_BLCK_CD,ENGN_CYLINDERS,ENGN_Valves,ENGN_INDUCTN,ENGN_SIZE,WHEL_BASE,GRS_WT_RNG_LOW_VAL,GRS_WT_RNG_HIGH_VAL,RSTRNT_type,BRAK_SYS,DRV_type_CD,Rear_AXLE,BODY_SUB_TYPE,BD_LGTH,XMISN_SPEED_LOW_VAL,MFGR_PKG_CD,MFGNG_CTRY,PLT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.ENGN_NAME,t1.ENGN_BLCK_CD,t1.ENGN_CYLINDERS,t1.ENGN_Valves,t1.ENGN_INDUCTN,t1.ENGN_SIZE,t1.WHEL_BASE,t1.GRS_WT_RNG_LOW_VAL,t1.GRS_WT_RNG_HIGH_VAL,t1.RSTRNT_type,t1.BRAK_SYS,t1.DRV_type_CD,t1.Rear_AXLE,t1.BODY_SUB_TYPE,t1.BD_LGTH,t1.XMISN_SPEED_LOW_VAL,t1.MFGR_PKG_CD,t1.MFGNG_CTRY,t1.PLT_NAME,''UPDATE'',''VALID'' FROM IN_VEH_BASE_SPEC t1, M_VEH_BASE_SPEC t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.VEH_ID <> t2.VEH_ID OR ( t1.VEH_ID IS NULL AND t2.VEH_ID IS NOT NULL) OR (t1.VEH_ID IS NOT NULL AND t2.VEH_ID IS NULL)) OR (t1.ENGN_NAME <> t2.ENGN_NAME OR ( t1.ENGN_NAME IS NULL AND t2.ENGN_NAME IS NOT NULL) OR (t1.ENGN_NAME IS NOT NULL AND t2.ENGN_NAME IS NULL)) OR (t1.ENGN_BLCK_CD <> t2.ENGN_BLCK_CD OR ( t1.ENGN_BLCK_CD IS NULL AND t2.ENGN_BLCK_CD IS NOT NULL) OR (t1.ENGN_BLCK_CD IS NOT NULL AND t2.ENGN_BLCK_CD IS NULL)) OR (t1.ENGN_Cylinders <> t2.ENGN_Cylinders OR ( t1.ENGN_Cylinders IS NULL AND t2.ENGN_Cylinders IS NOT NULL) OR (t1.ENGN_Cylinders IS NOT NULL AND t2.ENGN_Cylinders IS NULL)) OR (t1.ENGN_Valves <> t2.ENGN_Valves OR ( t1.ENGN_Valves IS NULL AND t2.ENGN_Valves IS NOT NULL) OR (t1.ENGN_Valves IS NOT NULL AND t2.ENGN_Valves IS NULL)) OR (t1.ENGN_INDUCTN <> t2.ENGN_INDUCTN OR ( t1.ENGN_INDUCTN IS NULL AND t2.ENGN_INDUCTN IS NOT NULL) OR (t1.ENGN_INDUCTN IS NOT NULL AND t2.ENGN_INDUCTN IS NULL)) OR (t1.ENGN_SIZE <> t2.ENGN_SIZE OR ( t1.ENGN_SIZE IS NULL AND t2.ENGN_SIZE IS NOT NULL) OR (t1.ENGN_SIZE IS NOT NULL AND t2.ENGN_SIZE IS NULL)) OR (t1.WHEL_BASE <> t2.WHEL_BASE OR ( t1.WHEL_BASE IS NULL AND t2.WHEL_BASE IS NOT NULL) OR (t1.WHEL_BASE IS NOT NULL AND t2.WHEL_BASE IS NULL)) OR (t1.GRS_WT_RNG_LOW_VAL <> t2.GRS_WT_RNG_LOW_VAL OR ( t1.GRS_WT_RNG_LOW_VAL IS NULL AND t2.GRS_WT_RNG_LOW_VAL IS NOT NULL) OR (t1.GRS_WT_RNG_LOW_VAL IS NOT NULL AND t2.GRS_WT_RNG_LOW_VAL IS NULL)) OR (t1.GRS_WT_RNG_HIGH_VAL <> t2.GRS_WT_RNG_HIGH_VAL OR ( t1.GRS_WT_RNG_HIGH_VAL IS NULL AND t2.GRS_WT_RNG_HIGH_VAL IS NOT NULL) OR (t1.GRS_WT_RNG_HIGH_VAL IS NOT NULL AND t2.GRS_WT_RNG_HIGH_VAL IS NULL)) OR (t1.RSTRNT_type <> t2.RSTRNT_type OR ( t1.RSTRNT_type IS NULL AND t2.RSTRNT_type IS NOT NULL) OR (t1.RSTRNT_type IS NOT NULL AND t2.RSTRNT_type IS NULL)) OR (t1.BRAK_SYS <> t2.BRAK_SYS OR ( t1.BRAK_SYS IS NULL AND t2.BRAK_SYS IS NOT NULL) OR (t1.BRAK_SYS IS NOT NULL AND t2.BRAK_SYS IS NULL)) OR (t1.DRV_type_CD <> t2.DRV_type_CD OR ( t1.DRV_type_CD IS NULL AND t2.DRV_type_CD IS NOT NULL) OR (t1.DRV_type_CD IS NOT NULL AND t2.DRV_type_CD IS NULL)) OR (t1.Rear_AXLE <> t2.Rear_AXLE OR ( t1.Rear_AXLE IS NULL AND t2.Rear_AXLE IS NOT NULL) OR (t1.Rear_AXLE IS NOT NULL AND t2.Rear_AXLE IS NULL)) OR (t1.BODY_SUB_type <> t2.BODY_SUB_type OR ( t1.BODY_SUB_type IS NULL AND t2.BODY_SUB_type IS NOT NULL) OR (t1.BODY_SUB_type IS NOT NULL AND t2.BODY_SUB_type IS NULL)) OR (t1.BD_LGTH <> t2.BD_LGTH OR ( t1.BD_LGTH IS NULL AND t2.BD_LGTH IS NOT NULL) OR (t1.BD_LGTH IS NOT NULL AND t2.BD_LGTH IS NULL)) OR (t1.XMISN_SPEED_LOW_VAL <> t2.XMISN_SPEED_LOW_VAL OR ( t1.XMISN_SPEED_LOW_VAL IS NULL AND t2.XMISN_SPEED_LOW_VAL IS NOT NULL) OR (t1.XMISN_SPEED_LOW_VAL IS NOT NULL AND t2.XMISN_SPEED_LOW_VAL IS NULL)) OR (t1.MFGR_PKG_CD <> t2.MFGR_PKG_CD OR ( t1.MFGR_PKG_CD IS NULL AND t2.MFGR_PKG_CD IS NOT NULL) OR (t1.MFGR_PKG_CD IS NOT NULL AND t2.MFGR_PKG_CD IS NULL)) OR (t1.MFGNG_CTRY <> t2.MFGNG_CTRY OR ( t1.MFGNG_CTRY IS NULL AND t2.MFGNG_CTRY IS NOT NULL) OR (t1.MFGNG_CTRY IS NOT NULL AND t2.MFGNG_CTRY IS NULL)) OR (t1.PLT_NAME <> t2.PLT_NAME OR ( t1.PLT_NAME IS NULL AND t2.PLT_NAME IS NOT NULL) OR (t1.PLT_NAME IS NOT NULL AND t2.PLT_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_BASE_SPEC', 'INSERT INTO NC_VEH_BASE_SPEC ( SCENARIO_ID,VEH_ID,ENGN_NAME,ENGN_BLCK_CD,ENGN_CYLINDERS,ENGN_Valves,ENGN_INDUCTN,ENGN_SIZE,WHEL_BASE,GRS_WT_RNG_LOW_VAL,GRS_WT_RNG_HIGH_VAL,RSTRNT_type,BRAK_SYS,DRV_type_CD,Rear_AXLE,BODY_SUB_TYPE,BD_LGTH,XMISN_SPEED_LOW_VAL,MFGR_PKG_CD,MFGNG_CTRY,PLT_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.ENGN_NAME,t1.ENGN_BLCK_CD,t1.ENGN_CYLINDERS,t1.ENGN_Valves,t1.ENGN_INDUCTN,t1.ENGN_SIZE,t1.WHEL_BASE,t1.GRS_WT_RNG_LOW_VAL,t1.GRS_WT_RNG_HIGH_VAL,t1.RSTRNT_type,t1.BRAK_SYS,t1.DRV_type_CD,t1.Rear_AXLE,t1.BODY_SUB_TYPE,t1.BD_LGTH,t1.XMISN_SPEED_LOW_VAL,t1.MFGR_PKG_CD,t1.MFGNG_CTRY,t1.PLT_NAME,''ACTIVATE'',''VALID'' FROM IN_VEH_BASE_SPEC t1, M_VEH_BASE_SPEC t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_DEVICE', 'INSERT INTO NC_VEH_DEVICE ( SCENARIO_ID,DEVICE_ID,VEH_ID,INSTLTN_DT,VEH_EFF_STRT_DT,SCRAP_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_ID,VEH_ID,INSTLTN_DT,VEH_EFF_STRT_DT,SCRAP_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,''INSERT'',''VALID'' FROM IN_VEH_DEVICE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_VEH_DEVICE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.VEH_ID = t2.VEH_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_DEVICE', 'INSERT INTO NC_VEH_DEVICE ( SCENARIO_ID,DEVICE_ID,VEH_ID,INSTLTN_DT,VEH_EFF_STRT_DT,SCRAP_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,DEVICE_ID,VEH_ID,INSTLTN_DT,VEH_EFF_STRT_DT,SCRAP_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,''DELETE'',''VALID'' FROM M_VEH_DEVICE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VEH_DEVICE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.VEH_ID = t2.VEH_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_VEH_DEVICE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.VEH_ID = t2.VEH_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_DEVICE', 'INSERT INTO NC_VEH_DEVICE ( SCENARIO_ID,DEVICE_ID,VEH_ID,INSTLTN_DT,VEH_EFF_STRT_DT,SCRAP_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_ID,t1.VEH_ID,t1.INSTLTN_DT,t1.VEH_EFF_STRT_DT,t1.SCRAP_DT,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,''UPDATE'',''VALID'' FROM IN_VEH_DEVICE t1, M_VEH_DEVICE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.VEH_ID = t2.VEH_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.DEVICE_ID <> t2.DEVICE_ID OR ( t1.DEVICE_ID IS NULL AND t2.DEVICE_ID IS NOT NULL) OR (t1.DEVICE_ID IS NOT NULL AND t2.DEVICE_ID IS NULL)) OR (t1.VEH_ID <> t2.VEH_ID OR ( t1.VEH_ID IS NULL AND t2.VEH_ID IS NOT NULL) OR (t1.VEH_ID IS NOT NULL AND t2.VEH_ID IS NULL)) OR (t1.INSTLTN_DT <> t2.INSTLTN_DT OR ( t1.INSTLTN_DT IS NULL AND t2.INSTLTN_DT IS NOT NULL) OR (t1.INSTLTN_DT IS NOT NULL AND t2.INSTLTN_DT IS NULL)) OR (t1.VEH_EFF_STRT_DT <> t2.VEH_EFF_STRT_DT OR ( t1.VEH_EFF_STRT_DT IS NULL AND t2.VEH_EFF_STRT_DT IS NOT NULL) OR (t1.VEH_EFF_STRT_DT IS NOT NULL AND t2.VEH_EFF_STRT_DT IS NULL)) OR (t1.SCRAP_DT <> t2.SCRAP_DT OR ( t1.SCRAP_DT IS NULL AND t2.SCRAP_DT IS NOT NULL) OR (t1.SCRAP_DT IS NOT NULL AND t2.SCRAP_DT IS NULL)) OR (t1.CURR_PREV_IND <> t2.CURR_PREV_IND OR ( t1.CURR_PREV_IND IS NULL AND t2.CURR_PREV_IND IS NOT NULL) OR (t1.CURR_PREV_IND IS NOT NULL AND t2.CURR_PREV_IND IS NULL)) OR (t1.CNTL_EFF_DT <> t2.CNTL_EFF_DT OR ( t1.CNTL_EFF_DT IS NULL AND t2.CNTL_EFF_DT IS NOT NULL) OR (t1.CNTL_EFF_DT IS NOT NULL AND t2.CNTL_EFF_DT IS NULL)) OR (t1.CNTL_EXP_DT <> t2.CNTL_EXP_DT OR ( t1.CNTL_EXP_DT IS NULL AND t2.CNTL_EXP_DT IS NOT NULL) OR (t1.CNTL_EXP_DT IS NOT NULL AND t2.CNTL_EXP_DT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_DEVICE', 'INSERT INTO NC_VEH_DEVICE ( SCENARIO_ID,DEVICE_ID,VEH_ID,INSTLTN_DT,VEH_EFF_STRT_DT,SCRAP_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.DEVICE_ID,t1.VEH_ID,t1.INSTLTN_DT,t1.VEH_EFF_STRT_DT,t1.SCRAP_DT,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,''ACTIVATE'',''VALID'' FROM IN_VEH_DEVICE t1, M_VEH_DEVICE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.DEVICE_ID = t2.DEVICE_ID AND t1.VEH_ID = t2.VEH_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_FEAT', 'INSERT INTO NC_VEH_FEAT ( SCENARIO_ID,VEH_ID,FEAT_CD,VEH_FEAT_STS_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,FEAT_CD,VEH_FEAT_STS_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,''INSERT'',''VALID'' FROM IN_VEH_FEAT t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_VEH_FEAT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FEAT_CD = t2.FEAT_CD AND t1.VEH_ID = t2.VEH_ID )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_FEAT', 'INSERT INTO NC_VEH_FEAT ( SCENARIO_ID,VEH_ID,FEAT_CD,VEH_FEAT_STS_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,FEAT_CD,VEH_FEAT_STS_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,''DELETE'',''VALID'' FROM M_VEH_FEAT t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VEH_FEAT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FEAT_CD = t2.FEAT_CD AND t1.VEH_ID = t2.VEH_ID ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_VEH_FEAT t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FEAT_CD = t2.FEAT_CD AND t1.VEH_ID = t2.VEH_ID));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_FEAT', 'INSERT INTO NC_VEH_FEAT ( SCENARIO_ID,VEH_ID,FEAT_CD,VEH_FEAT_STS_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.FEAT_CD,t1.VEH_FEAT_STS_CD,t1.FEAT_SETUP_STRT_DT,t1.FEAT_SETUP_END_DT,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,''UPDATE'',''VALID'' FROM IN_VEH_FEAT t1, M_VEH_FEAT t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FEAT_CD = t2.FEAT_CD AND t1.VEH_ID = t2.VEH_ID AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.VEH_ID <> t2.VEH_ID OR ( t1.VEH_ID IS NULL AND t2.VEH_ID IS NOT NULL) OR (t1.VEH_ID IS NOT NULL AND t2.VEH_ID IS NULL)) OR (t1.FEAT_CD <> t2.FEAT_CD OR ( t1.FEAT_CD IS NULL AND t2.FEAT_CD IS NOT NULL) OR (t1.FEAT_CD IS NOT NULL AND t2.FEAT_CD IS NULL)) OR (t1.VEH_FEAT_STS_CD <> t2.VEH_FEAT_STS_CD OR ( t1.VEH_FEAT_STS_CD IS NULL AND t2.VEH_FEAT_STS_CD IS NOT NULL) OR (t1.VEH_FEAT_STS_CD IS NOT NULL AND t2.VEH_FEAT_STS_CD IS NULL)) OR (t1.FEAT_SETUP_STRT_DT <> t2.FEAT_SETUP_STRT_DT OR ( t1.FEAT_SETUP_STRT_DT IS NULL AND t2.FEAT_SETUP_STRT_DT IS NOT NULL) OR (t1.FEAT_SETUP_STRT_DT IS NOT NULL AND t2.FEAT_SETUP_STRT_DT IS NULL)) OR (t1.FEAT_SETUP_END_DT <> t2.FEAT_SETUP_END_DT OR ( t1.FEAT_SETUP_END_DT IS NULL AND t2.FEAT_SETUP_END_DT IS NOT NULL) OR (t1.FEAT_SETUP_END_DT IS NOT NULL AND t2.FEAT_SETUP_END_DT IS NULL)) OR (t1.CURR_PREV_IND <> t2.CURR_PREV_IND OR ( t1.CURR_PREV_IND IS NULL AND t2.CURR_PREV_IND IS NOT NULL) OR (t1.CURR_PREV_IND IS NOT NULL AND t2.CURR_PREV_IND IS NULL)) OR (t1.CNTL_EFF_DT <> t2.CNTL_EFF_DT OR ( t1.CNTL_EFF_DT IS NULL AND t2.CNTL_EFF_DT IS NOT NULL) OR (t1.CNTL_EFF_DT IS NOT NULL AND t2.CNTL_EFF_DT IS NULL)) OR (t1.CNTL_EXP_DT <> t2.CNTL_EXP_DT OR ( t1.CNTL_EXP_DT IS NULL AND t2.CNTL_EXP_DT IS NOT NULL) OR (t1.CNTL_EXP_DT IS NOT NULL AND t2.CNTL_EXP_DT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_FEAT', 'INSERT INTO NC_VEH_FEAT ( SCENARIO_ID,VEH_ID,FEAT_CD,VEH_FEAT_STS_CD,FEAT_SETUP_STRT_DT,FEAT_SETUP_END_DT,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.FEAT_CD,t1.VEH_FEAT_STS_CD,t1.FEAT_SETUP_STRT_DT,t1.FEAT_SETUP_END_DT,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,''ACTIVATE'',''VALID'' FROM IN_VEH_FEAT t1, M_VEH_FEAT t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.FEAT_CD = t2.FEAT_CD AND t1.VEH_ID = t2.VEH_ID AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_IDNTFTN', 'INSERT INTO NC_VEH_IDNTFTN ( SCENARIO_ID,VEH_ID,VEH_IDNTFTN_type,Idenfication_VAL,VEH_IDNTFTN_STRT_DT,VEH_IDNTFTN_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,VEH_IDNTFTN_type,Idenfication_VAL,VEH_IDNTFTN_STRT_DT,VEH_IDNTFTN_END_DT,''INSERT'',''VALID'' FROM IN_VEH_IDNTFTN t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_VEH_IDNTFTN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND t1.Idenfication_VAL = t2.Idenfication_VAL AND t1.VEH_IDNTFTN_STRT_DT = t2.VEH_IDNTFTN_STRT_DT )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_IDNTFTN', 'INSERT INTO NC_VEH_IDNTFTN ( SCENARIO_ID,VEH_ID,VEH_IDNTFTN_type,Idenfication_VAL,VEH_IDNTFTN_STRT_DT,VEH_IDNTFTN_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_ID,VEH_IDNTFTN_type,Idenfication_VAL,VEH_IDNTFTN_STRT_DT,VEH_IDNTFTN_END_DT,''DELETE'',''VALID'' FROM M_VEH_IDNTFTN t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VEH_IDNTFTN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND t1.Idenfication_VAL = t2.Idenfication_VAL AND t1.VEH_IDNTFTN_STRT_DT = t2.VEH_IDNTFTN_STRT_DT ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_VEH_IDNTFTN t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND t1.Idenfication_VAL = t2.Idenfication_VAL AND t1.VEH_IDNTFTN_STRT_DT = t2.VEH_IDNTFTN_STRT_DT));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_IDNTFTN', 'INSERT INTO NC_VEH_IDNTFTN ( SCENARIO_ID,VEH_ID,VEH_IDNTFTN_type,Idenfication_VAL,VEH_IDNTFTN_STRT_DT,VEH_IDNTFTN_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.VEH_IDNTFTN_type,t1.Idenfication_VAL,t1.VEH_IDNTFTN_STRT_DT,t1.VEH_IDNTFTN_END_DT,''UPDATE'',''VALID'' FROM IN_VEH_IDNTFTN t1, M_VEH_IDNTFTN t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND t1.Idenfication_VAL = t2.Idenfication_VAL AND t1.VEH_IDNTFTN_STRT_DT = t2.VEH_IDNTFTN_STRT_DT AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.VEH_ID <> t2.VEH_ID OR ( t1.VEH_ID IS NULL AND t2.VEH_ID IS NOT NULL) OR (t1.VEH_ID IS NOT NULL AND t2.VEH_ID IS NULL)) OR (t1.VEH_IDNTFTN_type <> t2.VEH_IDNTFTN_type OR ( t1.VEH_IDNTFTN_type IS NULL AND t2.VEH_IDNTFTN_type IS NOT NULL) OR (t1.VEH_IDNTFTN_type IS NOT NULL AND t2.VEH_IDNTFTN_type IS NULL)) OR (t1.Idenfication_VAL <> t2.Idenfication_VAL OR ( t1.Idenfication_VAL IS NULL AND t2.Idenfication_VAL IS NOT NULL) OR (t1.Idenfication_VAL IS NOT NULL AND t2.Idenfication_VAL IS NULL)) OR (t1.VEH_IDNTFTN_STRT_DT <> t2.VEH_IDNTFTN_STRT_DT OR ( t1.VEH_IDNTFTN_STRT_DT IS NULL AND t2.VEH_IDNTFTN_STRT_DT IS NOT NULL) OR (t1.VEH_IDNTFTN_STRT_DT IS NOT NULL AND t2.VEH_IDNTFTN_STRT_DT IS NULL)) OR (t1.VEH_IDNTFTN_END_DT <> t2.VEH_IDNTFTN_END_DT OR ( t1.VEH_IDNTFTN_END_DT IS NULL AND t2.VEH_IDNTFTN_END_DT IS NOT NULL) OR (t1.VEH_IDNTFTN_END_DT IS NOT NULL AND t2.VEH_IDNTFTN_END_DT IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_IDNTFTN', 'INSERT INTO NC_VEH_IDNTFTN ( SCENARIO_ID,VEH_ID,VEH_IDNTFTN_type,Idenfication_VAL,VEH_IDNTFTN_STRT_DT,VEH_IDNTFTN_END_DT,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_ID,t1.VEH_IDNTFTN_type,t1.Idenfication_VAL,t1.VEH_IDNTFTN_STRT_DT,t1.VEH_IDNTFTN_END_DT,''ACTIVATE'',''VALID'' FROM IN_VEH_IDNTFTN t1, M_VEH_IDNTFTN t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_ID = t2.VEH_ID AND t1.Idenfication_VAL = t2.Idenfication_VAL AND t1.VEH_IDNTFTN_STRT_DT = t2.VEH_IDNTFTN_STRT_DT AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_MAKE', 'INSERT INTO NC_VEH_MAKE ( SCENARIO_ID,VEH_MAKE,VEH_MAKE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_MAKE,VEH_MAKE_NAME,''INSERT'',''VALID'' FROM IN_VEH_MAKE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_VEH_MAKE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_MAKE = t2.VEH_MAKE )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_MAKE', 'INSERT INTO NC_VEH_MAKE ( SCENARIO_ID,VEH_MAKE,VEH_MAKE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VEH_MAKE,VEH_MAKE_NAME,''DELETE'',''VALID'' FROM M_VEH_MAKE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VEH_MAKE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_MAKE = t2.VEH_MAKE ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_VEH_MAKE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_MAKE = t2.VEH_MAKE));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_MAKE', 'INSERT INTO NC_VEH_MAKE ( SCENARIO_ID,VEH_MAKE,VEH_MAKE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_MAKE,t1.VEH_MAKE_NAME,''UPDATE'',''VALID'' FROM IN_VEH_MAKE t1, M_VEH_MAKE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_MAKE = t2.VEH_MAKE AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.VEH_MAKE <> t2.VEH_MAKE OR ( t1.VEH_MAKE IS NULL AND t2.VEH_MAKE IS NOT NULL) OR (t1.VEH_MAKE IS NOT NULL AND t2.VEH_MAKE IS NULL)) OR (t1.VEH_MAKE_NAME <> t2.VEH_MAKE_NAME OR ( t1.VEH_MAKE_NAME IS NULL AND t2.VEH_MAKE_NAME IS NOT NULL) OR (t1.VEH_MAKE_NAME IS NOT NULL AND t2.VEH_MAKE_NAME IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_MAKE', 'INSERT INTO NC_VEH_MAKE ( SCENARIO_ID,VEH_MAKE,VEH_MAKE_NAME,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VEH_MAKE,t1.VEH_MAKE_NAME,''ACTIVATE'',''VALID'' FROM IN_VEH_MAKE t1, M_VEH_MAKE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.VEH_MAKE = t2.VEH_MAKE AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_MODL', 'INSERT INTO NC_VEH_MODL ( SCENARIO_ID,MODL_CD,OEM_MODL_NAME,VEH_COMRCL_MODL_NAME,VEH_MAKE,SLS_STRT_DT,MODL_DESC,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VIN_PTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MODL_CD,OEM_MODL_NAME,VEH_COMRCL_MODL_NAME,VEH_MAKE,SLS_STRT_DT,MODL_DESC,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VIN_PTN,''INSERT'',''VALID'' FROM IN_VEH_MODL t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM M_VEH_MODL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.OEM_MODL_NAME = t2.OEM_MODL_NAME )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_MODL', 'INSERT INTO NC_VEH_MODL ( SCENARIO_ID,MODL_CD,OEM_MODL_NAME,VEH_COMRCL_MODL_NAME,VEH_MAKE,SLS_STRT_DT,MODL_DESC,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VIN_PTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,MODL_CD,OEM_MODL_NAME,VEH_COMRCL_MODL_NAME,VEH_MAKE,SLS_STRT_DT,MODL_DESC,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VIN_PTN,''DELETE'',''VALID'' FROM M_VEH_MODL t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VEH_MODL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.OEM_MODL_NAME = t2.OEM_MODL_NAME ) AND  NOT_EXISTS ( SELECT ''X'' FROM E_VEH_MODL t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.OEM_MODL_NAME = t2.OEM_MODL_NAME));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_MODL', 'INSERT INTO NC_VEH_MODL ( SCENARIO_ID,MODL_CD,OEM_MODL_NAME,VEH_COMRCL_MODL_NAME,VEH_MAKE,SLS_STRT_DT,MODL_DESC,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VIN_PTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MODL_CD,t1.OEM_MODL_NAME,t1.VEH_COMRCL_MODL_NAME,t1.VEH_MAKE,t1.SLS_STRT_DT,t1.MODL_DESC,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.VIN_PTN,''UPDATE'',''VALID'' FROM IN_VEH_MODL t1, M_VEH_MODL t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.OEM_MODL_NAME = t2.OEM_MODL_NAME AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.MODL_CD <> t2.MODL_CD OR ( t1.MODL_CD IS NULL AND t2.MODL_CD IS NOT NULL) OR (t1.MODL_CD IS NOT NULL AND t2.MODL_CD IS NULL)) OR (t1.OEM_MODL_NAME <> t2.OEM_MODL_NAME OR ( t1.OEM_MODL_NAME IS NULL AND t2.OEM_MODL_NAME IS NOT NULL) OR (t1.OEM_MODL_NAME IS NOT NULL AND t2.OEM_MODL_NAME IS NULL)) OR (t1.VEH_COMRCL_MODL_NAME <> t2.VEH_COMRCL_MODL_NAME OR ( t1.VEH_COMRCL_MODL_NAME IS NULL AND t2.VEH_COMRCL_MODL_NAME IS NOT NULL) OR (t1.VEH_COMRCL_MODL_NAME IS NOT NULL AND t2.VEH_COMRCL_MODL_NAME IS NULL)) OR (t1.VEH_MAKE <> t2.VEH_MAKE OR ( t1.VEH_MAKE IS NULL AND t2.VEH_MAKE IS NOT NULL) OR (t1.VEH_MAKE IS NOT NULL AND t2.VEH_MAKE IS NULL)) OR (t1.SLS_STRT_DT <> t2.SLS_STRT_DT OR ( t1.SLS_STRT_DT IS NULL AND t2.SLS_STRT_DT IS NOT NULL) OR (t1.SLS_STRT_DT IS NOT NULL AND t2.SLS_STRT_DT IS NULL)) OR (t1.MODL_DESC <> t2.MODL_DESC OR ( t1.MODL_DESC IS NULL AND t2.MODL_DESC IS NOT NULL) OR (t1.MODL_DESC IS NOT NULL AND t2.MODL_DESC IS NULL)) OR (t1.CURR_PREV_IND <> t2.CURR_PREV_IND OR ( t1.CURR_PREV_IND IS NULL AND t2.CURR_PREV_IND IS NOT NULL) OR (t1.CURR_PREV_IND IS NOT NULL AND t2.CURR_PREV_IND IS NULL)) OR (t1.CNTL_EFF_DT <> t2.CNTL_EFF_DT OR ( t1.CNTL_EFF_DT IS NULL AND t2.CNTL_EFF_DT IS NOT NULL) OR (t1.CNTL_EFF_DT IS NOT NULL AND t2.CNTL_EFF_DT IS NULL)) OR (t1.CNTL_EXP_DT <> t2.CNTL_EXP_DT OR ( t1.CNTL_EXP_DT IS NULL AND t2.CNTL_EXP_DT IS NOT NULL) OR (t1.CNTL_EXP_DT IS NOT NULL AND t2.CNTL_EXP_DT IS NULL)) OR (t1.VIN_PTN <> t2.VIN_PTN OR ( t1.VIN_PTN IS NULL AND t2.VIN_PTN IS NOT NULL) OR (t1.VIN_PTN IS NOT NULL AND t2.VIN_PTN IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VEH_MODL', 'INSERT INTO NC_VEH_MODL ( SCENARIO_ID,MODL_CD,OEM_MODL_NAME,VEH_COMRCL_MODL_NAME,VEH_MAKE,SLS_STRT_DT,MODL_DESC,CURR_PREV_IND,CNTL_EFF_DT,CNTL_EXP_DT,VIN_PTN,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.MODL_CD,t1.OEM_MODL_NAME,t1.VEH_COMRCL_MODL_NAME,t1.VEH_MAKE,t1.SLS_STRT_DT,t1.MODL_DESC,t1.CURR_PREV_IND,t1.CNTL_EFF_DT,t1.CNTL_EXP_DT,t1.VIN_PTN,''ACTIVATE'',''VALID'' FROM IN_VEH_MODL t1, M_VEH_MODL t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.OEM_MODL_NAME = t2.OEM_MODL_NAME AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VALID_LANGUAGE', 'INSERT INTO NC_VALID_LANGUAGE ( SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''INSERT'',''VALID'' FROM IN_VALID_LANGUAGE t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_VALID_LANGUAGE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Language_Id = t2.Language_Id )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VALID_LANGUAGE', 'INSERT INTO NC_VALID_LANGUAGE ( SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,''DELETE'',''VALID'' FROM MST_VALID_LANGUAGE t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VALID_LANGUAGE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Language_Id = t2.Language_Id ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_VALID_LANGUAGE t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Language_Id = t2.Language_Id));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VALID_LANGUAGE', 'INSERT INTO NC_VALID_LANGUAGE ( SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Language_Id,t1.LANGUAGE_NAME,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''UPDATE'',''VALID'' FROM IN_VALID_LANGUAGE t1, MST_VALID_LANGUAGE t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Language_Id = t2.Language_Id AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.Language_Id <> t2.Language_Id OR ( t1.Language_Id IS NULL AND t2.Language_Id IS NOT NULL) OR (t1.Language_Id IS NOT NULL AND t2.Language_Id IS NULL)) OR (t1.Language_Name <> t2.Language_Name OR ( t1.Language_Name IS NULL AND t2.Language_Name IS NOT NULL) OR (t1.Language_Name IS NOT NULL AND t2.Language_Name IS NULL)) OR (t1.Description <> t2.Description OR ( t1.Description IS NULL AND t2.Description IS NOT NULL) OR (t1.Description IS NOT NULL AND t2.Description IS NULL)) OR (t1.Start_Date <> t2.Start_Date OR ( t1.Start_Date IS NULL AND t2.Start_Date IS NOT NULL) OR (t1.Start_Date IS NOT NULL AND t2.Start_Date IS NULL)) OR (t1.End_Date <> t2.End_Date OR ( t1.End_Date IS NULL AND t2.End_Date IS NOT NULL) OR (t1.End_Date IS NOT NULL AND t2.End_Date IS NULL)) OR (t1.Record_Deleted_Flag <> t2.Record_Deleted_Flag OR ( t1.Record_Deleted_Flag IS NULL AND t2.Record_Deleted_Flag IS NOT NULL) OR (t1.Record_Deleted_Flag IS NOT NULL AND t2.Record_Deleted_Flag IS NULL)) OR (t1.Ctl_Id <> t2.Ctl_Id OR ( t1.Ctl_Id IS NULL AND t2.Ctl_Id IS NOT NULL) OR (t1.Ctl_Id IS NOT NULL AND t2.Ctl_Id IS NULL)) OR (t1.Process_Name <> t2.Process_Name OR ( t1.Process_Name IS NULL AND t2.Process_Name IS NOT NULL) OR (t1.Process_Name IS NOT NULL AND t2.Process_Name IS NULL)) OR (t1.Process_Id <> t2.Process_Id OR ( t1.Process_Id IS NULL AND t2.Process_Id IS NOT NULL) OR (t1.Process_Id IS NOT NULL AND t2.Process_Id IS NULL)) OR (t1.Update_Process_Name <> t2.Update_Process_Name OR ( t1.Update_Process_Name IS NULL AND t2.Update_Process_Name IS NOT NULL) OR (t1.Update_Process_Name IS NOT NULL AND t2.Update_Process_Name IS NULL)) OR (t1.Update_Process_Id <> t2.Update_Process_Id OR ( t1.Update_Process_Id IS NULL AND t2.Update_Process_Id IS NOT NULL) OR (t1.Update_Process_Id IS NOT NULL AND t2.Update_Process_Id IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VALID_LANGUAGE', 'INSERT INTO NC_VALID_LANGUAGE ( SCENARIO_ID,Language_Id,LANGUAGE_NAME,Description,Start_Date,End_Date,Record_Deleted_Flag,Ctl_Id,Process_Name,Process_Id,Update_Process_Name,Update_Process_Id,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.Language_Id,t1.LANGUAGE_NAME,t1.Description,t1.Start_Date,t1.End_Date,t1.Record_Deleted_Flag,t1.Ctl_Id,t1.Process_Name,t1.Process_Id,t1.Update_Process_Name,t1.Update_Process_Id,''ACTIVATE'',''VALID'' FROM IN_VALID_LANGUAGE t1, MST_VALID_LANGUAGE t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.Language_Id = t2.Language_Id AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_DETAILS', 'INSERT INTO NC_VERSION_DETAILS ( SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,''INSERT'',''VALID'' FROM IN_VERSION_DETAILS t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_VERSION_DETAILS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.srcPhyTableName = t2.srcPhyTableName AND t1.versionId = t2.versionId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_DETAILS', 'INSERT INTO NC_VERSION_DETAILS ( SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,''DELETE'',''VALID'' FROM MST_VERSION_DETAILS t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VERSION_DETAILS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.srcPhyTableName = t2.srcPhyTableName AND t1.versionId = t2.versionId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_VERSION_DETAILS t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.srcPhyTableName = t2.srcPhyTableName AND t1.versionId = t2.versionId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_DETAILS', 'INSERT INTO NC_VERSION_DETAILS ( SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VERSION_ID,t1.SRC_PHY_TABLE_NAME,t1.TGT_PHY_TABLE_NAME,t1.SNAPSHOT_REQ_TIME,t1.VER_STATUS,''UPDATE'',''VALID'' FROM IN_VERSION_DETAILS t1, MST_VERSION_DETAILS t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.srcPhyTableName = t2.srcPhyTableName AND t1.versionId = t2.versionId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.versionId <> t2.versionId OR ( t1.versionId IS NULL AND t2.versionId IS NOT NULL) OR (t1.versionId IS NOT NULL AND t2.versionId IS NULL)) OR (t1.srcPhyTableName <> t2.srcPhyTableName OR ( t1.srcPhyTableName IS NULL AND t2.srcPhyTableName IS NOT NULL) OR (t1.srcPhyTableName IS NOT NULL AND t2.srcPhyTableName IS NULL)) OR (t1.tgtPhyTableName <> t2.tgtPhyTableName OR ( t1.tgtPhyTableName IS NULL AND t2.tgtPhyTableName IS NOT NULL) OR (t1.tgtPhyTableName IS NOT NULL AND t2.tgtPhyTableName IS NULL)) OR (t1.snapshotReqTime <> t2.snapshotReqTime OR ( t1.snapshotReqTime IS NULL AND t2.snapshotReqTime IS NOT NULL) OR (t1.snapshotReqTime IS NOT NULL AND t2.snapshotReqTime IS NULL)) OR (t1.verStatus <> t2.verStatus OR ( t1.verStatus IS NULL AND t2.verStatus IS NOT NULL) OR (t1.verStatus IS NOT NULL AND t2.verStatus IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_DETAILS', 'INSERT INTO NC_VERSION_DETAILS ( SCENARIO_ID,VERSION_ID,SRC_PHY_TABLE_NAME,TGT_PHY_TABLE_NAME,SNAPSHOT_REQ_TIME,VER_STATUS,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VERSION_ID,t1.SRC_PHY_TABLE_NAME,t1.TGT_PHY_TABLE_NAME,t1.SNAPSHOT_REQ_TIME,t1.VER_STATUS,''ACTIVATE'',''VALID'' FROM IN_VERSION_DETAILS t1, MST_VERSION_DETAILS t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.srcPhyTableName = t2.srcPhyTableName AND t1.versionId = t2.versionId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_INFO', 'INSERT INTO NC_VERSION_INFO ( SCENARIO_ID,VERSION_ID,VERSION_NAME,CREATION_DATE,REASON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VERSION_ID,VERSION_NAME,CREATION_DATE,REASON,''INSERT'',''VALID'' FROM IN_VERSION_INFO t1  WHERE  NOT EXISTS ( SELECT ''X'' FROM MST_VERSION_INFO t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.versionId = t2.versionId )  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'INSERT');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_INFO', 'INSERT INTO NC_VERSION_INFO ( SCENARIO_ID,VERSION_ID,VERSION_NAME,CREATION_DATE,REASON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,VERSION_ID,VERSION_NAME,CREATION_DATE,REASON,''DELETE'',''VALID'' FROM MST_VERSION_INFO t2  WHERE t2.SYS_ENT_STATE != ''DELETED'' AND t2.SCENARIO_ID IN (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ) AND  NOT_EXISTS ( SELECT ''X'' FROM IN_VERSION_INFO t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.versionId = t2.versionId ) AND  NOT_EXISTS ( SELECT ''X'' FROM ERR_VERSION_INFO t1 WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.versionId = t2.versionId));', 'DELETE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_INFO', 'INSERT INTO NC_VERSION_INFO ( SCENARIO_ID,VERSION_ID,VERSION_NAME,CREATION_DATE,REASON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VERSION_ID,t1.VERSION_NAME,t1.CREATION_DATE,t1.REASON,''UPDATE'',''VALID'' FROM IN_VERSION_INFO t1, MST_VERSION_INFO t2  WHERE  t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.versionId = t2.versionId AND ( (t2.SYS_ENT_STATE <> ''DELETED'') AND ( (t1.versionId <> t2.versionId OR ( t1.versionId IS NULL AND t2.versionId IS NOT NULL) OR (t1.versionId IS NOT NULL AND t2.versionId IS NULL)) OR (t1.versionName <> t2.versionName OR ( t1.versionName IS NULL AND t2.versionName IS NOT NULL) OR (t1.versionName IS NOT NULL AND t2.versionName IS NULL)) OR (t1.creationDate <> t2.creationDate OR ( t1.creationDate IS NULL AND t2.creationDate IS NOT NULL) OR (t1.creationDate IS NOT NULL AND t2.creationDate IS NULL)) OR (t1.reason <> t2.reason OR ( t1.reason IS NULL AND t2.reason IS NOT NULL) OR (t1.reason IS NOT NULL AND t2.reason IS NULL)) )) AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'UPDATE');

INSERT INTO SYS_NC_SQLS VALUES ('IN_VERSION_INFO', 'INSERT INTO NC_VERSION_INFO ( SCENARIO_ID,VERSION_ID,VERSION_NAME,CREATION_DATE,REASON,SYS_NC_TYPE,SYS_NC_STATE) ( SELECT SCENARIO_ID,t1.VERSION_ID,t1.VERSION_NAME,t1.CREATION_DATE,t1.REASON,''ACTIVATE'',''VALID'' FROM IN_VERSION_INFO t1, MST_VERSION_INFO t2  WHERE t1.SCENARIO_ID = t2.SCENARIO_ID  AND t1.versionId = t2.versionId AND ((t2.SYS_ENT_STATE = ''DELETED''))  AND t1.SCENARIO_ID in (SELECT SCENARIOID FROM MST_SCENARIO_MASTER  WHERE IS_PRIMARY = ''TRUE'' ));', 'ACTIVATE');

